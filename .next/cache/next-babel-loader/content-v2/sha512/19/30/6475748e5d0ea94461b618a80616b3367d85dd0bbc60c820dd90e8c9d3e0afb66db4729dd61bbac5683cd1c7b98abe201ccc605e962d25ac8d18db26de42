{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/joinAuction.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Icon, Container, Grid, Statistic } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport registerContract from '../../ethereum/register';\nimport Layout from '../../components/Layout';\nimport DateCountdown from 'react-date-countdown-timer';\n\nvar joinAuction = /*#__PURE__*/function (_Component) {\n  _inherits(joinAuction, _Component);\n\n  var _super = _createSuper(joinAuction);\n\n  function joinAuction(props) {\n    var _this;\n\n    _classCallCheck(this, joinAuction);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts, plasticBaleSC, biddersnumber, highestbid, isJoin;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context.sent;\n              plasticBaleSC = plasticBaleContract(_this.props.address);\n              biddersnumber = 0;\n              highestbid = 0;\n              isJoin = false;\n              plasticBaleSC.getPastEvents(\"allEvents\", {\n                fromBlock: 0,\n                toBlock: 'latest'\n              }, function (error, events) {\n                var myfunction = function myfunction(item) {\n                  if (item.event === 'bidderRegistered') {\n                    biddersnumber++;\n                    item.returnValues['bidderAddress'] === accounts[0] ? isJoin = true : null;\n                  } else if (item.event === 'auctionStarted') {\n                    highestbid = item.returnValues['startingAmount'];\n                  } else if (item.event === 'bidderExited') {\n                    //console.log(item);\n                    item.returnValues['bidderAddress'] === accounts[0] ? isJoin = false : null;\n                    biddersnumber--;\n                  } else if (item.event === 'bidPlaced') {\n                    highestbid = item.returnValues['amount'];\n\n                    _this.findHighestBidder(item.returnValues['biddeAddress']);\n                  }\n                };\n\n                events.forEach(myfunction);\n\n                _this.setState({\n                  totalBidders: biddersnumber,\n                  highestBid: highestbid,\n                  join: isJoin\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onJoinAuction\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var accounts, _accounts, plasticBaleSC;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context2.prev = 5;\n                _context2.next = 8;\n                return web3.eth.getAccounts();\n\n              case 8:\n                _accounts = _context2.sent;\n                plasticBaleSC = plasticBaleContract(_this.props.address);\n                _context2.next = 12;\n                return plasticBaleSC.methods.addBidder(_this.state.registrationSCAddr, _accounts[0]).send({\n                  from: _accounts[0]\n                });\n\n              case 12:\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](5);\n\n                _this.setState({\n                  errorMessage: _context2.t0.message\n                });\n\n              case 17:\n                // if errorMsg is empty, registration is successful\n                if (!_this.state.errorMessage) {\n                  _this.setState({\n                    join: true\n                  });\n                }\n\n                _this.setState({\n                  loading: false\n                });\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[5, 14]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"findHighestBidder\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(address) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context3.sent;\n                _context3.next = 5;\n                return registerContract.methods.getBuyerDetails(address).call(function (error, result) {\n                  this.setState({\n                    highestBidder: result[1],\n                    highestBidderAddress: result[0]\n                  });\n                }.bind(_assertThisInitialized(_this)));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onPlaceBid\", /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n        var accounts, plasticBaleSC;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  loading2: true,\n                  errorMessage: ''\n                });\n\n                _context4.prev = 2;\n                _context4.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context4.sent;\n                plasticBaleSC = plasticBaleContract(_this.props.address);\n                _context4.next = 9;\n                return plasticBaleSC.methods.placeBid(_this.state.registrationSCAddr, _this.state.bid).send({\n                  from: accounts[0],\n                  value: _this.state.bid\n                });\n\n              case 9:\n                _context4.next = 14;\n                break;\n\n              case 11:\n                _context4.prev = 11;\n                _context4.t0 = _context4[\"catch\"](2);\n\n                _this.setState({\n                  errorMessage: _context4.t0.message\n                });\n\n              case 14:\n                // if errorMsg is empty, registration is successful\n                if (!_this.state.errorMessage) _this.setState({\n                  hasNoError: true\n                });\n\n                _this.setState({\n                  loading2: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[2, 11]]);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onExitAuction\", /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(event) {\n        var accounts, plasticBaleSC;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  loading3: true,\n                  errorMessage: ''\n                });\n\n                _context5.prev = 2;\n                _context5.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context5.sent;\n                plasticBaleSC = plasticBaleContract(_this.props.address);\n                _context5.next = 9;\n                return plasticBaleSC.methods.exitAuction(_this.state.registrationSCAddr).send({\n                  from: accounts[0]\n                });\n\n              case 9:\n                _this.setState({\n                  join: false\n                });\n\n                _context5.next = 15;\n                break;\n\n              case 12:\n                _context5.prev = 12;\n                _context5.t0 = _context5[\"catch\"](2);\n\n                _this.setState({\n                  errorMessage: _context5.t0.message\n                });\n\n              case 15:\n                // if errorMsg is empty, registration is successful\n                if (!_this.state.errorMessage) _this.setState({\n                  hasNoError: true\n                });\n\n                _this.setState({\n                  loading3: false\n                });\n\n              case 17:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[2, 12]]);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      join: false,\n      registrationSCAddr: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n      errorMessage: '',\n      loading: false,\n      totalBidders: 0,\n      highestBid: 0,\n      highestBidder: 'No bids placed',\n      highestBidderAddress: '',\n      bid: '',\n      loading2: false,\n      loading3: false\n    };\n    _this.componentDidMount = _this.componentDidMount.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(joinAuction, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var join = this.state.join;\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }), console.log(this.props.address), __jsx(\"div\", {\n        className: \"statistic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }, \"Live Auction\"), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }\n      }, \" Plastic Bale being auctioned:\", __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 18\n        }\n      }, \" \", this.props.address, \" \"), \" \"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"AuctionContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      }, __jsx(Statistic.Group, {\n        widths: \"three\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }\n      }, __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }\n      }, __jsx(Statistic.Value, {\n        text: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 33\n        }\n      }, this.state.highestBid, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 37\n        }\n      }), \"Ether\"), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 33\n        }\n      }, \"Highest Bid\")), __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 29\n        }\n      }, __jsx(Statistic.Value, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 33\n        }\n      }, __jsx(Icon, {\n        name: \"users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 37\n        }\n      }), \" \", this.state.totalBidders), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 33\n        }\n      }, \"Total Bidders\")), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 29\n        }\n      }), __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }\n      }, __jsx(Statistic.Value, {\n        text: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 33\n        }\n      }, __jsx(Icon, {\n        name: \"user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 37\n        }\n      }), \" \", this.state.highestBidder), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 33\n        }\n      }, \"Highest Bidder\"))))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }), join === false ? __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 36\n        }\n      }, __jsx(Grid.Row, {\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }\n      }, __jsx(Grid.Column, {\n        width: 6,\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }\n      }, __jsx(Button, {\n        loading: this.state.loading,\n        onClick: this.onJoinAuction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 29\n        }\n      }, \"Join Auction \")))) : null, join && __jsx(\"div\", {\n        className: \"auctionInput\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }\n      }, __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }\n      }, __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 29\n        }\n      }, __jsx(Grid.Row, {\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 33\n        }\n      }, __jsx(Grid.Column, {\n        width: 4,\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 37\n        }\n      }, __jsx(Form, {\n        onSubmit: this.onPlaceBid,\n        error: !!this.state.errorMessage,\n        success: this.state.hasNoError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 41\n        }\n      }, __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 45\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 49\n        }\n      }, \"Amount\"), __jsx(Input, {\n        value: this.state.bid,\n        label: {\n          basic: true,\n          content: 'Ether'\n        },\n        labelPosition: \"right\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            bid: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 49\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Error!\",\n        content: this.state.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 45\n        }\n      }), __jsx(Message, {\n        success: true,\n        header: \"Success!\",\n        content: \"Bid is Placed!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 45\n        }\n      }), __jsx(Button, {\n        loading: this.state.loading2,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 45\n        }\n      }, \"Place Bid\")), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 41\n        }\n      }), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 41\n        }\n      }, \" You can only exit the auction if no bids were placed!\"), __jsx(Button, {\n        loading: this.state.loading3,\n        onClick: this.onExitAuction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 41\n        }\n      }, \"Exit Auction \")))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(props) {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                //fetches address of the bale from URL\n                address = props.query.address;\n                return _context6.abrupt(\"return\", {\n                  address: address\n                });\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function getInitialProps(_x5) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return joinAuction;\n}(Component);\n\nexport default joinAuction;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/joinAuction.js"],"names":["React","Component","Form","Button","Input","Message","Icon","Container","Grid","Statistic","web3","plasticBaleContract","registerContract","Layout","DateCountdown","joinAuction","props","eth","getAccounts","accounts","plasticBaleSC","address","biddersnumber","highestbid","isJoin","getPastEvents","fromBlock","toBlock","error","events","myfunction","item","event","returnValues","findHighestBidder","forEach","setState","totalBidders","highestBid","join","preventDefault","loading","errorMessage","methods","addBidder","state","registrationSCAddr","send","from","message","getBuyerDetails","call","result","highestBidder","highestBidderAddress","bind","loading2","placeBid","bid","value","hasNoError","loading3","exitAuction","componentDidMount","console","log","onJoinAuction","onPlaceBid","basic","content","target","onExitAuction","query"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Icon, Container, Grid, Statistic } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport registerContract from '../../ethereum/register';\nimport Layout from '../../components/Layout';\nimport DateCountdown from 'react-date-countdown-timer'; \n\nclass joinAuction extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            join: false,\n            registrationSCAddr: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n            errorMessage: '',\n            loading: false,\n            totalBidders: 0,\n            highestBid: 0,\n            \n            highestBidder: 'No bids placed',\n            highestBidderAddress: '',\n            bid: '',\n            loading2: false,\n            loading3: false\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n\n\n    static async getInitialProps(props) {\n        //fetches address of the bale from URL\n        const { address } = props.query;\n\n        return { address };\n    }\n\n    componentDidMount = async () => {\n\n        const accounts = await web3.eth.getAccounts();\n        const plasticBaleSC = plasticBaleContract(this.props.address);\n\n        var biddersnumber = 0;\n        var highestbid = 0;\n        var isJoin = false;\n\n\n        plasticBaleSC.getPastEvents(\"allEvents\", { fromBlock: 0, toBlock: 'latest' }, (error, events) => {\n\n            const myfunction = (item) => {\n\n                if (item.event === 'bidderRegistered') {\n                    biddersnumber++;\n                    item.returnValues['bidderAddress'] === accounts[0] ? isJoin = true : null;\n\n\n                } else if (item.event === 'auctionStarted') {\n                    highestbid = item.returnValues['startingAmount'];\n\n                } else if (item.event === 'bidderExited') {\n                    //console.log(item);\n                    item.returnValues['bidderAddress'] === accounts[0] ? isJoin = false : null;\n                    biddersnumber--;\n\n                } else if (item.event === 'bidPlaced') {\n                    highestbid = item.returnValues['amount'];\n                    this.findHighestBidder(item.returnValues['biddeAddress']);\n\n                }\n\n            };\n\n            events.forEach(myfunction);\n\n            this.setState({\n                totalBidders: biddersnumber,\n                highestBid: highestbid,\n                join: isJoin\n            });\n\n\n        });\n\n\n    };\n\n    onJoinAuction = async (event) => {\n        event.preventDefault();\n        const accounts = await web3.eth.getAccounts();\n\n        this.setState({ loading: true, errorMessage: '' });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const plasticBaleSC = plasticBaleContract(this.props.address);\n\n            await plasticBaleSC.methods\n                .addBidder(this.state.registrationSCAddr, accounts[0])\n                .send({ from: accounts[0] });\n\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage) {\n            this.setState({ join: true });\n        }\n\n        this.setState({ loading: false });\n    };\n\n\n\n    findHighestBidder = async (address) => {\n\n        const accounts = await web3.eth.getAccounts();\n        await registerContract.methods\n            .getBuyerDetails(address).call(function (error, result) {\n                this.setState({\n                    highestBidder: result[1],\n                    highestBidderAddress: result[0],\n                });\n\n            }.bind(this));\n\n    };\n\n\n    onPlaceBid = async (event) => {\n\n        event.preventDefault();\n\n        this.setState({ loading2: true, errorMessage: '' });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const plasticBaleSC = plasticBaleContract(this.props.address);\n            await plasticBaleSC.methods\n                .placeBid(this.state.registrationSCAddr, this.state.bid)\n                .send({ from: accounts[0], value: this.state.bid });\n        }\n        catch (err) {\n            this.setState({ errorMessage: err.message });\n\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage)\n            this.setState({ hasNoError: true });\n\n\n        this.setState({ loading2: false });\n\n    };\n\n\n    onExitAuction = async (event) => {\n\n        event.preventDefault();\n\n        this.setState({ loading3: true, errorMessage: '' });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const plasticBaleSC = plasticBaleContract(this.props.address);\n            await plasticBaleSC.methods\n                .exitAuction(this.state.registrationSCAddr)\n                .send({ from: accounts[0] });\n            this.setState({ join: false });\n        }\n        catch (err) {\n            this.setState({ errorMessage: err.message });\n\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage)\n            this.setState({ hasNoError: true });\n\n\n        this.setState({ loading3: false });\n\n\n    };\n\n\n    render() {\n\n        const { join } = this.state;\n\n        return (\n            <Layout>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n                {console.log(this.props.address)}\n                <div className='statistic'>\n                    <h1>Live Auction</h1>\n                    <h2> Plastic Bale being auctioned:\n                 <h3> {this.props.address} </h3> </h2>\n                    <br />\n\n                    <div className='AuctionContainer'>\n\n                        <Statistic.Group widths='three'>\n                            <Statistic>\n                                <Statistic.Value text>\n                                    {this.state.highestBid}\n                                    <br />\n                            Ether\n                            </Statistic.Value>\n                                <Statistic.Label>Highest Bid</Statistic.Label>\n                            </Statistic>\n\n                            <Statistic>\n                                <Statistic.Value>\n                                    <Icon name='users' /> {this.state.totalBidders}\n                                </Statistic.Value>\n                                <Statistic.Label>Total Bidders</Statistic.Label>\n                            </Statistic>\n\n                            <br />\n\n                            <Statistic>\n                                <Statistic.Value text>\n                                    <Icon name='user' /> {this.state.highestBidder}\n                                    {/*this.state.highestBidderAddress*/}\n                                </Statistic.Value>\n                                <Statistic.Label>Highest Bidder</Statistic.Label>\n                            </Statistic>\n\n\n                        </Statistic.Group>\n                    </div>\n                </div>\n\n                <br />\n                <br />\n                <br />\n\n                {join === false ? (<Grid>\n                    <Grid.Row centered>\n                        <Grid.Column width={6} textAlign=\"center\">\n                            <Button loading={this.state.loading} onClick={this.onJoinAuction}>Join Auction </Button>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                ) : null}\n                \n\n                {join && (\n\n                    <div className='auctionInput'>\n                        <Container>\n                            <Grid>\n                                <Grid.Row centered>\n                                    <Grid.Column width={4} textAlign=\"center\">\n                                        <Form onSubmit={this.onPlaceBid} error={!!this.state.errorMessage} success={this.state.hasNoError}>\n\n                                            <Form.Field>\n                                                <label>Amount</label>\n                                                <Input value={this.state.bid}\n                                                    label={{ basic: true, content: 'Ether' }}\n                                                    labelPosition='right'\n                                                    onChange={event => this.setState({ bid: event.target.value })} />\n                                            </Form.Field>\n\n                                            <Message error header=\"Error!\" content={this.state.errorMessage} />\n\n\n                                            <Message success header=\"Success!\" content=\"Bid is Placed!\" />\n\n\n                                            <Button loading={this.state.loading2} type='submit'>Place Bid</Button>\n                                        </Form>\n\n                                        <br />\n\n                                        <p> You can only exit the auction if no bids were placed!</p>\n                                        <Button loading={this.state.loading3} onClick={this.onExitAuction}>Exit Auction </Button>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                        </Container>\n\n\n                    </div>\n\n                )}\n\n            </Layout>\n        );\n    }\n\n\n\n}\n\nexport default joinAuction; \n"]},"metadata":{},"sourceType":"module"}