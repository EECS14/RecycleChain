{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/track/show.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport web3 from '../../ethereum/web3';\nimport trackingContract from '../../ethereum/tracking'; //import { Divider } from 'semantic-ui-react';\n\nvar show = /*#__PURE__*/function (_Component) {\n  _inherits(show, _Component);\n\n  var _super = _createSuper(show);\n\n  function show(props) {\n    var _this;\n\n    _classCallCheck(this, show);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context.sent;\n              console.log(_this.props.address);\n              trackingContract.events.updateStatusMachine({\n                filter: {\n                  plasticBottleAddress: _this.state.bottlesLogged\n                },\n                fromBlock: 0\n              }, function (error, event) {\n                /*For debugging purposes \n                console.log(event);\n                console.log(this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress'] ));\n                console.log(this.state.rows);\n                console.log(event.returnValues['plasticBottleAddress']);\n                */\n                var index = this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress']);\n                this.updateRow(index, event.returnValues['status']);\n              }.bind(_assertThisInitialized(_this))).on('error', console.error);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(show, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, \"Track \", this.props.address));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(props) {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                //1. fetches address of the bottle from the URL\n                //Perfomed at the server before html is loaded\n                address = props.query.address;\n                return _context2.abrupt(\"return\", {\n                  address: address\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }() //2. fetches all events related to the updating the bottle route\n    // to find address of the entity \n\n  }]);\n\n  return show;\n}(Component); //At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \n\n\nexport default show;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/track/show.js"],"names":["React","Component","web3","trackingContract","show","props","eth","getAccounts","accounts","console","log","address","events","updateStatusMachine","filter","plasticBottleAddress","state","bottlesLogged","fromBlock","error","event","index","indexOf","returnValues","updateRow","bind","on","query"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B,C,CACA;;IAEMC,I;;;;;AAEF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,8IAiBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGH,IAAI,CAACI,GAAL,CAASC,WAAT,EADH;;AAAA;AACdC,cAAAA,QADc;AAEpBC,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAKL,KAAL,CAAWM,OAAvB;AAEAR,cAAAA,gBAAgB,CAACS,MAAjB,CAAwBC,mBAAxB,CAA4C;AACxCC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,oBAAoB,EAAE,MAAKC,KAAL,CAAWC;AAAnC,iBADgC;AACmBC,gBAAAA,SAAS,EAAE;AAD9B,eAA5C,EAEG,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACvB;AACZ;AACA;AACA;AACA;AACA;AACY,oBAAIC,KAAK,GAAG,KAAKL,KAAL,CAAWC,aAAX,CAAyBK,OAAzB,CAAiCF,KAAK,CAACG,YAAN,CAAmB,sBAAnB,CAAjC,CAAZ;AACA,qBAAKC,SAAL,CAAeH,KAAf,EAAsBD,KAAK,CAACG,YAAN,CAAmB,QAAnB,CAAtB;AACH,eATE,CASDE,IATC,+BAFH,EAYKC,EAZL,CAYQ,OAZR,EAYiBjB,OAAO,CAACU,KAZzB;;AAJoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAjBL;;AAEf,UAAKH,KAAL,GAAa,EAAb;AAFe;AAIlB;;;;6BAmCO;AAEJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAW,KAAKX,KAAL,CAAWM,OAAtB,CADJ,CADJ;AAMH;;;;wGAzC2BN,K;;;;;;AAExB;AACA;AACOM,gBAAAA,O,GAAWN,KAAK,CAACsB,K,CAAjBhB,O;kDAEA;AAACA,kBAAAA,OAAO,EAAPA;AAAD,iB;;;;;;;;;;;;;;;QAGP;AACA;;;;;EAlBWV,S,GAqDf;AACA;;;AACA,eAAeG,IAAf","sourcesContent":["import React, { Component } from 'react'; \nimport web3 from '../../ethereum/web3';\nimport trackingContract from '../../ethereum/tracking'; \n//import { Divider } from 'semantic-ui-react';\n\nclass show extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = { \n        };\n    }\n\n   static async getInitialProps(props){\n\n        //1. fetches address of the bottle from the URL\n        //Perfomed at the server before html is loaded\n        const {address} = props.query;\n\n        return {address};\n        }\n\n        //2. fetches all events related to the updating the bottle route\n        // to find address of the entity \n        componentDidMount = async () => {\n        const accounts = await web3.eth.getAccounts();\n        console.log(this.props.address);\n\n        trackingContract.events.updateStatusMachine({\n            filter: { plasticBottleAddress: this.state.bottlesLogged}, fromBlock: 0\n        }, function (error, event) {\n            /*For debugging purposes \n            console.log(event);\n            console.log(this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress'] ));\n            console.log(this.state.rows);\n            console.log(event.returnValues['plasticBottleAddress']);\n            */\n            let index = this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress']);\n            this.updateRow(index, event.returnValues['status']);\n        }.bind(this))\n            .on('error', console.error);\n\n        };\n\n        \n\n    render(){\n        \n        return (\n            <div>\n                <h1>Track {this.props.address}</h1>\n            </div>\n            \n        );\n    }\n    \n    }\n    \n    //At the end of each page, a component is expected to be returned \n    // If not, Next.js throws an error \n    export default show; "]},"metadata":{},"sourceType":"module"}