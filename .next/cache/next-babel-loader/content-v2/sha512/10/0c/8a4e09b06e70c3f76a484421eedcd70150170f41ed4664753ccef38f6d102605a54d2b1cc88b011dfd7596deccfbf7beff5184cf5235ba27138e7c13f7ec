{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/joinAuction.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Icon, Image, Statistic } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport registerContract from '../../ethereum/register';\n\nvar joinAuction = /*#__PURE__*/function (_Component) {\n  _inherits(joinAuction, _Component);\n\n  var _super = _createSuper(joinAuction);\n\n  function joinAuction(props) {\n    var _this;\n\n    _classCallCheck(this, joinAuction);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts, plasticBaleSC, biddersnumber, highestbid, highestbidder;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context.sent;\n              plasticBaleSC = plasticBaleContract(_this.props.address);\n              biddersnumber = 0;\n              highestbid = 0;\n              highestbidder = '';\n              plasticBaleSC.getPastEvents(\"allEvents\", {\n                fromBlock: 0,\n                toBlock: 'latest'\n              }, function (error, events) {\n                console.log(events);\n\n                var myfunction = function myfunction(item) {\n                  if (item.event === 'bidderRegistered') {\n                    //console.log(item);\n                    biddersnumber++; //console.log(biddersnumber);\n                  } else if (item.event === 'auctionStarted') {\n                    highestbid = item.returnValues['startingAmount'];\n                  } else if (item.event === 'bidderExited') {\n                    //console.log(item);\n                    biddersnumber--;\n                  } else if (item.event === 'bidPlaced') {\n                    highestbid = item.returnValues['amount'];\n                    findHighestBidder(item.returnValues['bidderAddress']); //highestbidder = item.returnValues['bidderAddress'];\n                  }\n                };\n\n                events.forEach(myfunction);\n\n                _this.setState({\n                  totalBidders: biddersnumber,\n                  highestBid: highestbid\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onJoinAuction\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var accounts, plasticBaleSC;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context2.prev = 5;\n                plasticBaleSC = plasticBaleContract(_this.props.address);\n                _context2.next = 9;\n                return plasticBaleSC.methods.addBidder(_this.state.registrationSCAddr, accounts[0]).send({\n                  from: accounts[0]\n                });\n\n              case 9:\n                _context2.next = 14;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](5);\n\n                _this.setState({\n                  errorMessage: _context2.t0.message\n                });\n\n              case 14:\n                // if errorMsg is empty, registration is successful\n                if (!_this.state.errorMessage) {\n                  _this.setState({\n                    join: true\n                  });\n                }\n\n                _this.setState({\n                  loading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[5, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"findHighestBidder\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(address) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context3.sent;\n                _context3.next = 5;\n                return registerContract.methods.getBuyerDetails(address).call(function (error, result) {\n                  this.setState({\n                    highestBidder: result[1],\n                    highestBidderAddress: result[0]\n                  });\n                }.bind(_assertThisInitialized(_this)));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onPlaceBid\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var accounts, plasticBaleSC;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context4.sent;\n              plasticBaleSC = plasticBaleContract(_this.props.address);\n              _context4.next = 6;\n              return plasticBaleSC.methods;\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onExitAuction\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    })));\n\n    _this.state = {\n      join: false,\n      registrationSCAddr: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n      errorMessage: '',\n      loading: false,\n      totalBidders: 0,\n      highestBid: 0,\n      highestBidder: 'No bids placed',\n      highestBidderAddress: '',\n      startingPrice: ''\n    };\n    _this.componentDidMount = _this.componentDidMount.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(joinAuction, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var join = this.state.join;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }), console.log(this.props.address), __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, \"Live Auction\"), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, \" Plastic Bale being auctioned: \", this.props.address, \" \"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"AuctionContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, __jsx(Statistic.Group, {\n        widths: \"three\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }, __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }\n      }, __jsx(Statistic.Value, {\n        text: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 29\n        }\n      }, this.state.highestBid, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }\n      }), \"Wei\"), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }\n      }, \"Highest Bid\")), __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }\n      }, __jsx(Statistic.Value, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }\n      }, __jsx(Icon, {\n        name: \"users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 33\n        }\n      }), \" \", this.state.totalBidders), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 29\n        }\n      }, \"Total Bidders\")), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      }), __jsx(Statistic, {\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }\n      }, __jsx(Statistic.Value, {\n        text: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }\n      }, __jsx(Icon, {\n        name: \"user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 33\n        }\n      }), this.state.highestBidder, this.state.highestBidderAddress), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }\n      }, \"Highest Bidder\")))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        onClick: this.onJoinAuction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }, \"Join Auction \"), __jsx(\"div\", {\n        className: \"auctionInput\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }\n      }, __jsx(Form, {\n        onSubmit: this.onPlaceBid,\n        error: !!this.state.errorMessage,\n        success: this.state.hasNoError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, __jsx(Form.Field, {\n        width: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }, \"Amount\"), __jsx(Input, {\n        value: this.state.startingPrice,\n        label: {\n          basic: true,\n          content: 'Wei'\n        },\n        labelPosition: \"right\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            startingPrice: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Error!\",\n        content: this.state.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      }), __jsx(Message, {\n        success: true,\n        header: \"Success!\",\n        content: \"Bid is Placed!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }\n      }, \"Place Bid\")), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }\n      }), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }, \" You can only exit the auction if no bids were placed!\"), __jsx(Button, {\n        loading: this.state.loading,\n        onClick: this.onExitAuction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }\n      }, \"Exit Auction \")));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(props) {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                //fetches address of the bale from URL\n                address = props.query.address;\n                return _context6.abrupt(\"return\", {\n                  address: address\n                });\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function getInitialProps(_x3) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return joinAuction;\n}(Component);\n\nexport default joinAuction;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/joinAuction.js"],"names":["React","Component","Form","Button","Input","Message","Icon","Image","Statistic","web3","plasticBaleContract","registerContract","joinAuction","props","eth","getAccounts","accounts","plasticBaleSC","address","biddersnumber","highestbid","highestbidder","getPastEvents","fromBlock","toBlock","error","events","console","log","myfunction","item","event","returnValues","findHighestBidder","forEach","setState","totalBidders","highestBid","preventDefault","loading","errorMessage","methods","addBidder","state","registrationSCAddr","send","from","message","join","getBuyerDetails","call","result","highestBidder","highestBidderAddress","bind","startingPrice","componentDidMount","onJoinAuction","onPlaceBid","hasNoError","basic","content","target","value","onExitAuction","query"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Icon, Image, Statistic } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport registerContract from '../../ethereum/register';\n\nclass joinAuction extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            join: false,\n            registrationSCAddr: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n            errorMessage: '',\n            loading: false,\n            totalBidders: 0,\n            highestBid: 0,\n            highestBidder:'No bids placed',\n            highestBidderAddress:'',\n            startingPrice:''\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n\n\n    static async getInitialProps(props) {\n        //fetches address of the bale from URL\n        const { address } = props.query;\n    \n        return { address };\n    }\n\n    componentDidMount = async () => {\n\n        const accounts = await web3.eth.getAccounts();\n        const plasticBaleSC = plasticBaleContract(this.props.address); \n\n        var biddersnumber = 0; \n        var highestbid =0;\n        var highestbidder=''; \n\n        plasticBaleSC.getPastEvents(\"allEvents\",{fromBlock: 0, toBlock:'latest'},(error, events)=>{\n            console.log(events);\n\n            const myfunction = (item) => {\n\n                if(item.event==='bidderRegistered'){\n                    //console.log(item);\n                    biddersnumber++; \n                    //console.log(biddersnumber);\n                    \n                }else if(item.event==='auctionStarted'){\n                    highestbid = item.returnValues['startingAmount']; \n\n                }else if (item.event==='bidderExited'){\n                    //console.log(item);\n                    biddersnumber--;\n\n                }else if(item.event==='bidPlaced'){\n                    highestbid = item.returnValues['amount']; \n                    findHighestBidder(item.returnValues['bidderAddress']);\n                    //highestbidder = item.returnValues['bidderAddress'];\n\n                }\n\n            };\n\n            events.forEach(myfunction);\n\n            this.setState({totalBidders: biddersnumber,\n                 highestBid: highestbid});\n           \n\n    });\n\n   \n    };\n\n    onJoinAuction = async (event) => {\n        event.preventDefault();\n        const accounts = await web3.eth.getAccounts();\n\n        this.setState({loading: true, errorMessage: ''});\n\n        try {\n            const plasticBaleSC = plasticBaleContract(this.props.address); \n\n            await plasticBaleSC.methods\n                .addBidder(this.state.registrationSCAddr, accounts[0])\n                .send({ from: accounts[0]});\n\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n            \n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage){\n            this.setState({ join: true }); \n        }\n\n            this.setState({loading: false});\n    };\n\n\n\n    findHighestBidder = async (address) =>{\n        \n        const accounts = await web3.eth.getAccounts();\n        await registerContract.methods\n            .getBuyerDetails(address).call( function (error, result) {\n                this.setState({\n                    highestBidder: result[1],\n                    highestBidderAddress: result[0],\n                });\n\n            }.bind(this));\n\n    };\n\n\n    onPlaceBid = async () => {\n        \n        const accounts = await web3.eth.getAccounts();\n        const plasticBaleSC = plasticBaleContract(this.props.address); \n        await plasticBaleSC.methods\n\n    };\n\n\n    onExitAuction = async () => {\n\n\n    };\n\n\n    render() {\n\n        const{join}=this.state; \n\n        return (\n            <div>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n                 {console.log(this.props.address)}\n\n                <h1>Live Auction</h1>\n                <h2> Plastic Bale being auctioned: {this.props.address} </h2>\n                <br/>\n\n                <div className='AuctionContainer'>\n\n                    <Statistic.Group widths='three'>\n                        <Statistic>\n                            <Statistic.Value text>\n                                {this.state.highestBid}\n                            <br/>\n                            Wei\n                            </Statistic.Value>\n                            <Statistic.Label>Highest Bid</Statistic.Label>\n                        </Statistic>\n\n                        <Statistic>\n                            <Statistic.Value>\n                                <Icon name='users' /> {this.state.totalBidders}\n                      </Statistic.Value>\n                            <Statistic.Label>Total Bidders</Statistic.Label>\n                        </Statistic>\n\n                        <br/>\n\n                        <Statistic size='small' >\n                            <Statistic.Value text>\n                                <Icon name='user' /> \n                                {this.state.highestBidder}\n                                {this.state.highestBidderAddress}\n                      </Statistic.Value>\n                            <Statistic.Label>Highest Bidder</Statistic.Label>\n                        </Statistic>\n\n\n                    </Statistic.Group>\n\n                </div>\n\n          <br/>\n          <br/>\n\n          <Button loading={this.state.loading} onClick={this.onJoinAuction}>Join Auction </Button>\n                \n           {/*  {join && ( */}\n\n                <div className='auctionInput'>\n                <Form onSubmit={this.onPlaceBid} error={!!this.state.errorMessage} success={this.state.hasNoError}>\n\n                    <Form.Field width={4}>\n                        <label>Amount</label>\n                        <Input value={this.state.startingPrice}\n                            label={{ basic: true, content: 'Wei' }}\n                            labelPosition='right'\n                            onChange={event => this.setState({ startingPrice: event.target.value })} />\n                    </Form.Field>\n\n                    <Message error header=\"Error!\" content={this.state.errorMessage} />\n\n\n                    <Message success header=\"Success!\" content=\"Bid is Placed!\" />\n\n\n                    <Button loading={this.state.loading} type='submit'>Place Bid</Button>\n                </Form>\n\n                <br/>\n\n                <p> You can only exit the auction if no bids were placed!</p>\n                <Button loading={this.state.loading} onClick={this.onExitAuction}>Exit Auction </Button> \n                </div>\n                {/*)}*/}\n                \n            </div>\n        );\n    }\n\n\n\n}\n\nexport default joinAuction; "]},"metadata":{},"sourceType":"module"}