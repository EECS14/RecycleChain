{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Statistic, Icon, Grid, Container } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport registerContract from '../../ethereum/register';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport Layout from '../../components/Layout';\n\nvar startAuction = /*#__PURE__*/function (_Component) {\n  _inherits(startAuction, _Component);\n\n  var _super = _createSuper(startAuction);\n\n  function startAuction(props) {\n    var _this;\n\n    _classCallCheck(this, startAuction);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onStartAuction\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var closingTime, accounts, plasticBaleSC;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault(); //web3.eth.handleRevert = true;\n                //1. Extract time from date\n                //2. Conver to Milliseconds\n\n                closingTime = Math.ceil(_this.state.startDate.getTime() / 1000);\n                console.log(closingTime);\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context.prev = 4;\n                _context.next = 7;\n                return web3.eth.getAccounts();\n\n              case 7:\n                accounts = _context.sent;\n                plasticBaleSC = plasticBaleContract(_this.props.address);\n                _context.next = 11;\n                return plasticBaleSC.methods.startAuction(closingTime, _this.state.startingPrice).send({\n                  from: accounts[0]\n                });\n\n              case 11:\n                _this.setState({\n                  open: true\n                });\n\n                _context.next = 18;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](4);\n\n                _this.setState({\n                  errorMessage: _context.t0.message\n                });\n\n                _this.setState({\n                  hasError: false\n                });\n\n              case 18:\n                // if errorMsg is empty, registration is successful\n                if (!_this.state.errorMessage) _this.setState({\n                  hasNoError: true\n                });\n\n                _this.setState({\n                  loading: false\n                });\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 14]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onEndAuction\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var accounts, plasticBaleSC;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  loading: true\n                });\n\n                _context2.prev = 2;\n                _context2.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context2.sent;\n                plasticBaleSC = plasticBaleContract(_this.props.address);\n                _context2.next = 9;\n                return plasticBaleSC.methods.endAuction().send({\n                  from: accounts[0],\n                  gas: 250983\n                });\n\n              case 9:\n                _this.setState({\n                  notOver: false\n                });\n\n                _context2.next = 17;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](2);\n                // REVERT REASON IS ALMOST SHOWN HERE\n                console.log(_context2.t0);\n\n                _this.setState({\n                  errorMessage: _context2.t0\n                });\n\n                _this.setState({\n                  hasError: false\n                });\n\n              case 17:\n                _this.setState({\n                  loading: false\n                });\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 12]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      startingPrice: '',\n      errorMessage: '',\n      hasNoError: false,\n      startDate: new Date(),\n      registrationSCAddr: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n      open: false,\n      totalBidders: 0,\n      highestBid: 0,\n      highestBidder: 'No bids placed',\n      highestBidderAddress: '',\n      notOver: true,\n      loading: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(startAuction, [{\n    key: \"handleChange\",\n    value: function handleChange(date) {\n      this.setState({\n        startDate: date\n      });\n      console.log(date);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          open = _this$state.open,\n          notOver = _this$state.notOver;\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }), open && notOver && __jsx(\"div\", {\n        className: \"statistic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, \"Live Auction\"), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }\n      }, \" Plastic Bale being auctioned:  \", __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 61\n        }\n      }, this.props.address), \" \"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }), __jsx(\"div\", {\n        className: \"AuctionContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      }, __jsx(Statistic.Group, {\n        widths: \"three\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }\n      }, __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 33\n        }\n      }, __jsx(Statistic.Value, {\n        text: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 37\n        }\n      }, this.state.highestBid, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 41\n        }\n      }), \"Ether\"), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 37\n        }\n      }, \"Highest Bid\")), __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 33\n        }\n      }, __jsx(Statistic.Value, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 37\n        }\n      }, __jsx(Icon, {\n        name: \"users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 41\n        }\n      }), \" \", this.state.totalBidders), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 37\n        }\n      }, \"Total Bidders\")), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 33\n        }\n      }), __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 33\n        }\n      }, __jsx(Statistic.Value, {\n        text: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 37\n        }\n      }, __jsx(Icon, {\n        name: \"user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 41\n        }\n      }), \" \", this.state.highestBidder), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 37\n        }\n      }, \"Highest Bidder\")))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      }), __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }\n      }, __jsx(Grid.Row, {\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 29\n        }\n      }, __jsx(Grid.Column, {\n        width: 6,\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 33\n        }\n      }, __jsx(Button, {\n        loading: this.state.loading,\n        onClick: this.onEndAuction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 37\n        }\n      }, \"Close Auction \"))))), !open && __jsx(\"div\", {\n        className: \"setAuction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }\n      }, \"Set Bale's Auction Parameters: \"), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }\n      }, __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }\n      }, __jsx(Grid.Row, {\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 33\n        }\n      }, __jsx(Grid.Column, {\n        width: 6,\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 37\n        }\n      }, __jsx(Form, {\n        onSubmit: this.onStartAuction,\n        error: !!this.state.errorMessage,\n        success: this.state.hasNoError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 41\n        }\n      }, __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 45\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 49\n        }\n      }, \"Auction Closing Date and Time\"), __jsx(DatePicker, {\n        selected: this.state.startDate,\n        onChange: this.handleChange,\n        showTimeSelect: true,\n        timeFormat: \"HH:mm\",\n        timeIntervals: 20,\n        timeCaption: \"time\",\n        dateFormat: \"MM/dd/yyyy h:mm aa\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 49\n        }\n      })), __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 45\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 49\n        }\n      }, \"Starting Price\"), __jsx(Input, {\n        value: this.state.startingPrice,\n        label: {\n          basic: true,\n          content: 'Ether'\n        },\n        labelPosition: \"right\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            startingPrice: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 49\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Error!\",\n        content: this.state.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 45\n        }\n      }), __jsx(Message, {\n        success: true,\n        header: \"Success!\",\n        content: \"Auction is Open!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 45\n        }\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 45\n        }\n      }, \"Start Auction\"))))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(props) {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                //fetches address of the bottle from the URL\n                address = props.query.address;\n                return _context3.abrupt(\"return\", {\n                  address: address\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps(_x3) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return startAuction;\n}(Component);\n\nexport default startAuction;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js"],"names":["React","Component","Form","Button","Input","Message","Statistic","Icon","Grid","Container","DatePicker","web3","registerContract","plasticBaleContract","Layout","startAuction","props","event","preventDefault","closingTime","Math","ceil","state","startDate","getTime","console","log","setState","loading","errorMessage","eth","getAccounts","accounts","plasticBaleSC","address","methods","startingPrice","send","from","open","message","hasError","hasNoError","endAuction","gas","notOver","Date","registrationSCAddr","totalBidders","highestBid","highestBidder","highestBidderAddress","handleChange","bind","date","onEndAuction","onStartAuction","basic","content","target","value","query"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Statistic, Icon, Grid, Container } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport registerContract from '../../ethereum/register';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport Layout from '../../components/Layout';\n\nclass startAuction extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            startingPrice: '',\n            errorMessage: '',\n            hasNoError: false,\n            startDate: new Date(),\n            registrationSCAddr: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n            open: false,\n            totalBidders: 0,\n            highestBid: 0,\n            highestBidder: 'No bids placed',\n            highestBidderAddress: '',\n            notOver: true,\n            loading: false\n\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    static async getInitialProps(props) {\n\n        //fetches address of the bottle from the URL\n        const { address } = props.query;\n\n        return { address };\n    }\n\n    handleChange(date) {\n        this.setState({\n            startDate: date\n        });\n        console.log(date);\n    }\n\n\n\n\n\n    \n\n\n\n    onStartAuction = async (event) => {\n        event.preventDefault();\n\n        //web3.eth.handleRevert = true;\n\n        //1. Extract time from date\n        //2. Conver to Milliseconds\n        let closingTime = Math.ceil((this.state.startDate).getTime() / 1000);\n        console.log(closingTime);\n\n        this.setState({ loading: true, errorMessage: '' });\n\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const plasticBaleSC = plasticBaleContract(this.props.address);\n            await plasticBaleSC.methods.startAuction(closingTime, this.state.startingPrice)\n                .send({ from: accounts[0] });\n            this.setState({ open: true });\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n            this.setState({ hasError: false });\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage)\n            this.setState({ hasNoError: true });\n\n        this.setState({ loading: false });\n\n    };\n\n\n    onEndAuction = async (event) => {\n\n        event.preventDefault();\n\n        this.setState({ loading: true });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const plasticBaleSC = plasticBaleContract(this.props.address);\n            await plasticBaleSC.methods.endAuction().send({ from: accounts[0], gas: 250983 });\n            this.setState({ notOver: false });\n\n        } catch (err) {\n            // REVERT REASON IS ALMOST SHOWN HERE\n            console.log(err);\n            this.setState({ errorMessage: err });\n            this.setState({ hasError: false });\n        }\n\n        this.setState({ loading: false });\n    };\n\n\n\n    render() {\n\n        const { open, notOver } = this.state;\n\n        return (\n            <Layout>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                { open && notOver && (\n\n                    <div className='statistic'>\n\n                        <h1>Live Auction</h1>\n\n                        <h2> Plastic Bale being auctioned:  <h3>{this.props.address}</h3> </h2>\n\n                        <br />\n\n                        <div className='AuctionContainer'>\n\n                            <Statistic.Group widths='three'>\n                                <Statistic>\n                                    <Statistic.Value text>\n                                        {this.state.highestBid}\n                                        <br />\n                            Ether\n                            </Statistic.Value>\n                                    <Statistic.Label>Highest Bid</Statistic.Label>\n                                </Statistic>\n\n                                <Statistic>\n                                    <Statistic.Value>\n                                        <Icon name='users' /> {this.state.totalBidders}\n                                    </Statistic.Value>\n                                    <Statistic.Label>Total Bidders</Statistic.Label>\n                                </Statistic>\n\n                                <br />\n\n                                <Statistic>\n                                    <Statistic.Value text>\n                                        <Icon name='user' /> {this.state.highestBidder}\n                                        {/*this.state.highestBidderAddress*/}\n                                    </Statistic.Value>\n                                    <Statistic.Label>Highest Bidder</Statistic.Label>\n                                </Statistic>\n                            </Statistic.Group>\n\n                        </div>\n\n                        <br />\n                        <br />\n                        <br />\n                        <Grid>\n                            <Grid.Row centered>\n                                <Grid.Column width={6} textAlign=\"center\">\n                                    <Button loading={this.state.loading} onClick={this.onEndAuction}>Close Auction </Button>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n\n                    </div>\n\n                )}\n\n\n\n                { !open && (\n\n                    <div className='setAuction'>\n\n                        <h1>Set Bale's Auction Parameters: </h1>\n\n                        <Container>\n                            <Grid>\n                                <Grid.Row centered>\n                                    <Grid.Column width={6} textAlign=\"center\">\n                                        <Form onSubmit={this.onStartAuction} error={!!this.state.errorMessage} success={this.state.hasNoError}>\n                                            <Form.Field>\n                                                <label >Auction Closing Date and Time</label>\n                                                <DatePicker\n                                                    selected={this.state.startDate}\n                                                    onChange={this.handleChange}\n                                                    showTimeSelect\n                                                    timeFormat=\"HH:mm\"\n                                                    timeIntervals={20}\n                                                    timeCaption=\"time\"\n                                                    dateFormat=\"MM/dd/yyyy h:mm aa\"\n                                                />\n                                            </Form.Field>\n\n                                            <Form.Field>\n                                                <label>Starting Price</label>\n                                                <Input value={this.state.startingPrice}\n                                                    label={{ basic: true, content: 'Ether' }}\n                                                    labelPosition='right'\n                                                    onChange={event => this.setState({ startingPrice: event.target.value })} />\n                                            </Form.Field>\n\n                                            <Message error header=\"Error!\" content={this.state.errorMessage} />\n\n\n                                            <Message success header=\"Success!\" content=\"Auction is Open!\" />\n\n\n                                            <Button loading={this.state.loading} type='submit'>Start Auction</Button>\n                                        </Form>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                        </Container>\n\n                    </div>\n                )}\n\n\n\n            </Layout>\n        );\n    }\n\n}\n\nexport default startAuction; "]},"metadata":{},"sourceType":"module"}