{"ast":null,"code":"/*\nPurpose: import this file to get access to web3\nPrimary provider is MetaMask \n*/\nimport Web3 from 'web3';\n/*\n//current provider is the provider injected by MetaMask \nlet web3;\n\n//typeof is used to check if window is defined \nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n  // We are in the browser and metamask is running.\n  //Connect metamask to the webapp \n  window.ethereum.enable(); \n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  // We are on the server *OR* the user is not running metamask\n  const provider = new Web3.providers.HttpProvider( 'https://ropsten.infura.io/v3/a5dc022ed8df4754b509e1f289d10b05');\n  web3 = new Web3(provider);\n} \n\nexport default web3;\n */\n\nconst web3 = new Web3(window.ethereum);\n\nif (false && typeof window.web3 !== 'undefined') {\n  window.ethereum.enable().catch(error => {\n    // User denied account access\n    console.log(error);\n  });\n} //from https://coderrocketfuel.com/article/configure-infura-with-web3-js-and-node-js\n//const Web3 = require(\"web3\")\n//const web3 = new Web3(new Web3.providers.HttpProvider(\"https://ropsten.infura.io/v3/3c6d602314f44696bf34cdc004470a78\"))\n//import Web3 from 'web3';\n//const web3 = new Web3(window.ethereum)\n//if (typeof web3 === 'undefined'){\n// console.log('No web3 detected using HTTP provider (infura)')\n// window.web3 = new Web3(new Web3.providers.HttpProvider(\"https://ropsten.infura.io/v3/3c6d602314f44696bf34cdc004470a78\"));\n//}\n//else\n//{\n// window.web3= new Web3(web3.curretProvider);\n// console.log('Metamask web3 detected!')\n//}\n//window.web3 = new Web3(new Web3.providers.HttpProvider(\"https://ropsten.infura.io/v3/3c6d602314f44696bf34cdc004470a78\"));\n\n\nexport default web3;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/ethereum/web3.js"],"names":["Web3","web3","window","ethereum","enable","catch","error","console","log"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACC,QAAhB,CAAb;;AACA,IAAI,SAAiC,OAAOD,MAAM,CAACD,IAAd,KAAuB,WAA5D,EAAyE;AACzEC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyBC,KAAzB,CAA+BC,KAAK,IAAI;AACnC;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACF,GAHF;AAGM,C,CACN;AACA;AACA;AACA;AACA;AACA;AACG;AACA;AACH;AACA;AACA;AACG;AACA;AAEH;AACA;;;AAEA,eAAeL,IAAf","sourcesContent":["/*\nPurpose: import this file to get access to web3\nPrimary provider is MetaMask \n*/\nimport Web3 from 'web3'; \n\n/*\n//current provider is the provider injected by MetaMask \nlet web3;\n\n//typeof is used to check if window is defined \nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n  // We are in the browser and metamask is running.\n  //Connect metamask to the webapp \n  window.ethereum.enable(); \n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  // We are on the server *OR* the user is not running metamask\n  const provider = new Web3.providers.HttpProvider( 'https://ropsten.infura.io/v3/a5dc022ed8df4754b509e1f289d10b05');\n  web3 = new Web3(provider);\n} \n\nexport default web3;\n */ \n\nconst web3 = new Web3(window.ethereum)\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\nwindow.ethereum.enable().catch(error => {\n     // User denied account access\n    console.log(error)\n })  }\n//from https://coderrocketfuel.com/article/configure-infura-with-web3-js-and-node-js\n//const Web3 = require(\"web3\")\n//const web3 = new Web3(new Web3.providers.HttpProvider(\"https://ropsten.infura.io/v3/3c6d602314f44696bf34cdc004470a78\"))\n//import Web3 from 'web3';\n//const web3 = new Web3(window.ethereum)\n//if (typeof web3 === 'undefined'){\n   // console.log('No web3 detected using HTTP provider (infura)')\n   // window.web3 = new Web3(new Web3.providers.HttpProvider(\"https://ropsten.infura.io/v3/3c6d602314f44696bf34cdc004470a78\"));\n//}\n//else\n//{\n   // window.web3= new Web3(web3.curretProvider);\n   // console.log('Metamask web3 detected!')\n   \n//}\n//window.web3 = new Web3(new Web3.providers.HttpProvider(\"https://ropsten.infura.io/v3/3c6d602314f44696bf34cdc004470a78\"));\n\nexport default web3;"]},"metadata":{},"sourceType":"module"}