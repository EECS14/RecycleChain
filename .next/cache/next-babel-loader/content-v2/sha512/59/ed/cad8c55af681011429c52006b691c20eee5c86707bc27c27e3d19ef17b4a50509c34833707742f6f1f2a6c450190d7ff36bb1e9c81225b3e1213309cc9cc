{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/recycler.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*\nThis is the recycler page where a recycler scans the QR codes and view rewards\nContact used here: an instance of tracking.sol \nTo run the app, use the command npm run dev\n*/\nimport React, { Component } from 'react';\nimport { Card, Table, Button, Grid, Container } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nvar QRReader = dynamic(_c = function _c() {\n  return import('react-qr-reader');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-qr-reader')];\n    },\n    modules: ['react-qr-reader']\n  }\n});\n_c2 = QRReader;\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking';\nimport plasticBaleContract from '../ethereum/plasticBale';\nimport { Link } from '../routes';\nimport Layout from '../components/Layout';\n\nvar recyclerPage = /*#__PURE__*/function (_Component) {\n  _inherits(recyclerPage, _Component);\n\n  var _super = _createSuper(recyclerPage);\n\n  function recyclerPage(props) {\n    var _this;\n\n    _classCallCheck(this, recyclerPage);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context.sent;\n              trackingContract.events.updateStatusRecycler({\n                filter: {\n                  recycler: accounts[0]\n                },\n                fromBlock: 0\n              }, function (error, event) {\n                var _this2 = this;\n\n                /* Debugging \n                console.log(event);\n                console.log(event.returnValues['plasticBottleAddress']); */\n                this.setState({\n                  result: event.returnValues['plasticBottleAddress'],\n                  status: event.returnValues['status']\n                });\n                this.setState(function (prevState) {\n                  return {\n                    bottlesLogged: [].concat(_toConsumableArray(prevState.bottlesLogged), [_this2.state.result])\n                  };\n                });\n                this.addRow();\n              }.bind(_assertThisInitialized(_this))).on('error', console.error); // Update: Sorted \n\n              trackingContract.events.updateStatusMachine({\n                filter: {\n                  plasticBottleAddress: _this.state.bottlesLogged\n                },\n                fromBlock: 0\n              }, function (error, event) {\n                /*For debugging purposes \n                console.log(event);\n                console.log(this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress'] ));\n                console.log(this.state.rows);\n                console.log(event.returnValues['plasticBottleAddress']);\n                */\n                var index = this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress']);\n                this.updateRow(index, event.returnValues['status']);\n              }.bind(_assertThisInitialized(_this))).on('error', console.error);\n              trackingContract.events.plasticBaleCompleted({\n                fromBlock: 0\n              }, function (error, event) {\n                console.log(event);\n                var plasticbaleAddr = event.returnValues['plasticbale'];\n                console.log(plasticbaleAddr);\n                var plasticBaleSC = plasticBaleContract(plasticbaleAddr);\n                plasticBaleSC.events.recyclerRewarded({\n                  filter: {\n                    recycler: accounts[0]\n                  },\n                  fromBlock: 0\n                }, function (error, event) {\n                  console.log(event);\n                  this.setState({\n                    rewards: this.state.rewards + event.returnValues['etherReward']\n                  });\n                }.bind(this)).on('error', console.error);\n                plasticBaleSC.events.updateStatusBuyer({\n                  filter: {\n                    plasticBottleAddress: this.state.bottlesLogged\n                  },\n                  fromBlock: 0\n                }, function (error, event) {\n                  var index = this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress']);\n                  this.updateRow(index, event.returnValues['status']);\n                });\n              }.bind(_assertThisInitialized(_this))).on('error', console.error);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScan\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (data) {\n                  _this.setState({\n                    result: data\n                  });\n\n                  _this.disposeBottle();\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleError\", function (err) {\n      console.error(err);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onScan\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault();\n\n                if (_this.state.qr === false) {\n                  _this.setState({\n                    qr: true\n                  });\n                } else {\n                  _this.setState({\n                    qr: false\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"addRow\", function () {\n      _this.setState(function (prevState) {\n        var bottle = {\n          addr: _this.state.result,\n          status: _this.state.status\n        };\n        return {\n          rows: [].concat(_toConsumableArray(prevState.rows), [bottle])\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"disposeBottle\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context4.sent;\n              _context4.next = 5;\n              return trackingContract.methods.updateStatusDisposed(_this.state.result).send({\n                from: accounts[0]\n              });\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    })));\n\n    _this.state = {\n      rewards: 0,\n      result: '',\n      status: '',\n      qr: false,\n      rows: [],\n      bottlesLogged: []\n    };\n    return _this;\n  } // retrieve all bottled logged by user from ropsten network \n  // IMPROVE IT: use getPastEvents \n\n\n  _createClass(recyclerPage, [{\n    key: \"updateRow\",\n    value: function updateRow(index, status) {\n      // 1. Make a shallow copy of rows\n      var rows = _toConsumableArray(this.state.rows); // 2. Make a shallow copy of the row you want to mutate\n\n\n      var row = _objectSpread({}, rows[index]); // 3. Replace the property you're intested in\n\n\n      row.status = status; // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n\n      rows[index] = row; // 5. Set the state to our new copy\n\n      this.setState({\n        rows: rows\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          qr = _this$state.qr,\n          rows = _this$state.rows;\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"Recycler\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }, \"Welcome to Recycler Page\"), __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }\n      }), __jsx(Card, {\n        header: \"Rewards\",\n        description: this.state.rewards,\n        meta: \"ETH\",\n        centered: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }\n      }), __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      }, __jsx(Grid.Row, {\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }\n      }, __jsx(Grid.Column, {\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 29\n        }\n      }, __jsx(\"div\", {\n        className: \"Scanner\",\n        style: {\n          'width': '25%',\n          'margin-left': 'auto',\n          'margin-right': 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 33\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 37\n        }\n      }, \"Dispose a Plastic Bottle  \"), __jsx(Button, {\n        className: \"QrReader\",\n        onClick: this.onScan,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 37\n        }\n      }, \" Scan QR Code\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 37\n        }\n      }), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 37\n        }\n      }, \" \", this.state.qr === true ? __jsx(QRReader, {\n        delay: 300,\n        onError: this.handleError,\n        onScan: this.handleScan,\n        style: {\n          width: \"60%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 37\n        }\n      }) : '', \" \"))))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"BottleTable\",\n        style: {\n          'width': '40%',\n          'margin-left': 'auto',\n          'margin-right': 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }\n      }, __jsx(Table, {\n        unstackable: true,\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }\n      }, __jsx(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 33\n        }\n      }, __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 37\n        }\n      }, \"Plasitc Bottle Address\"), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 37\n        }\n      }, \"Status\"))), __jsx(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 29\n        }\n      }, this.state.rows.map(function (bottle) {\n        return __jsx(Link, {\n          route: \"/track/\".concat(bottle.addr),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 37\n          }\n        }, __jsx(Table.Row, {\n          id: _this3.state.rows.length,\n          key: _this3.state.rows.lengt,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 41\n          }\n        }, __jsx(Table.Cell, {\n          selectable: true,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 45\n          }\n        }, __jsx(\"a\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 49\n          }\n        }, bottle.addr)), __jsx(Table.Cell, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 45\n          }\n        }, bottle.status)));\n      }))))));\n    }\n  }]);\n\n  return recyclerPage;\n}(Component); //At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \n\n\nexport default recyclerPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QRReader$dynamic\");\n$RefreshReg$(_c2, \"QRReader\");","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/recycler.js"],"names":["React","Component","Card","Table","Button","Grid","Container","dynamic","QRReader","ssr","web3","trackingContract","plasticBaleContract","Link","Layout","recyclerPage","props","eth","getAccounts","accounts","events","updateStatusRecycler","filter","recycler","fromBlock","error","event","setState","result","returnValues","status","prevState","bottlesLogged","state","addRow","bind","on","console","updateStatusMachine","plasticBottleAddress","index","indexOf","updateRow","plasticBaleCompleted","log","plasticbaleAddr","plasticBaleSC","recyclerRewarded","rewards","updateStatusBuyer","data","disposeBottle","err","preventDefault","qr","bottle","addr","rows","methods","updateStatusDisposed","send","from","row","onScan","handleError","handleScan","width","map","length","lengt"],"mappings":"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","sourcesContent":["/*\nThis is the recycler page where a recycler scans the QR codes and view rewards\nContact used here: an instance of tracking.sol \nTo run the app, use the command npm run dev\n*/\n\nimport React, { Component } from 'react';\nimport { Card, Table, Button, Grid, Container } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nconst QRReader = dynamic(() => import('react-qr-reader'), { ssr: false });\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking';\nimport plasticBaleContract from '../ethereum/plasticBale';\nimport { Link } from '../routes';\nimport Layout from '../components/Layout';\n\nclass recyclerPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rewards: 0,\n            result: '',\n            status: '',\n            qr: false,\n            rows: [],\n            bottlesLogged: []\n        };\n    }\n\n    // retrieve all bottled logged by user from ropsten network \n    // IMPROVE IT: use getPastEvents \n    componentDidMount = async () => {\n        const accounts = await web3.eth.getAccounts();\n\n\n        trackingContract.events.updateStatusRecycler({\n            filter: { recycler: accounts[0] }, fromBlock: 0\n        }, function (error, event) {\n            /* Debugging \n            console.log(event);\n            console.log(event.returnValues['plasticBottleAddress']); */\n\n            this.setState({ result: event.returnValues['plasticBottleAddress'], status: event.returnValues['status'] });\n            this.setState(prevState => ({ bottlesLogged: [...prevState.bottlesLogged, this.state.result] }));\n            this.addRow();\n        }.bind(this))\n            .on('error', console.error);\n\n        // Update: Sorted \n        trackingContract.events.updateStatusMachine({\n            filter: { plasticBottleAddress: this.state.bottlesLogged }, fromBlock: 0\n        }, function (error, event) {\n            /*For debugging purposes \n            console.log(event);\n            console.log(this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress'] ));\n            console.log(this.state.rows);\n            console.log(event.returnValues['plasticBottleAddress']);\n            */\n            let index = this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress']);\n            this.updateRow(index, event.returnValues['status']);\n        }.bind(this))\n            .on('error', console.error);\n\n\n            trackingContract.events.plasticBaleCompleted({\n                fromBlock: 0\n            }, function (error, event) {\n                console.log(event);\n                const plasticbaleAddr = event.returnValues['plasticbale'];\n                console.log(plasticbaleAddr);\n                const plasticBaleSC = plasticBaleContract(plasticbaleAddr);\n\n                plasticBaleSC.events.recyclerRewarded({\n                    filter: { recycler: accounts[0] },\n                    fromBlock: 0\n                }, function (error, event) {\n                    console.log(event);\n\n                    this.setState({\n                        rewards: this.state.rewards + event.returnValues['etherReward'],\n                    });\n\n                }.bind(this))\n                    .on('error', console.error);\n\n\n                    plasticBaleSC.events.updateStatusBuyer({\n                        filter: { plasticBottleAddress: this.state.bottlesLogged },\n                        fromBlock: 0\n                    }, function (error, event) {\n                        let index = this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress']);\n                        this.updateRow(index, event.returnValues['status']);\n\n                        });\n\n\n\n\n\n\n    \n            }.bind(this))\n                .on('error', console.error);\n        \n    \n        };\n    \n\n    // QR reader functions \n    handleScan = async (data) => {\n        if (data) {\n            this.setState({ result: data });\n            this.disposeBottle();\n\n        }\n    }\n\n    handleError = err => {\n        console.error(err)\n    }\n\n    onScan = async (event) => {\n        event.preventDefault();\n        if (this.state.qr === false) {\n            this.setState({ qr: true });\n        }\n        else {\n            this.setState({ qr: false });\n        }\n    };\n\n    // Adds a new row dynamically to the table \n    addRow = () => {\n        this.setState((prevState) => {\n            let bottle = { addr: this.state.result, status: this.state.status };\n            return { rows: [...prevState.rows, bottle] };\n        });\n\n    };\n\n    // Log bottle as disposed \n    disposeBottle = async () => {\n        const accounts = await web3.eth.getAccounts();\n\n        //Add try and catch block here \n        await trackingContract.methods\n            .updateStatusDisposed(this.state.result)\n            .send({ from: accounts[0] });\n\n    };\n\n    updateRow(index, status) {\n        // 1. Make a shallow copy of rows\n        let rows = [...this.state.rows];\n        // 2. Make a shallow copy of the row you want to mutate\n        let row = { ...rows[index] };\n        // 3. Replace the property you're intested in\n        row.status = status;\n        // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n        rows[index] = row;\n        // 5. Set the state to our new copy\n        this.setState({ rows });\n    }\n\n\n    render() {\n\n        const { qr, rows } = this.state\n\n        return (\n            <Layout>\n                <div className='Recycler'>\n                    <h1>Welcome to Recycler Page</h1>\n                    <link rel=\"stylesheet\"\n                        href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                    />\n\n                    <Card header='Rewards' description={this.state.rewards} meta='ETH' centered='true' />\n\n                    <br />\n\n\n                    <Grid>\n                        <Grid.Row centered>\n                            <Grid.Column textAlign=\"center\">\n                                <div className=\"Scanner\" style={{ 'width': '25%', 'margin-left': 'auto', 'margin-right': 'auto' }}>\n                                    <h2>Dispose a Plastic Bottle  </h2>\n                                    <Button className=\"QrReader\" onClick={this.onScan} > Scan QR Code</Button>\n                                    <br/>\n                                    <div> {this.state.qr === true ? (\n                                    <QRReader\n                                        delay={300}\n                                        onError={this.handleError}\n                                        onScan={this.handleScan}\n                                        style={{ width: \"60%\" }}\n                                    />\n                                    )\n                                        : ''} </div>\n\n                                </div>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n\n\n                    <br />\n\n                    <div className='BottleTable' style={{ 'width': '40%', 'margin-left': 'auto', 'margin-right': 'auto' }}>\n                        <Table unstackable size='small'>\n                            <Table.Header>\n                                <Table.Row>\n                                    <Table.HeaderCell>Plasitc Bottle Address</Table.HeaderCell>\n                                    <Table.HeaderCell>Status</Table.HeaderCell>\n                                </Table.Row>\n                            </Table.Header>\n                            <Table.Body>\n                                {this.state.rows.map(bottle => (\n                                    <Link route={`/track/${bottle.addr}`}>\n                                        <Table.Row id={this.state.rows.length} key={this.state.rows.lengt}>\n                                            <Table.Cell selectable>\n                                                <a>\n                                                    {bottle.addr}\n                                                </a>\n                                            </Table.Cell>\n                                            <Table.Cell>{bottle.status}</Table.Cell>\n                                        </Table.Row>\n                                    </Link>\n                                ))}\n                            </Table.Body>\n\n                        </Table>\n                    </div>\n\n                </div>\n\n            </Layout>\n\n        );\n    }\n\n}\n\n//At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \nexport default recyclerPage; "]},"metadata":{},"sourceType":"module"}