{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/emulators.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\nNote: Seller address is hardcoded in the sorting machine\n*/\nimport React, { Component } from 'react';\nimport { Menu, Button, Message, Form, Input } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nconst QRReader = dynamic(() => import('react-qr-reader'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-qr-reader')],\n    modules: ['react-qr-reader']\n  }\n});\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking';\nimport Layout from '../components/Layout';\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleScan\", async data => {\n      if (data) {\n        this.setState({\n          result: data\n        });\n        this.sortBottle();\n      }\n    });\n\n    _defineProperty(this, \"handleError\", err => {\n      console.error(err);\n    });\n\n    _defineProperty(this, \"onScan\", async event => {\n      event.preventDefault();\n\n      if (this.state.qr === false) {\n        this.setState({\n          qr: true\n        });\n      } else {\n        this.setState({\n          qr: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"sortBottle\", async () => {\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        errorMessage: ''\n      });\n\n      try {\n        await trackingContract.methods.updateStatusSorted(this.state.registerSCAddress, this.state.sellerAddress, this.state.result).send({\n          from: accounts[0]\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"onSetBaleLimit\", async event => {\n      event.preventDefault();\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        loading: true,\n        errorMessage1: ''\n      });\n\n      try {\n        await trackingContract.methods.setBottlesSortedLimit(this.state.bottlesLimit).send({\n          from: accounts[0]\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage1: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n\n    this.state = {\n      productionMachine: false,\n      sortingMachine: false,\n      result: '',\n      qr: false,\n      sellerAddress: '0x334b12DF37984A449b57BAE3F4120f70be177be0',\n      registerSCAddress: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n      errorMessage: '',\n      hasNoError: false,\n      bottlesLimit: '',\n      errorMessage1: '',\n      loading: false\n    };\n  } // QR reader functions \n\n\n  render() {\n    const {\n      productionMachine,\n      sortingMachine,\n      qr\n    } = this.state;\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Emulators Page\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \" This page is to emulate the functionality of machines participating in the system \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 103\n      }\n    }), \"Choose which machine you would like to emulate\"), __jsx(Menu, {\n      widths: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, __jsx(Menu.Item, {\n      name: \"ProductionLineMachine\",\n      onClick: () => this.setState({\n        productionMachine: true,\n        sortingMachine: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, \" Production Line Machine\"), __jsx(Menu.Item, {\n      name: \"SortingMachine\",\n      onClick: () => this.setState({\n        sortingMachine: true,\n        productionMachine: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, \" Sorting Machine\")), productionMachine && __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, \" Put the code here!!\"), sortingMachine && __jsx(\"div\", {\n      className: \"Container1\",\n      style: {\n        'width': '70%',\n        'margin-left': 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, __jsx(Form, {\n      onSubmit: this.onSetBaleLimit,\n      error: !!this.state.errorMessage1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, __jsx(Form.Field, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, \"Number of Bottles in a Plastic Bale\"), __jsx(Input, {\n      value: this.state.bottlesLimit,\n      onChange: event => this.setState({\n        bottlesLimit: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    })), __jsx(Button, {\n      loading: this.state.loading,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, \"Set Limit\")), __jsx(Form, {\n      error: !!this.state.errorMessage,\n      success: this.state.hasNoError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"Scanner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 40\n      }\n    }), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }, \"Scan Plastic Bottle \"), __jsx(Button, {\n      className: \"QrReader\",\n      style: {\n        'vertical-align': 'middle'\n      },\n      onClick: this.onScan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, \" Scan QR Code\"), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }, \" \", this.state.qr === true ? __jsx(QRReader, {\n      delay: 300,\n      onError: this.handleError,\n      onScan: this.handleScan,\n      style: {\n        width: \"35%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 66\n      }\n    }) : '', \" \"), __jsx(Message, {\n      error: true,\n      header: \"Error!\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }), __jsx(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Plastic bottle status is updated successfully by sorting machine!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    })))));\n  }\n\n} //At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \n\n\nexport default index;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/emulators.js"],"names":["React","Component","Menu","Button","Message","Form","Input","dynamic","QRReader","ssr","web3","trackingContract","Layout","index","constructor","props","data","setState","result","sortBottle","err","console","error","event","preventDefault","state","qr","accounts","eth","getAccounts","errorMessage","methods","updateStatusSorted","registerSCAddress","sellerAddress","send","from","message","loading","errorMessage1","setBottlesSortedLimit","bottlesLimit","productionMachine","sortingMachine","hasNoError","render","onSetBaleLimit","target","value","onScan","handleError","handleScan","width"],"mappings":"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","sourcesContent":["/*\nNote: Seller address is hardcoded in the sorting machine\n*/\nimport React, { Component } from 'react';\nimport { Menu, Button, Message, Form, Input} from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nconst QRReader = dynamic(() => import('react-qr-reader'), { ssr: false });\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking';\nimport Layout from '../components/Layout';\n\nclass index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            productionMachine: false,\n            sortingMachine: false,\n            result: '',\n            qr: false,\n            sellerAddress: '0x334b12DF37984A449b57BAE3F4120f70be177be0',\n            registerSCAddress: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n            errorMessage: '',\n            hasNoError: false, \n            bottlesLimit: '',\n            errorMessage1: '', \n            loading: false\n        };\n    }\n\n    // QR reader functions \n    handleScan = async (data) => {\n        if (data) {\n            this.setState({ result: data });\n            this.sortBottle();\n\n        }\n    }\n\n    handleError = err => {\n        console.error(err)\n    }\n\n    onScan = async (event) => {\n        event.preventDefault();\n        if (this.state.qr === false) {\n            this.setState({ qr: true });\n        }\n        else {\n            this.setState({ qr: false });\n        }\n    };\n\n    // Log bottle as disposed \n    sortBottle = async () => {\n        const accounts = await web3.eth.getAccounts();\n        this.setState({ errorMessage: ''});\n\n        try {\n            await trackingContract.methods\n                .updateStatusSorted(this.state.registerSCAddress, this.state.sellerAddress, this.state.result)\n                .send({ from: accounts[0] });\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n\n        }\n\n        this.setState({loading: false});\n\n    };\n\n    // Controls the size of the plastic bale \n    onSetBaleLimit = async (event) => {\n\n        event.preventDefault(); \n        const accounts = await web3.eth.getAccounts();\n        this.setState({loading: true, errorMessage1: ''});\n\n        \n        try {\n            await trackingContract.methods\n                .setBottlesSortedLimit(this.state.bottlesLimit)\n                .send({ from: accounts[0] });\n        } catch (err) {\n            this.setState({ errorMessage1: err.message });\n            \n        }\n\n        this.setState({loading: false});\n\n    };\n\n\n\n    render() {\n\n        const { productionMachine, sortingMachine, qr } = this.state\n\n        return (\n            <Layout>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                <h1>Emulators Page</h1>\n                <p> This page is to emulate the functionality of machines participating in the system <br />\n                Choose which machine you would like to emulate\n            </p>\n\n                <Menu widths={3}>\n                    <Menu.Item name='ProductionLineMachine' onClick={() => this.setState({ productionMachine: true, sortingMachine: false })} > Production Line Machine</Menu.Item>\n                    <Menu.Item name='SortingMachine' onClick={() => this.setState({ sortingMachine: true, productionMachine: false })} > Sorting Machine</Menu.Item>\n                </Menu>\n\n                {productionMachine && (\n\n                    <h2> Put the code here!!</h2>\n                )}\n\n                {sortingMachine && (\n\n                    <div className=\"Container1\" style={{ 'width': '70%', 'margin-left': 'auto' }}> \n                    \n                    <Form onSubmit={this.onSetBaleLimit} error={!!this.state.errorMessage1} >\n                        <Form.Field width={6}>\n                            <label>Number of Bottles in a Plastic Bale</label>\n                            <Input value={this.state.bottlesLimit}\n                                onChange={event => this.setState({ bottlesLimit: event.target.value })} />\n                        </Form.Field>\n                        <Button loading={this.state.loading} type='submit'>Set Limit</Button>\n                     </Form>\n\n                        <Form error={!!this.state.errorMessage} success={this.state.hasNoError} >\n                            <div className=\"Scanner\" >\n                                <br /> <br />\n                                <h2>Scan Plastic Bottle </h2>\n                                <Button className=\"QrReader\" style={{ 'vertical-align': 'middle' }} onClick={this.onScan} > Scan QR Code</Button>\n                                <div> {this.state.qr === true ? (<QRReader\n                                    delay={300}\n                                    onError={this.handleError}\n                                    onScan={this.handleScan}\n                                    style={{ width: \"35%\" }}\n                                />\n                                )\n                                    : ''} </div>\n\n                                <Message error header=\"Error!\" content={this.state.errorMessage} />\n\n                                <Message success header=\"Success!\" content=\"Plastic bottle status is updated successfully by sorting machine!\" />\n\n                            </div>\n\n                        </Form>\n\n                        </div>\n\n                )}\n\n\n            </Layout>\n\n                );\n    }\n\n}\n\n//At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \nexport default index; "]},"metadata":{},"sourceType":"module"}