{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Label } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\n\nclass startAuction extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onStartAuction\", async event => {\n      event.preventDefault();\n      const accounts = await web3.eth.getAccounts();\n      web3.eth.handleRevert = true; //1. Extract time from date\n      //2. Conver to Milliseconds\n\n      let closingTime = Math.ceil(this.state.startDate.getTime() / 1000);\n      console.log(closingTime);\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        //Create new instance of plastic bale SC that has been deployed \n        const plasticBaleSC = plasticBaleContract(this.props.address);\n        await plasticBaleSC.methods.startAuction(closingTime, this.state.startingPrice).send({\n          from: accounts[0]\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err\n        });\n        this.setState({\n          hasError: false\n        });\n      } // if errorMsg is empty, registration is successful\n\n\n      if (!this.state.errorMessage) this.setState({\n        hasNoError: true\n      });\n      this.setState({\n        loading: false\n      });\n    });\n\n    this.state = {\n      startingPrice: '',\n      errorMessage: '',\n      hasNoError: false,\n      startDate: new Date()\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  static async getInitialProps(props) {\n    //fetches address of the bottle from the URL\n    const {\n      address\n    } = props.query;\n    return {\n      address\n    };\n  }\n\n  handleChange(date) {\n    this.setState({\n      startDate: date\n    });\n    console.log(date);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Set Bale's Auction Parameters: \"), __jsx(Form, {\n      onSubmit: this.onStartAuction,\n      error: !!this.state.errorMessage,\n      success: this.state.hasNoError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Field, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, \"Auction Closing Date and Time\"), __jsx(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.handleChange,\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 20,\n      timeCaption: \"time\",\n      dateFormat: \"MM/dd/yyyy h:mm aa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    })), __jsx(Form.Field, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, \"Starting Price\"), __jsx(Input, {\n      value: this.state.startingPrice,\n      label: {\n        basic: true,\n        content: 'Wei'\n      },\n      labelPosition: \"right\",\n      onChange: event => this.setState({\n        startingPrice: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    })), __jsx(Message, {\n      error: true,\n      header: \"Error!\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }), __jsx(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Auction is Opended Successfully!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \"Start Auction\")));\n  }\n\n}\n\nexport default startAuction;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js"],"names":["React","Component","Form","Button","Input","Message","Label","DatePicker","web3","plasticBaleContract","startAuction","constructor","props","event","preventDefault","accounts","eth","getAccounts","handleRevert","closingTime","Math","ceil","state","startDate","getTime","console","log","setState","loading","errorMessage","plasticBaleSC","address","methods","startingPrice","send","from","err","hasError","hasNoError","Date","handleChange","bind","getInitialProps","query","date","render","onStartAuction","basic","content","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Label } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\n\nclass startAuction extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            startingPrice: '',\n            errorMessage: '',\n            hasNoError: false,\n            startDate: new Date()\n\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    static async getInitialProps(props) {\n\n        //fetches address of the bottle from the URL\n        const { address } = props.query;\n\n        return { address };\n    }\n\n    handleChange(date) {\n        this.setState({\n            startDate: date\n        });\n        console.log(date);\n    }\n\n    onStartAuction = async (event) => {\n        event.preventDefault();\n        const accounts = await web3.eth.getAccounts();\n        web3.eth.handleRevert = true; \n        \n        //1. Extract time from date\n        //2. Conver to Milliseconds\n        let closingTime = Math.ceil((this.state.startDate).getTime()/1000);\n        console.log(closingTime);\n        \n        this.setState({loading: true, errorMessage: ''});\n        \n        try {\n\n            //Create new instance of plastic bale SC that has been deployed \n            const plasticBaleSC = plasticBaleContract(this.props.address); \n\n            await plasticBaleSC.methods.startAuction(closingTime, this.state.startingPrice)\n                .send({ from: accounts[0] });\n        } catch (err) {\n            this.setState({ errorMessage: err });\n            this.setState({ hasError: false });\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage)\n            this.setState({ hasNoError: true });\n\n            this.setState({loading: false}); \n\n    };\n\n    \n\n    render() {\n\n        return (\n            <div>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                <h1>Set Bale's Auction Parameters: </h1>\n\n                <Form onSubmit={this.onStartAuction} error={!!this.state.errorMessage} success={this.state.hasNoError}>\n                    <Form.Field width={6}>\n                        <label >Auction Closing Date and Time</label>\n                        <DatePicker\n                            selected={ this.state.startDate }\n                            onChange={this.handleChange}\n                            showTimeSelect\n                            timeFormat=\"HH:mm\"\n                            timeIntervals={20}\n                            timeCaption=\"time\"\n                            dateFormat=\"MM/dd/yyyy h:mm aa\"\n                        /> \n                    </Form.Field>\n\n                    <Form.Field width={4}>\n                        <label>Starting Price</label>\n                        <Input value={this.state.startingPrice}\n                        label={{ basic: true, content: 'Wei' }}\n                        labelPosition='right'\n                        onChange={event => this.setState({ startingPrice: event.target.value })}/> \n                    </Form.Field>\n                    \n                    <Message error header=\"Error!\" content={this.state.errorMessage} />\n\n\n                    <Message success header=\"Success!\" content=\"Auction is Opended Successfully!\" />\n\n\n                    <Button loading={this.state.loading} type='submit'>Start Auction</Button>\n                </Form>\n\n\n\n\n            </div>\n        );\n    }\n\n}\n\nexport default startAuction; "]},"metadata":{},"sourceType":"module"}