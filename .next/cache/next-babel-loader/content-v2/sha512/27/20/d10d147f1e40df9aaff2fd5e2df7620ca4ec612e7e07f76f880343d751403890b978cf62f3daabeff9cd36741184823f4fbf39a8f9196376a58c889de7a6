{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/track/show.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport web3 from '../../ethereum/web3';\nimport trackingContract from '../../ethereum/tracking'; //import { Divider } from 'semantic-ui-react';\n\nclass show extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      const accounts = await web3.eth.getAccounts();\n      trackingContract.events.updateStatusMachine({\n        filter: {\n          plasticBottleAddress: this.props.address\n        },\n        fromBlock: 0\n      }, function (error, event) {\n        this.setState({\n          sellerAddress: event.returnValues['sellerAddress']\n        });\n      }.bind(this)).on('error', console.error);\n    });\n\n    this.state = {\n      sortingFacilityAddr: '',\n      buyerAddr: ''\n    };\n  }\n\n  static async getInitialProps(props) {\n    //1. fetches address of the bottle from the URL\n    //Perfomed at the server before html is loaded\n    const {\n      address\n    } = props.query;\n    return {\n      address\n    };\n  } //2. fetches all events related to the updating the bottle route\n  // to find address of the entity \n\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Track \", this.props.address));\n  }\n\n} //At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \n\n\nexport default show;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/track/show.js"],"names":["React","Component","web3","trackingContract","show","constructor","props","accounts","eth","getAccounts","events","updateStatusMachine","filter","plasticBottleAddress","address","fromBlock","error","event","setState","sellerAddress","returnValues","bind","on","console","state","sortingFacilityAddr","buyerAddr","getInitialProps","query","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B,C,CACA;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA4B;AAExBI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,+CAmBK,YAAY;AAChC,YAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAASC,WAAT,EAAvB;AAEAN,MAAAA,gBAAgB,CAACO,MAAjB,CAAwBC,mBAAxB,CAA4C;AACxCC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,oBAAoB,EAAE,KAAKP,KAAL,CAAWQ;AAAnC,SADgC;AACaC,QAAAA,SAAS,EAAE;AADxB,OAA5C,EAEG,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACvB,aAAKC,QAAL,CAAc;AAACC,UAAAA,aAAa,EAAEF,KAAK,CAACG,YAAN,CAAmB,eAAnB;AAAhB,SAAd;AACH,OAFE,CAEDC,IAFC,CAEI,IAFJ,CAFH,EAKKC,EALL,CAKQ,OALR,EAKiBC,OAAO,CAACP,KALzB;AAOC,KA7Bc;;AAEf,SAAKQ,KAAL,GAAa;AACTC,MAAAA,mBAAmB,EAAC,EADX;AAETC,MAAAA,SAAS,EAAC;AAFD,KAAb;AAIH;;AAEF,eAAaC,eAAb,CAA6BrB,KAA7B,EAAmC;AAE9B;AACA;AACA,UAAM;AAACQ,MAAAA;AAAD,QAAYR,KAAK,CAACsB,KAAxB;AAEA,WAAO;AAACd,MAAAA;AAAD,KAAP;AACC,GAjBmB,CAmBpB;AACA;;;AAeJe,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,KAAKvB,KAAL,CAAWQ,OAAtB,CADJ,CADJ;AAMH;;AA3CuB,C,CA+CxB;AACA;;;AACA,eAAeV,IAAf","sourcesContent":["import React, { Component } from 'react'; \nimport web3 from '../../ethereum/web3';\nimport trackingContract from '../../ethereum/tracking'; \n//import { Divider } from 'semantic-ui-react';\n\nclass show extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            sortingFacilityAddr:'',\n            buyerAddr:''\n        };\n    }\n\n   static async getInitialProps(props){\n\n        //1. fetches address of the bottle from the URL\n        //Perfomed at the server before html is loaded\n        const {address} = props.query;\n\n        return {address};\n        }\n\n        //2. fetches all events related to the updating the bottle route\n        // to find address of the entity \n        componentDidMount = async () => {\n        const accounts = await web3.eth.getAccounts();\n        \n        trackingContract.events.updateStatusMachine({\n            filter: { plasticBottleAddress: this.props.address}, fromBlock: 0\n        }, function (error, event) {\n            this.setState({sellerAddress: event.returnValues['sellerAddress']}); \n        }.bind(this))\n            .on('error', console.error);\n\n        };\n\n        \n\n    render(){\n        \n        return (\n            <div>\n                <h1>Track {this.props.address}</h1>\n            </div>\n            \n        );\n    }\n    \n    }\n    \n    //At the end of each page, a component is expected to be returned \n    // If not, Next.js throws an error \n    export default show; "]},"metadata":{},"sourceType":"module"}