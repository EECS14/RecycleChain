{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/recycler.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*\nThis is the recycler page where a recycler scans the QR codes and view rewards\nContact used here: an instance of tracking.sol \nTo run the app, use the command npm run dev\n*/\nimport React, { Component } from 'react';\nimport { Card, Table, Button } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nvar QRReader = dynamic(_c = function _c() {\n  return import('react-qr-reader');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-qr-reader')];\n    },\n    modules: ['react-qr-reader']\n  }\n});\n_c2 = QRReader;\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking';\nimport { Link } from '../routes';\n\nvar recyclerPage = /*#__PURE__*/function (_Component) {\n  _inherits(recyclerPage, _Component);\n\n  var _super = _createSuper(recyclerPage);\n\n  function recyclerPage(props) {\n    var _this;\n\n    _classCallCheck(this, recyclerPage);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context.sent;\n              // might need to use getPastEvents here !!!!!\n              trackingContract.events.updateStatusRecycler({\n                filter: {\n                  recycler: accounts[0]\n                },\n                fromBlock: 0\n              }, function (error, event) {\n                var _this2 = this;\n\n                /*For debugging purposes \n                console.log(event);\n                console.log(event.returnValues['plasticBottleAddress']); */\n                this.setState({\n                  result: event.returnValues['plasticBottleAddress'],\n                  status: event.returnValues['status']\n                });\n                this.setState(function (prevState) {\n                  return {\n                    bottlesLogged: [].concat(_toConsumableArray(prevState.bottlesLogged), [_this2.state.result])\n                  };\n                });\n                console.log(this.state.bottlesLogged);\n                this.addRow();\n              }.bind(_assertThisInitialized(_this))).on('error', console.error);\n              trackingContract.events.updateStatusMachine({\n                filter: {\n                  plasticBottleAddress: _this.state.bottlesLogged\n                },\n                fromBlock: 0\n              }, function (error, event) {\n                //For debugging purposes \n                console.log(event);\n                console.log(this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress'])); //console.log(event.returnValues['plasticBottleAddress']);\n                //this.updateRow(event.returnValues['plasticBottleAddress']);\n\n                console.log(this.state.rows); //this.setState({ status: event.returnValues['status'] });\n                // this.setState(prevState => ({ bottlesLogged: [...prevState.bottlesLogged, this.state.result] }));\n                //this.addRow();\n              }.bind(_assertThisInitialized(_this))).on('error', console.error);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScan\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (data) {\n                  _this.setState({\n                    result: data\n                  });\n\n                  _this.disposeBottle();\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleError\", function (err) {\n      console.error(err);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onScan\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault();\n\n                if (_this.state.qr === false) {\n                  _this.setState({\n                    qr: true\n                  });\n                } else {\n                  _this.setState({\n                    qr: false\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"addRow\", function () {\n      _this.setState(function (prevState) {\n        var bottle = {\n          addr: _this.state.result,\n          status: _this.state.status\n        };\n        return {\n          rows: [].concat(_toConsumableArray(prevState.rows), [bottle])\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"disposeBottle\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context4.sent;\n              _context4.next = 5;\n              return trackingContract.methods.updateStatusDisposed(_this.state.result).send({\n                from: accounts[0]\n              });\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    })));\n\n    _this.state = {\n      rewards: 0,\n      result: '',\n      status: '',\n      qr: false,\n      rows: [],\n      bottlesLogged: []\n    };\n    return _this;\n  } // retrieve all bottled logged by user from ropsten network \n\n\n  _createClass(recyclerPage, [{\n    key: \"updateRow\",\n    value: function updateRow(index) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          qr = _this$state.qr,\n          rows = _this$state.rows;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, \"Welcome to Recycler's Page\"), __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }), __jsx(Card, {\n        header: \"Rewards\",\n        description: this.state.rewards,\n        meta: \"ETH\",\n        centered: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"Scanner\",\n        style: {\n          'width': '40%',\n          'margin-left': 'auto',\n          'margin-right': 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, \"Dispose a Plastic Bottle\", __jsx(Button, {\n        className: \"QrReader\",\n        style: {\n          'vertical-align': 'middle'\n        },\n        onClick: this.onScan,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, \" Scan QR Code\"), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }, \" \", this.state.qr === true ? __jsx(QRReader, {\n        delay: 300,\n        onError: this.handleError,\n        onScan: this.handleScan,\n        style: {\n          width: \"60%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 58\n        }\n      }) : '', \" \"))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"BottleTable\",\n        style: {\n          'width': '40%',\n          'margin-left': 'auto',\n          'margin-right': 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, __jsx(Table, {\n        unstackable: true,\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, __jsx(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }, __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 33\n        }\n      }, \"Plasitc Bottle Address\"), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 33\n        }\n      }, \"Status\"))), __jsx(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, this.state.rows.map(function (bottle) {\n        return __jsx(Link, {\n          route: \"/track/\".concat(bottle.addr),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }\n        }, __jsx(Table.Row, {\n          id: _this3.state.rows.length,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }\n        }, __jsx(Table.Cell, {\n          selectable: true,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 37\n          }\n        }, __jsx(\"a\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 41\n          }\n        }, bottle.addr)), __jsx(Table.Cell, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 37\n          }\n        }, bottle.status)));\n      })))));\n    }\n  }]);\n\n  return recyclerPage;\n}(Component); //At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \n\n\nexport default recyclerPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QRReader$dynamic\");\n$RefreshReg$(_c2, \"QRReader\");","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/recycler.js"],"names":["React","Component","Card","Table","Button","dynamic","QRReader","ssr","web3","trackingContract","Link","recyclerPage","props","eth","getAccounts","accounts","events","updateStatusRecycler","filter","recycler","fromBlock","error","event","setState","result","returnValues","status","prevState","bottlesLogged","state","console","log","addRow","bind","on","updateStatusMachine","plasticBottleAddress","indexOf","rows","data","disposeBottle","err","preventDefault","qr","bottle","addr","methods","updateStatusDisposed","send","from","rewards","index","onScan","handleError","handleScan","width","map","length"],"mappings":"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","sourcesContent":["/*\nThis is the recycler page where a recycler scans the QR codes and view rewards\nContact used here: an instance of tracking.sol \nTo run the app, use the command npm run dev\n*/\n\nimport React, { Component } from 'react';\nimport { Card, Table, Button } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nconst QRReader = dynamic(() => import('react-qr-reader'), { ssr: false });\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking'; \nimport {Link} from '../routes'; \n\nclass recyclerPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rewards: 0,\n            result: '',\n            status: '',\n            qr: false,\n            rows: [],\n            bottlesLogged: []\n        };\n    }\n\n    // retrieve all bottled logged by user from ropsten network \n    componentDidMount = async () => {\n        const accounts = await web3.eth.getAccounts();\n\n        // might need to use getPastEvents here !!!!!\n        trackingContract.events.updateStatusRecycler({\n            filter: { recycler: accounts[0] }, fromBlock: 0\n        }, function (error, event) {\n            /*For debugging purposes \n            console.log(event);\n            console.log(event.returnValues['plasticBottleAddress']); */\n            \n            this.setState({ result: event.returnValues['plasticBottleAddress'], status: event.returnValues['status'] });\n            this.setState(prevState => ({ bottlesLogged: [...prevState.bottlesLogged, this.state.result] }));\n            console.log(this.state.bottlesLogged);\n            this.addRow();\n        }.bind(this))\n            .on('error', console.error);\n\n            trackingContract.events.updateStatusMachine({\n                filter: { plasticBottleAddress: this.state.bottlesLogged}, fromBlock: 0\n            }, function (error, event) {\n                //For debugging purposes \n                console.log(event);\n                console.log(this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress'] ));\n                //console.log(event.returnValues['plasticBottleAddress']);\n\n                //this.updateRow(event.returnValues['plasticBottleAddress']);\n                console.log(this.state.rows);\n                //this.setState({ status: event.returnValues['status'] });\n               // this.setState(prevState => ({ bottlesLogged: [...prevState.bottlesLogged, this.state.result] }));\n                //this.addRow();\n            }.bind(this))\n                .on('error', console.error);\n\n\n    };\n\n    // QR reader functions \n    handleScan = async (data) => {\n        if (data) {\n            this.setState({ result: data });\n            this.disposeBottle();\n\n        }\n    }\n\n    handleError = err => {\n        console.error(err)\n    }\n\n    onScan = async (event) => {\n        event.preventDefault();\n        if (this.state.qr === false) {\n            this.setState({ qr: true });\n        }\n        else {\n            this.setState({ qr: false });\n        }\n    };\n\n    // Adds a new row dynamically to the table \n    addRow = () => {\n        this.setState((prevState) => {\n            let bottle = { addr: this.state.result, status: this.state.status };\n            return { rows: [...prevState.rows, bottle] };\n        });\n\n    };\n\n    // Log bottle as disposed \n    disposeBottle = async () => {\n        const accounts = await web3.eth.getAccounts();\n\n        //Add try and catch block here \n        await trackingContract.methods\n            .updateStatusDisposed(this.state.result)\n            .send({ from: accounts[0] });\n\n    };\n\n    updateRow(index){\n    }\n\n    \n    render() {\n\n        const { qr, rows } = this.state\n\n        return (\n            <div>\n                <h1>Welcome to Recycler's Page</h1>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                <Card header='Rewards' description={this.state.rewards} meta='ETH' centered='true' />\n\n                <br />\n                <br />\n\n                <div className=\"Scanner\" style={{ 'width': '40%', 'margin-left': 'auto', 'margin-right': 'auto' }}>\n                    <h2>Dispose a Plastic Bottle\n                    <Button className=\"QrReader\" style={{ 'vertical-align': 'middle' }} onClick={this.onScan} > Scan QR Code</Button>\n                        <div> {this.state.qr === true ? (<QRReader\n                            delay={300}\n                            onError={this.handleError}\n                            onScan={this.handleScan}\n                            style={{ width: \"60%\" }}\n                        />\n                        )\n                            : ''} </div>\n                    </h2>\n                </div>\n\n                <br />\n\n                <div className='BottleTable' style={{ 'width': '40%', 'margin-left': 'auto', 'margin-right': 'auto' }}>\n                    <Table unstackable size='small'>\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell>Plasitc Bottle Address</Table.HeaderCell>\n                                <Table.HeaderCell>Status</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            {this.state.rows.map(bottle => (\n                                <Link route={`/track/${bottle.addr}`}>\n                                <Table.Row id={this.state.rows.length} >\n                                    <Table.Cell selectable>\n                                        <a>\n                                        {bottle.addr}\n                                        </a>\n                                        </Table.Cell>\n                                    <Table.Cell>{bottle.status}</Table.Cell>\n                                </Table.Row>\n                                </Link>\n                            ))}\n                        </Table.Body>\n\n                    </Table>\n                </div>\n\n\n            </div>\n\n        );\n    }\n\n}\n\n//At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \nexport default recyclerPage; "]},"metadata":{},"sourceType":"module"}