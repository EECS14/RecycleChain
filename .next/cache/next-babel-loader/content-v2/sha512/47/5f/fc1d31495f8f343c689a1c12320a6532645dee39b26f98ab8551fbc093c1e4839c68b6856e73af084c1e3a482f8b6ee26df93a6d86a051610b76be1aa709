{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/viewauctions.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport trackingContract from '../../ethereum/tracking';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport { Link } from '../../routes';\nimport Layout from '../../components/Layout';\n\nvar viewauctions = /*#__PURE__*/function (_Component) {\n  _inherits(viewauctions, _Component);\n\n  var _super = _createSuper(viewauctions);\n\n  function viewauctions(props) {\n    var _this;\n\n    _classCallCheck(this, viewauctions);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context.sent;\n              //NOTE: Set the account back to account[0] - seller address is account 2\n              trackingContract.events.plasticBaleCompleted({\n                filter: {\n                  sellerAddress: accounts[0]\n                },\n                fromBlock: 0\n              }, function (error, event) {\n                //Debugging \n                console.log(event); //1. Fetch plastic bale addresses which are contract addresses/auction addresses from plasticBaleCompleted\n\n                var plasticbaleAddr = event.returnValues['plasticbale'];\n                console.log(plasticbaleAddr); //2. Create a new instance \n\n                var plasticBaleSC = plasticBaleContract(plasticbaleAddr); //3. Check auctionStarted events \n\n                plasticBaleSC.events.auctionStarted({\n                  filter: {\n                    baleAddress: plasticbaleAddr\n                  },\n                  fromBlock: 0\n                }, function (error, event) {\n                  console.log(event); //4. Extract Auction data from event\n\n                  var time = new Date(event.returnValues['closingTime'] * 1000);\n                  var date = time.toString();\n                  this.setState({\n                    auctionAddr: event.returnValues['baleAddress'],\n                    closingTime: date,\n                    startingPrice: event.returnValues['startingAmount']\n                  }); //5. Render card on webpage\n\n                  this.renderAuctions();\n                }.bind(this)).on('error', console.error);\n              }.bind(_assertThisInitialized(_this))).on('error', console.error);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderAuctions\", function () {\n      // Add more information here like the seller name \n      _this.setState(function (prevState) {\n        var items = {\n          header: _this.state.auctionAddr,\n          description: \"Starting Price: \" + _this.state.startingPrice + \" Ether\",\n          fluid: true,\n          meta: \"Closing Time: \" + _this.state.closingTime,\n          extra: \"Starting Price: \" + _this.state.startingPrice + \" Ether\"\n        };\n        return {\n          cards: [].concat(_toConsumableArray(prevState.cards), [items])\n        };\n      });\n    });\n\n    _this.state = {\n      cards: [],\n      closingTime: '',\n      startingPrice: '',\n      auctionAddr: ''\n    };\n    return _this;\n  }\n\n  _createClass(viewauctions, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"Buyer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, \"Welcome to Buyer Page\"), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, \"Open Auctions\"), __jsx(Card.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, this.state.cards.map(function (items) {\n        return __jsx(Link, {\n          route: \"/auctions/viewauctions/\".concat(items.header),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }\n        }, __jsx(Card, {\n          header: items.header,\n          stackable: \"true\",\n          meta: items.meta,\n          extra: items.extra,\n          description: items.description,\n          fluid: items.fluid,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 24\n          }\n        }));\n      }), \"      \")));\n    }\n  }]);\n\n  return viewauctions;\n}(Component);\n\nexport default viewauctions;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/viewauctions.js"],"names":["React","Component","Card","Button","web3","trackingContract","plasticBaleContract","Link","Layout","viewauctions","props","eth","getAccounts","accounts","events","plasticBaleCompleted","filter","sellerAddress","fromBlock","error","event","console","log","plasticbaleAddr","returnValues","plasticBaleSC","auctionStarted","baleAddress","time","Date","date","toString","setState","auctionAddr","closingTime","startingPrice","renderAuctions","bind","on","prevState","items","header","state","description","fluid","meta","extra","cards","map"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,mBAAP,MAAgC,4BAAhC;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;IAEMC,Y;;;;;AAEF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,8IAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEON,IAAI,CAACO,GAAL,CAASC,WAAT,EAFP;;AAAA;AAEVC,cAAAA,QAFU;AAGhB;AACAR,cAAAA,gBAAgB,CAACS,MAAjB,CAAwBC,oBAAxB,CAA6C;AACzCC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA,aAAa,EAAEJ,QAAQ,CAAC,CAAD;AAAzB,iBADiC;AACDK,gBAAAA,SAAS,EAAE;AADV,eAA7C,EAEG,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACvB;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAFuB,CAGvB;;AACA,oBAAMG,eAAe,GAAGH,KAAK,CAACI,YAAN,CAAmB,aAAnB,CAAxB;AACAH,gBAAAA,OAAO,CAACC,GAAR,CAAYC,eAAZ,EALuB,CAMvB;;AACA,oBAAME,aAAa,GAAGnB,mBAAmB,CAACiB,eAAD,CAAzC,CAPuB,CAQvB;;AAEAE,gBAAAA,aAAa,CAACX,MAAd,CAAqBY,cAArB,CAAoC;AAChCV,kBAAAA,MAAM,EAAE;AAAEW,oBAAAA,WAAW,EAAEJ;AAAf,mBADwB;AAEhCL,kBAAAA,SAAS,EAAE;AAFqB,iBAApC,EAGG,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACvBC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADuB,CAEvB;;AACA,sBAAIQ,IAAI,GAAG,IAAIC,IAAJ,CAAST,KAAK,CAACI,YAAN,CAAmB,aAAnB,IAAoC,IAA7C,CAAX;AACA,sBAAIM,IAAI,GAAGF,IAAI,CAACG,QAAL,EAAX;AACA,uBAAKC,QAAL,CAAc;AACVC,oBAAAA,WAAW,EAAEb,KAAK,CAACI,YAAN,CAAmB,aAAnB,CADH;AAEVU,oBAAAA,WAAW,EAAEJ,IAFH;AAGVK,oBAAAA,aAAa,EAAEf,KAAK,CAACI,YAAN,CAAmB,gBAAnB;AAHL,mBAAd,EALuB,CAWvB;;AACA,uBAAKY,cAAL;AAEH,iBAdE,CAcDC,IAdC,CAcI,IAdJ,CAHH,EAkBKC,EAlBL,CAkBQ,OAlBR,EAkBiBjB,OAAO,CAACF,KAlBzB;AAoBH,eA9BE,CA8BDkB,IA9BC,+BAFH,EAiCKC,EAjCL,CAiCQ,OAjCR,EAiCiBjB,OAAO,CAACF,KAjCzB;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXD;;AAAA,qEAsDF,YAAM;AACnB;AACA,YAAKa,QAAL,CAAc,UAACO,SAAD,EAAe;AACzB,YAAIC,KAAK,GAAG;AAAEC,UAAAA,MAAM,EAAE,MAAKC,KAAL,CAAWT,WAArB;AAAkCU,UAAAA,WAAW,EACrD,qBAAoB,MAAKD,KAAL,CAAWP,aAA/B,WADQ;AACiDS,UAAAA,KAAK,EAAE,IADxD;AAC8DC,UAAAA,IAAI,EAAE,mBAAmB,MAAKH,KAAL,CAAWR,WADlG;AACgHY,UAAAA,KAAK,EAAE,qBAAoB,MAAKJ,KAAL,CAAWP,aAA/B;AADvH,SAAZ;AAEA,eAAO;AAAEY,UAAAA,KAAK,+BAAMR,SAAS,CAACQ,KAAhB,IAAuBP,KAAvB;AAAP,SAAP;AAEH,OALD;AAOH,KA/DkB;;AAEf,UAAKE,KAAL,GAAa;AACTK,MAAAA,KAAK,EAAE,EADE;AAETb,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,aAAa,EAAE,EAHN;AAITF,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAFe;AAQlB;;;;6BA2DQ;AAAA;;AAEL,aACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,GAAG,EAAC,YAAV;AACI,QAAA,IAAI,EAAC,gEADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJA,EAKA,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKS,KAAL,CAAWK,KAAX,CAAiBC,GAAjB,CAAqB,UAAAR,KAAK;AAAA,eACvB,MAAC,IAAD;AAAM,UAAA,KAAK,mCAA4BA,KAAK,CAACC,MAAlC,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEG,MAAC,IAAD;AAAM,UAAA,MAAM,EAAED,KAAK,CAACC,MAApB;AACK,UAAA,SAAS,EAAC,MADf;AAEK,UAAA,IAAI,EAAED,KAAK,CAACK,IAFjB;AAGK,UAAA,KAAK,EAAKL,KAAK,CAACM,KAHrB;AAIK,UAAA,WAAW,EAAKN,KAAK,CAACG,WAJ3B;AAKK,UAAA,KAAK,EAAIH,KAAK,CAACI,KALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFH,CADuB;AAAA,OAA1B,CADD,WALA,CALJ,CADJ;AA4BH;;;;EAnGsB3C,S;;AAuG3B,eAAeQ,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport trackingContract from '../../ethereum/tracking';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport { Link } from '../../routes';\nimport Layout from '../../components/Layout';\n\nclass viewauctions extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            cards: [],\n            closingTime: '',\n            startingPrice: '',\n            auctionAddr: ''\n        };\n    }\n\n\n    componentDidMount = async () => {\n\n        const accounts = await web3.eth.getAccounts();\n        //NOTE: Set the account back to account[0] - seller address is account 2\n        trackingContract.events.plasticBaleCompleted({\n            filter: { sellerAddress: accounts[0] }, fromBlock: 0\n        }, function (error, event) {\n            //Debugging \n            console.log(event);\n            //1. Fetch plastic bale addresses which are contract addresses/auction addresses from plasticBaleCompleted\n            const plasticbaleAddr = event.returnValues['plasticbale'];\n            console.log(plasticbaleAddr);\n            //2. Create a new instance \n            const plasticBaleSC = plasticBaleContract(plasticbaleAddr);\n            //3. Check auctionStarted events \n\n            plasticBaleSC.events.auctionStarted({\n                filter: { baleAddress: plasticbaleAddr },\n                fromBlock: 0\n            }, function (error, event) {\n                console.log(event);\n                //4. Extract Auction data from event\n                var time = new Date(event.returnValues['closingTime'] * 1000);\n                var date = time.toString();\n                this.setState({\n                    auctionAddr: event.returnValues['baleAddress'],\n                    closingTime: date,\n                    startingPrice: event.returnValues['startingAmount']\n                });\n\n                //5. Render card on webpage\n                this.renderAuctions();\n\n            }.bind(this))\n                .on('error', console.error);\n\n        }.bind(this))\n            .on('error', console.error);\n\n\n    };\n\n\n    renderAuctions = () => {\n        // Add more information here like the seller name \n        this.setState((prevState) => {\n            let items = { header: this.state.auctionAddr, description:\n                `Starting Price: ` +this.state.startingPrice + ` Ether`, fluid: true, meta: `Closing Time: ` + this.state.closingTime , extra: `Starting Price: ` +this.state.startingPrice + ` Ether` };\n            return { cards: [...prevState.cards, items] };\n\n        });\n\n    };\n\n\n\n    render() {\n\n        return (\n            <Layout>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                <div className='Buyer'>\n\n                   \n                <h1>Welcome to Buyer Page</h1>\n                <h2>Open Auctions</h2>\n                <Card.Group>\n                {this.state.cards.map(items => (\n                    <Link route={`/auctions/viewauctions/${items.header}`}>\n                        \n                       <Card header={items.header}\n                            stackable='true'\n                            meta={items.meta}\n                            extra = { items.extra }\n                            description = { items.description }\n                            fluid = {items.fluid } />\n\n                    </Link>\n        )) }      </Card.Group>\n       \n                 </div>\n            </Layout>\n        );\n    }\n\n}\n\nexport default viewauctions; "]},"metadata":{},"sourceType":"module"}