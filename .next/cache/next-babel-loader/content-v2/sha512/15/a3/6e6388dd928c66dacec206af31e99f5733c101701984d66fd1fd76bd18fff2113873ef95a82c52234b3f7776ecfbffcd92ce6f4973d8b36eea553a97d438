{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/recycler.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*\nThis is the recycler page where a recycler scans the QR codes and view rewards\nContact used here: an instance of tracking.sol \nTo run the app, use the command npm run dev\n*/\nimport React, { Component } from 'react';\nimport { Card, Table, Button, Grid, Container, Menu } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nvar QRReader = dynamic(_c = function _c() {\n  return import('react-qr-reader');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-qr-reader')];\n    },\n    modules: ['react-qr-reader']\n  }\n});\n_c2 = QRReader;\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking';\nimport plasticBaleContract from '../ethereum/plasticBale';\nimport { Link } from '../routes';\nimport Layout from '../components/Layout';\n\nvar recyclerPage = /*#__PURE__*/function (_Component) {\n  _inherits(recyclerPage, _Component);\n\n  var _super = _createSuper(recyclerPage);\n\n  function recyclerPage(props) {\n    var _this;\n\n    _classCallCheck(this, recyclerPage);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context.sent;\n              plasticBaleSC.getPastEvents(\"allEvents\", {\n                fromBlock: 0,\n                toBlock: 'latest'\n              }, function (error, events) {\n                var myfunction = function myfunction(item) {\n                  if (item.event === 'bidderRegistered') {\n                    biddersnumber++;\n                    item.returnValues['bidderAddress'] === accounts[0] ? isJoin = true : null;\n                  } else if (item.event === 'auctionStarted') {\n                    highestbid = item.returnValues['startingAmount']; //1. Get closing time from event\n\n                    time = new Date(item.returnValues['closingTime'] * 1000);\n                    console.log(time);\n\n                    _this.initializeClock('clockdiv', time);\n                  } else if (item.event === 'bidderExited') {\n                    //console.log(item);\n                    item.returnValues['bidderAddress'] === accounts[0] ? isJoin = false : null;\n                    biddersnumber--;\n                  } else if (item.event === 'bidPlaced') {\n                    highestbid = item.returnValues['amount'];\n\n                    _this.findHighestBidder(item.returnValues['biddeAddress']);\n                  }\n                };\n\n                events.forEach(myfunction);\n\n                _this.setState({\n                  totalBidders: biddersnumber,\n                  highestBid: highestbid,\n                  join: isJoin,\n                  closingTime: time\n                });\n              });\n              trackingContract.events.updateStatusRecycler({\n                filter: {\n                  recycler: accounts[0]\n                },\n                fromBlock: 0\n              }, function (error, event) {\n                var _this2 = this;\n\n                this.setState({\n                  result: event.returnValues['plasticBottleAddress'],\n                  status: event.returnValues['status']\n                });\n                this.setState(function (prevState) {\n                  return {\n                    bottlesLogged: [].concat(_toConsumableArray(prevState.bottlesLogged), [_this2.state.result])\n                  };\n                });\n                this.addRow();\n              }.bind(_assertThisInitialized(_this))).on('error', console.error); // Update status as sorted \n\n              trackingContract.events.updateStatusMachine({\n                filter: {\n                  plasticBottleAddress: _this.state.bottlesLogged\n                },\n                fromBlock: 0\n              }, function (error, event) {\n                var index = this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress']);\n                this.updateRow(index, event.returnValues['status']);\n              }.bind(_assertThisInitialized(_this))).on('error', console.error); // Get all deployed plastic bales SC addresses \n\n              trackingContract.events.plasticBaleCompleted({\n                fromBlock: 0\n              }, function (error, event) {\n                console.log(event);\n                var plasticbaleAddr = event.returnValues['plasticbale'];\n                console.log(plasticbaleAddr);\n                var plasticBaleSC = plasticBaleContract(plasticbaleAddr); // Fetch recycler rewards \n\n                plasticBaleSC.events.recyclerRewarded({\n                  filter: {\n                    recycler: accounts[0]\n                  },\n                  fromBlock: 0\n                }, function (error, event) {\n                  console.log(event);\n                  this.setState({\n                    rewards: this.state.rewards + event.returnValues['etherReward']\n                  });\n                }.bind(this)).on('error', console.error); //Update status purchases\n\n                plasticBaleSC.events.updateStatusBuyer({\n                  filter: {\n                    plasticBottleAddress: this.state.bottlesLogged\n                  },\n                  fromBlock: 0\n                }, function (error, event) {\n                  var index = this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress']);\n                  this.updateRow(index, event.returnValues['status']);\n                }.bind(this)).on('error', console.error);\n              }.bind(_assertThisInitialized(_this))).on('error', console.error);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScan\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (data) {\n                  _this.setState({\n                    result: data\n                  });\n\n                  _this.disposeBottle();\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleError\", function (err) {\n      console.error(err);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onScan\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault();\n\n                if (_this.state.qr === false) {\n                  _this.setState({\n                    qr: true\n                  });\n                } else {\n                  _this.setState({\n                    qr: false\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"addRow\", function () {\n      _this.setState(function (prevState) {\n        var bottle = {\n          addr: _this.state.result,\n          status: _this.state.status\n        };\n        return {\n          rows: [].concat(_toConsumableArray(prevState.rows), [bottle])\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"disposeBottle\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context4.sent;\n              _context4.next = 5;\n              return trackingContract.methods.updateStatusDisposed(_this.state.result).send({\n                from: accounts[0]\n              });\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleItemClick\", function (e, _ref5) {\n      var name = _ref5.name;\n      return _this.setState({\n        activeItem: name\n      });\n    });\n\n    _this.state = {\n      rewards: 0,\n      result: '',\n      status: '',\n      qr: false,\n      rows: [],\n      bottlesLogged: [],\n      activeItem: 'scan'\n    };\n    return _this;\n  } // retrieve all bottled logged by user from ropsten network \n\n\n  _createClass(recyclerPage, [{\n    key: \"updateRow\",\n    value: function updateRow(index, status) {\n      // 1. Make a shallow copy of rows\n      var rows = _toConsumableArray(this.state.rows); // 2. Make a shallow copy of the row you want to mutate\n\n\n      var row = _objectSpread({}, rows[index]); // 3. Replace the property you're intested in\n\n\n      row.status = status; // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n\n      rows[index] = row; // 5. Set the state to our new copy\n\n      this.setState({\n        rows: rows\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          qr = _this$state.qr,\n          rows = _this$state.rows,\n          activeItem = _this$state.activeItem;\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"Recycler\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }\n      }, \"Recycler Page\"), __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }\n      }), __jsx(Menu, {\n        widths: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }\n      }, __jsx(Menu.Item, {\n        name: \"scan\",\n        active: activeItem === 'about',\n        onClick: this.handleItemClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }\n      }, \"Scan\"), __jsx(Menu.Item, {\n        name: \"history\",\n        active: activeItem === 'features',\n        onClick: this.handleItemClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }\n      }, \"History\"), __jsx(Menu.Item, {\n        name: \"rewards\",\n        active: activeItem === 'stats',\n        onClick: this.handleItemClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }\n      }, \"Rewards\")), activeItem === 'scan' && __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }\n      }, __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 29\n        }\n      }, __jsx(Grid.Row, {\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 33\n        }\n      }, __jsx(Grid.Column, {\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 37\n        }\n      }, __jsx(\"div\", {\n        className: \"Scanner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 41\n        }\n      }, __jsx(\"h2\", {\n        style: {\n          'text-align': 'center',\n          'padding-top': '45px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 45\n        }\n      }, \"Aim at QR code to dispose water bottle \"), __jsx(Button, {\n        className: \"QrReader\",\n        onClick: this.onScan,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 45\n        }\n      }, \" Scan\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 45\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 45\n        }\n      }), __jsx(\"div\", {\n        style: {\n          'margin': 'auto',\n          'display': 'block',\n          'padding-left': '100px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 45\n        }\n      }, \" \", this.state.qr === true ? __jsx(QRReader, {\n        delay: 300,\n        onError: this.handleError,\n        onScan: this.handleScan,\n        style: {\n          width: \"60%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 49\n        }\n      }) : '', \" \")))))), activeItem === 'history' && __jsx(\"div\", {\n        style: {\n          'padding-top': '45px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }\n      }, __jsx(\"h3\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 29\n        }\n      }, \"Bottle history\"), __jsx(\"div\", {\n        className: \"BottleTable\",\n        style: {\n          'width': '90%',\n          'margin-left': 'auto',\n          'margin-right': 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 29\n        }\n      }, __jsx(Table, {\n        unstackable: true,\n        size: \"small\",\n        fixed: true,\n        singleLine: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 33\n        }\n      }, __jsx(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 37\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 41\n        }\n      }, __jsx(Table.HeaderCell, {\n        width: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 45\n        }\n      }, \"Plasitc Bottle Address\"), __jsx(Table.HeaderCell, {\n        width: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 45\n        }\n      }, \"Status\"))), __jsx(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 37\n        }\n      }, this.state.rows.map(function (bottle) {\n        return __jsx(Link, {\n          route: \"/track/\".concat(bottle.addr),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 45\n          }\n        }, __jsx(Table.Row, {\n          id: _this3.state.rows.length,\n          key: _this3.state.rows.lengt,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 49\n          }\n        }, __jsx(Table.Cell, {\n          selectable: true,\n          style: {\n            'overflow': 'hidden'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 53\n          }\n        }, __jsx(\"a\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 57\n          }\n        }, bottle.addr)), __jsx(Table.Cell, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 53\n          }\n        }, bottle.status)));\n      }))))), activeItem === 'rewards' && __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }\n      }, __jsx(\"h3\", {\n        style: {\n          textAlign: 'center',\n          'padding-top': '45px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 29\n        }\n      }, \"Total rewards\"), __jsx(Card, {\n        header: \"Rewards\",\n        description: this.state.rewards - 0,\n        meta: \"ETH\",\n        centered: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 29\n        }\n      }))));\n    }\n  }]);\n\n  return recyclerPage;\n}(Component); //At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \n\n\nexport default recyclerPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QRReader$dynamic\");\n$RefreshReg$(_c2, \"QRReader\");","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/recycler.js"],"names":["React","Component","Card","Table","Button","Grid","Container","Menu","dynamic","QRReader","ssr","web3","trackingContract","plasticBaleContract","Link","Layout","recyclerPage","props","eth","getAccounts","accounts","plasticBaleSC","getPastEvents","fromBlock","toBlock","error","events","myfunction","item","event","biddersnumber","returnValues","isJoin","highestbid","time","Date","console","log","initializeClock","findHighestBidder","forEach","setState","totalBidders","highestBid","join","closingTime","updateStatusRecycler","filter","recycler","result","status","prevState","bottlesLogged","state","addRow","bind","on","updateStatusMachine","plasticBottleAddress","index","indexOf","updateRow","plasticBaleCompleted","plasticbaleAddr","recyclerRewarded","rewards","updateStatusBuyer","data","disposeBottle","err","preventDefault","qr","bottle","addr","rows","methods","updateStatusDisposed","send","from","e","name","activeItem","row","handleItemClick","onScan","handleError","handleScan","width","textAlign","map","length","lengt"],"mappings":"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","sourcesContent":["/*\nThis is the recycler page where a recycler scans the QR codes and view rewards\nContact used here: an instance of tracking.sol \nTo run the app, use the command npm run dev\n*/\n\nimport React, { Component } from 'react';\nimport { Card, Table, Button, Grid, Container, Menu } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nconst QRReader = dynamic(() => import('react-qr-reader'), { ssr: false });\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking';\nimport plasticBaleContract from '../ethereum/plasticBale';\nimport { Link } from '../routes';\nimport Layout from '../components/Layout';\n\nclass recyclerPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rewards: 0,\n            result: '',\n            status: '',\n            qr: false,\n            rows: [],\n            bottlesLogged: [],\n            activeItem: 'scan'\n        };\n    }\n\n    // retrieve all bottled logged by user from ropsten network \n    componentDidMount = async () => {\n        const accounts = await web3.eth.getAccounts();\n\n        plasticBaleSC.getPastEvents(\"allEvents\", { fromBlock: 0, toBlock: 'latest' }, (error, events) => {\n\n            const myfunction = (item) => {\n\n                if (item.event === 'bidderRegistered') {\n                    biddersnumber++;\n                    item.returnValues['bidderAddress'] === accounts[0] ? isJoin = true : null;\n\n\n                } else if (item.event === 'auctionStarted') {\n                    highestbid = item.returnValues['startingAmount'];\n\n                    //1. Get closing time from event\n                    time = new Date(item.returnValues['closingTime'] * 1000);\n                    console.log(time);\n                    this.initializeClock('clockdiv', time);\n                \n\n                } else if (item.event === 'bidderExited') {\n                    //console.log(item);\n                    item.returnValues['bidderAddress'] === accounts[0] ? isJoin = false : null;\n                    biddersnumber--;\n\n                } else if (item.event === 'bidPlaced') {\n                    highestbid = item.returnValues['amount'];\n                    this.findHighestBidder(item.returnValues['biddeAddress']);\n\n                }\n\n            };\n\n            events.forEach(myfunction);\n\n            this.setState({\n                totalBidders: biddersnumber,\n                highestBid: highestbid,\n                join: isJoin,\n                closingTime: time\n            });\n\n\n        });\n\n\n\n\n\n\n\n\n\n\n\n        trackingContract.events.updateStatusRecycler({\n            filter: { recycler: accounts[0] }, fromBlock: 0\n        }, function (error, event) {\n\n            this.setState({ result: event.returnValues['plasticBottleAddress'], status: event.returnValues['status'] });\n            this.setState(prevState => ({ bottlesLogged: [...prevState.bottlesLogged, this.state.result] }));\n            this.addRow();\n        }.bind(this))\n            .on('error', console.error);\n\n        // Update status as sorted \n        trackingContract.events.updateStatusMachine({\n            filter: { plasticBottleAddress: this.state.bottlesLogged }, fromBlock: 0\n        }, function (error, event) {\n            let index = this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress']);\n            this.updateRow(index, event.returnValues['status']);\n        }.bind(this))\n            .on('error', console.error);\n\n        // Get all deployed plastic bales SC addresses \n        trackingContract.events.plasticBaleCompleted({\n            fromBlock: 0\n        }, function (error, event) {\n            console.log(event);\n            const plasticbaleAddr = event.returnValues['plasticbale'];\n            console.log(plasticbaleAddr);\n            const plasticBaleSC = plasticBaleContract(plasticbaleAddr);\n\n            // Fetch recycler rewards \n            plasticBaleSC.events.recyclerRewarded({\n                filter: { recycler: accounts[0] },\n                fromBlock: 0\n            }, function (error, event) {\n                console.log(event);\n\n                this.setState({\n                    rewards: this.state.rewards + event.returnValues['etherReward'],\n                });\n\n            }.bind(this))\n                .on('error', console.error);\n\n            //Update status purchases\n            plasticBaleSC.events.updateStatusBuyer({\n                filter: { plasticBottleAddress: this.state.bottlesLogged },\n                fromBlock: 0\n            }, function (error, event) {\n                let index = this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress']);\n                this.updateRow(index, event.returnValues['status']);\n\n            }.bind(this))\n                .on('error', console.error);\n\n\n        }.bind(this))\n            .on('error', console.error);\n\n\n    };\n\n\n    // QR reader functions \n    handleScan = async (data) => {\n        if (data) {\n            this.setState({ result: data });\n            this.disposeBottle();\n\n        }\n    }\n\n    handleError = err => {\n        console.error(err)\n    }\n\n    onScan = async (event) => {\n        event.preventDefault();\n        if (this.state.qr === false) {\n            this.setState({ qr: true });\n        }\n        else {\n            this.setState({ qr: false });\n        }\n    };\n\n    // Adds a new row dynamically to the table \n    addRow = () => {\n        this.setState((prevState) => {\n            let bottle = { addr: this.state.result, status: this.state.status };\n            return { rows: [...prevState.rows, bottle] };\n        });\n\n    };\n\n    // Log bottle as disposed \n    disposeBottle = async () => {\n        const accounts = await web3.eth.getAccounts();\n\n        //Add try and catch block here \n        await trackingContract.methods\n            .updateStatusDisposed(this.state.result)\n            .send({ from: accounts[0] });\n\n    };\n\n    updateRow(index, status) {\n        // 1. Make a shallow copy of rows\n        let rows = [...this.state.rows];\n        // 2. Make a shallow copy of the row you want to mutate\n        let row = { ...rows[index] };\n        // 3. Replace the property you're intested in\n        row.status = status;\n        // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n        rows[index] = row;\n        // 5. Set the state to our new copy\n        this.setState({ rows });\n    }\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n\n    render() {\n\n        const { qr, rows, activeItem } = this.state\n\n        return (\n            <Layout>\n                <div className='Recycler'>\n                    <h2>Recycler Page</h2>\n                    <link rel=\"stylesheet\"\n                        href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                    />\n\n                    <Menu widths={3}>\n                        <Menu.Item\n                            name='scan'\n                            active={activeItem === 'about'}\n                            onClick={this.handleItemClick}\n                        >\n                            Scan\n                </Menu.Item>\n\n                        <Menu.Item\n                            name='history'\n                            active={activeItem === 'features'}\n                            onClick={this.handleItemClick}\n                        >\n                            History\n                </Menu.Item>\n\n                        <Menu.Item\n                            name='rewards'\n                            active={activeItem === 'stats'}\n                            onClick={this.handleItemClick}\n                        >\n                            Rewards\n                </Menu.Item>\n                    </Menu>\n\n\n\n                    {(activeItem === 'scan') && (\n                        <div>\n                            <Grid>\n                                <Grid.Row centered>\n                                    <Grid.Column textAlign=\"center\">\n                                        <div className=\"Scanner\">\n                                            <h2 style={{ 'text-align': 'center',  'padding-top': '45px'}} >Aim at QR code to dispose water bottle </h2>\n                                            <Button className=\"QrReader\" onClick={this.onScan} > Scan</Button>\n                                            <br />\n                                            <br />\n                                            <div style={{  'margin': 'auto', 'display': 'block',  'padding-left': '100px' }} > {this.state.qr === true ? (\n                                                <QRReader\n                                                    delay={300}\n                                                    onError={this.handleError}\n                                                    onScan={this.handleScan}\n                                                    style={{ width: \"60%\" }}\n                                                />\n                                            )\n                                                : ''} </div>\n\n                                        </div>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n\n                        </div>\n                    )}\n\n\n                    {(activeItem === 'history') && (\n                        <div style={{'padding-top': '45px'}}>\n                            <h3 style={{ textAlign: 'center' }}>Bottle history</h3>\n\n                            <div className='BottleTable' style={{ 'width': '90%', 'margin-left': 'auto', 'margin-right': 'auto' }}>\n                                <Table unstackable size='small' fixed singleLine>\n                                    <Table.Header>\n                                        <Table.Row>\n                                            <Table.HeaderCell width={16}>Plasitc Bottle Address</Table.HeaderCell>\n                                            <Table.HeaderCell width={6}>Status</Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Header>\n                                    <Table.Body>\n                                        {this.state.rows.map(bottle => (\n                                            <Link route={`/track/${bottle.addr}`}>\n                                                <Table.Row id={this.state.rows.length} key={this.state.rows.lengt}>\n                                                    <Table.Cell selectable style={{ 'overflow': 'hidden' }}>\n                                                        <a>\n                                                            {bottle.addr}\n                                                        </a>\n                                                    </Table.Cell>\n                                                    <Table.Cell>{bottle.status}</Table.Cell>\n                                                </Table.Row>\n                                            </Link>\n                                        ))}\n                                    </Table.Body>\n\n                                </Table>\n                            </div>\n\n                        </div>\n                    )}\n\n\n\n                    {(activeItem === 'rewards') && (\n                        <div>\n                            <h3 style={{ textAlign: 'center', 'padding-top': '45px' }}>Total rewards</h3>\n\n                            <Card header='Rewards' description={this.state.rewards - 0 } meta='ETH' centered='true' />\n\n                        </div>\n                    )}\n\n\n                </div>\n            </Layout>\n\n        );\n    }\n\n}\n\n//At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \nexport default recyclerPage;"]},"metadata":{},"sourceType":"module"}