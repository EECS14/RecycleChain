{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/joinAuction.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Icon, Image, Statistic } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\n\nclass joinAuction extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      const accounts = await web3.eth.getAccounts();\n      const plasticBaleSC = plasticBaleContract(this.props.address);\n      var biddersnumber = 0;\n      var highestbid = 0;\n      var highestbidder = '';\n      plasticBaleSC.getPastEvents(\"allEvents\", {\n        fromBlock: 0,\n        toBlock: 'latest'\n      }, (error, events) => {\n        console.log(events);\n\n        const myfunction = item => {\n          if (item.event === 'bidderRegistered') {\n            //console.log(item);\n            biddersnumber++; //console.log(biddersnumber);\n          } else if (item.event === 'auctionStarted') {\n            highestbid = item.returnValues['startingAmount'];\n          } else if (item.event === 'bidderExited') {\n            //console.log(item);\n            biddersnumber--;\n          } else if (item.event === 'bidPlaced') {\n            highestbid = item.returnValues['amount'];\n\n            __jsx(Statistic, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }\n            }, __jsx(Statistic.Value, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }\n            }, __jsx(Icon, {\n              name: \"users\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }\n            }), \" \", this.state.totalBidders), __jsx(Statistic.Label, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }\n            }, \"Bidders\"));\n          }\n        };\n\n        events.forEach(myfunction);\n        this.setState({\n          totalBidders: biddersnumber,\n          highestBid: highestbid\n        });\n      });\n    });\n\n    _defineProperty(this, \"onJoinAuction\", async event => {\n      event.preventDefault();\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const plasticBaleSC = plasticBaleContract(this.props.address);\n        await plasticBaleSC.methods.addBidder(this.state.registrationSCAddr, accounts[0]).send({\n          from: accounts[0]\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      } // if errorMsg is empty, registration is successful\n\n\n      if (!this.state.errorMessage) {\n        this.setState({\n          join: true\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"onExitAuction\", async () => {});\n\n    this.state = {\n      join: false,\n      registrationSCAddr: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n      errorMessage: '',\n      loading: false,\n      totalBidders: 0,\n      highestBid: 0,\n      highestBidder: ''\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  static async getInitialProps(props) {\n    //fetches address of the bale from URL\n    const {\n      address\n    } = props.query;\n    return {\n      address\n    };\n  }\n\n  render() {\n    const {\n      join\n    } = this.state;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), console.log(this.props.address), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, \"Live Auction\"), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \" Plastic Bale being auctioned: \", this.props.address, \" \"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"AuctionContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, __jsx(Statistic.Group, {\n      widths: \"four\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, __jsx(Statistic, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, __jsx(Statistic.Value, {\n      text: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, this.state.highestBid, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }), \"Wei\"), __jsx(Statistic.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, \"Highest Bid\")), __jsx(Statistic, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, __jsx(Statistic.Value, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, __jsx(Icon, {\n      name: \"users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }), \" \", this.state.totalBidders), __jsx(Statistic.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, \"Total Bidders\")), __jsx(Statistic, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, __jsx(Statistic.Value, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, __jsx(Icon, {\n      name: \"user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }), \" \", this.state.highestBidder), __jsx(Statistic.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, \"Highest Bidder\")))), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      onClick: this.onJoinAuction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, \"Join Auction \"), join && __jsx(\"div\", {\n      className: \"auctionInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, __jsx(Form, {\n      onSubmit: this.onStartAuction,\n      error: !!this.state.errorMessage,\n      success: this.state.hasNoError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Field, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, \"Amount\"), __jsx(Input, {\n      value: this.state.startingPrice,\n      label: {\n        basic: true,\n        content: 'Wei'\n      },\n      labelPosition: \"right\",\n      onChange: event => this.setState({\n        startingPrice: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    })), __jsx(Message, {\n      error: true,\n      header: \"Error!\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }), __jsx(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Bid is Placed!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, \"Place Bid\")), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, \" You can only exit the auction if no bids were placed!\"), __jsx(Button, {\n      loading: this.state.loading,\n      onClick: this.onExitAuction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, \"Exit Auction \")));\n  }\n\n}\n\nexport default joinAuction;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/joinAuction.js"],"names":["React","Component","Form","Button","Input","Message","Icon","Image","Statistic","web3","plasticBaleContract","joinAuction","constructor","props","accounts","eth","getAccounts","plasticBaleSC","address","biddersnumber","highestbid","highestbidder","getPastEvents","fromBlock","toBlock","error","events","console","log","myfunction","item","event","returnValues","state","totalBidders","forEach","setState","highestBid","preventDefault","loading","errorMessage","methods","addBidder","registrationSCAddr","send","from","err","message","join","highestBidder","componentDidMount","bind","getInitialProps","query","render","onJoinAuction","onStartAuction","hasNoError","startingPrice","basic","content","target","value","onExitAuction"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Icon, Image, Statistic } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\n\nclass joinAuction extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            join: false,\n            registrationSCAddr: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n            errorMessage: '',\n            loading: false,\n            totalBidders: 0,\n            highestBid: 0,\n            highestBidder:''\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n\n\n    static async getInitialProps(props) {\n        //fetches address of the bale from URL\n        const { address } = props.query;\n    \n        return { address };\n    }\n\n    componentDidMount = async () => {\n\n        const accounts = await web3.eth.getAccounts();\n        const plasticBaleSC = plasticBaleContract(this.props.address); \n\n        var biddersnumber = 0; \n        var highestbid =0;\n        var highestbidder=''; \n\n        plasticBaleSC.getPastEvents(\"allEvents\",{fromBlock: 0, toBlock:'latest'},(error, events)=>{\n            console.log(events);\n\n            const myfunction = (item) => {\n\n                if(item.event==='bidderRegistered'){\n                    //console.log(item);\n                    biddersnumber++; \n                    //console.log(biddersnumber);\n                    \n                }else if(item.event==='auctionStarted'){\n                    highestbid = item.returnValues['startingAmount']; \n\n                }else if (item.event==='bidderExited'){\n                    //console.log(item);\n                    biddersnumber--;\n\n                }else if(item.event==='bidPlaced'){\n                    highestbid = item.returnValues['amount']; \n                    <Statistic>\n                            <Statistic.Value>\n                                <Icon name='users' /> {this.state.totalBidders}\n                      </Statistic.Value>\n                            <Statistic.Label>Bidders</Statistic.Label>\n                        </Statistic>\n\n                }\n\n            };\n\n            events.forEach(myfunction);\n\n            this.setState({totalBidders: biddersnumber,\n                 highestBid: highestbid});\n           \n\n    });\n\n   \n    };\n\n    onJoinAuction = async (event) => {\n        event.preventDefault();\n        const accounts = await web3.eth.getAccounts();\n\n        this.setState({loading: true, errorMessage: ''});\n\n        try {\n            const plasticBaleSC = plasticBaleContract(this.props.address); \n\n            await plasticBaleSC.methods\n                .addBidder(this.state.registrationSCAddr, accounts[0])\n                .send({ from: accounts[0]});\n\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n            \n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage){\n            this.setState({ join: true }); \n        }\n\n            this.setState({loading: false});\n    };\n\n\n\n    onExitAuction = async () => {\n\n\n    };\n\n\n    render() {\n\n        const{join}=this.state; \n\n        return (\n            <div>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n                 {console.log(this.props.address)}\n\n                <h1>Live Auction</h1>\n                <h2> Plastic Bale being auctioned: {this.props.address} </h2>\n                <br/>\n\n                <div className='AuctionContainer'>\n\n                    <Statistic.Group widths='four'>\n                        <Statistic>\n                            <Statistic.Value text>\n                                {this.state.highestBid}\n                            <br/>\n                            Wei\n                            </Statistic.Value>\n                            <Statistic.Label>Highest Bid</Statistic.Label>\n                        </Statistic>\n\n                        <Statistic>\n                            <Statistic.Value>\n                                <Icon name='users' /> {this.state.totalBidders}\n                      </Statistic.Value>\n                            <Statistic.Label>Total Bidders</Statistic.Label>\n                        </Statistic>\n\n                        <Statistic>\n                            <Statistic.Value>\n                                <Icon name='user' /> {this.state.highestBidder}\n                      </Statistic.Value>\n                            <Statistic.Label>Highest Bidder</Statistic.Label>\n                        </Statistic>\n\n\n                    </Statistic.Group>\n\n                </div>\n\n          <br/>\n          <br/>\n\n          <Button loading={this.state.loading} onClick={this.onJoinAuction}>Join Auction </Button>\n                \n            {join && ( \n\n                <div className='auctionInput'>\n                <Form onSubmit={this.onStartAuction} error={!!this.state.errorMessage} success={this.state.hasNoError}>\n\n                    <Form.Field width={4}>\n                        <label>Amount</label>\n                        <Input value={this.state.startingPrice}\n                            label={{ basic: true, content: 'Wei' }}\n                            labelPosition='right'\n                            onChange={event => this.setState({ startingPrice: event.target.value })} />\n                    </Form.Field>\n\n                    <Message error header=\"Error!\" content={this.state.errorMessage} />\n\n\n                    <Message success header=\"Success!\" content=\"Bid is Placed!\" />\n\n\n                    <Button loading={this.state.loading} type='submit'>Place Bid</Button>\n                </Form>\n\n                <br/>\n\n                <p> You can only exit the auction if no bids were placed!</p>\n                <Button loading={this.state.loading} onClick={this.onExitAuction}>Exit Auction </Button> \n                </div>\n                )}\n                \n            </div>\n        );\n    }\n\n\n\n}\n\nexport default joinAuction; "]},"metadata":{},"sourceType":"module"}