{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/viewauctions.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport trackingContract from '../../ethereum/tracking';\nimport plasticBaleContract from '../../ethereum/plasticBale';\n\nclass viewauctions extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      const accounts = await web3.eth.getAccounts(); //NOTE: Set the account back to account[0] - seller address is account 2\n\n      trackingContract.events.plasticBaleCompleted({\n        filter: {\n          sellerAddress: accounts[0]\n        },\n        fromBlock: 0\n      }, function (error, event) {\n        //Debugging \n        console.log(event); //1. Fetch plastic bale addresses which are contract addresses/auction addresses from plasticBaleCompleted\n\n        const plasticbaleAddr = event.returnValues['plasticbale'];\n        console.log(plasticbaleAddr); //2. Create a new instance \n\n        const plasticBaleSC = plasticBaleContract(plasticbaleAddr); //3. Check auctionStarted events \n\n        plasticBaleSC.events.auctionStarted({\n          filter: {\n            baleAddress: plasticbaleAddr\n          },\n          fromBlock: 0\n        }, function (error, event) {\n          console.log(event); //4.render card on webpage\n        }.bind(this)).on('error', console.error);\n      }.bind(this)).on('error', console.error);\n    });\n\n    _defineProperty(this, \"checkAuctionStartedEvent\", async () => {\n      for (let i = 0; i < this.state.plasticBaleInstances.length; i++) {\n        //1.  create a new instance \n        const plasticBaleSC = plasticBaleContract(this.state.plasticBaleInstances[i]); //2. Check auctionStarted events \n\n        plasticBaleSC.events.auctionStarted({\n          filter: {\n            baleAddress: this.state.plasticBaleInstances[i]\n          },\n          fromBlock: 0\n        }, function (error, event) {\n          console.log(event); //3.render card \n        }.bind(this)).on('error', console.error);\n      }\n    });\n\n    this.state = {\n      cards: []\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Open Auctions\"), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default viewauctions;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/viewauctions.js"],"names":["React","Component","Card","web3","trackingContract","plasticBaleContract","viewauctions","constructor","props","accounts","eth","getAccounts","events","plasticBaleCompleted","filter","sellerAddress","fromBlock","error","event","console","log","plasticbaleAddr","returnValues","plasticBaleSC","auctionStarted","baleAddress","bind","on","i","state","plasticBaleInstances","length","cards","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport trackingContract from '../../ethereum/tracking'; \nimport plasticBaleContract from '../../ethereum/plasticBale';\n\nclass viewauctions extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            cards: []\n\n        };\n    }\n\n    \n    componentDidMount = async () => {\n\n        \n        const accounts = await web3.eth.getAccounts();\n        //NOTE: Set the account back to account[0] - seller address is account 2\n        trackingContract.events.plasticBaleCompleted({\n            filter: { sellerAddress: accounts[0] }, fromBlock: 0\n        }, function (error, event) {\n            //Debugging \n            console.log(event); \n            //1. Fetch plastic bale addresses which are contract addresses/auction addresses from plasticBaleCompleted\n            const plasticbaleAddr = event.returnValues['plasticbale']; \n            console.log(plasticbaleAddr);\n            //2. Create a new instance \n            const plasticBaleSC = plasticBaleContract(plasticbaleAddr); \n            //3. Check auctionStarted events \n\n            plasticBaleSC.events.auctionStarted({\n                filter: {baleAddress: plasticbaleAddr},\n                fromBlock: 0 }, function (error, event) {\n                console.log(event);\n                //4.render card on webpage\n\n        }.bind(this))\n        .on('error', console.error);\n\n\n\n\n\n\n        }.bind(this))\n            .on('error', console.error);\n\n        \n    };\n\n\n\ncheckAuctionStartedEvent = async () => {\n\n    for(let i=0; i < this.state.plasticBaleInstances.length ; i++){\n           \n                   //1.  create a new instance \n                   const plasticBaleSC = plasticBaleContract(this.state.plasticBaleInstances[i]); \n                   //2. Check auctionStarted events \n                   plasticBaleSC.events.auctionStarted({\n                       filter: {baleAddress: this.state.plasticBaleInstances[i]},\n                       fromBlock: 0 }, function (error, event) {\n                       console.log(event);\n                       //3.render card \n   \n               }.bind(this))\n               .on('error', console.error);\n   \n           }\n   \n    };\n\n\n    render() {\n\n        return (\n            <div>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                <h1>Open Auctions</h1>\n                <h2></h2>\n                \n            </div>\n        );\n    }\n\n}\n\nexport default viewauctions; "]},"metadata":{},"sourceType":"module"}