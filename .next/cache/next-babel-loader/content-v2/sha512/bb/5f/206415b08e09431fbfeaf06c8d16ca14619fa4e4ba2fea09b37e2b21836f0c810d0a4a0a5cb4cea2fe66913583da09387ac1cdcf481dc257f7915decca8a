{"ast":null,"code":"var _jsxFileName = \"/Users/maithabarsham/Desktop/RecycleChain/RecycleChain/pages/auctions/startAuction.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Statistic, Icon, Grid, Container } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport registerContract from '../../ethereum/register';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport Layout from '../../components/Layout';\n\nclass startAuction extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onStartAuction\", async event => {\n      event.preventDefault(); //1. Extract time from date\n      //2. Conver to Milliseconds\n\n      let closingTime = Math.ceil(this.state.startDate.getTime() / 1000);\n      console.log(closingTime);\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        const plasticBaleSC = plasticBaleContract(this.props.address);\n        await plasticBaleSC.methods.startAuction(closingTime, this.state.startingPrice).send({\n          from: accounts[0]\n        });\n        this.setState({\n          open: true\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n        this.setState({\n          hasError: false\n        });\n      } // if errorMsg is empty, registration is successful\n\n\n      if (!this.state.errorMessage) this.setState({\n        hasNoError: true\n      });\n      this.setState({\n        loading: false\n      });\n    });\n\n    this.state = {\n      startingPrice: '',\n      errorMessage: '',\n      hasNoError: false,\n      startDate: new Date(),\n      loading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  static async getInitialProps(props) {\n    //fetches address of the bottle from the URL\n    const {\n      address\n    } = props.query;\n    return {\n      address\n    };\n  }\n\n  handleChange(date) {\n    this.setState({\n      startDate: date\n    });\n    console.log(date);\n  }\n\n  /* onEndAuction = async (event) => {\n        event.preventDefault();\n        this.setState({ loading: true });\n        try {\n           const accounts = await web3.eth.getAccounts();\n           const plasticBaleSC = plasticBaleContract(this.props.address);\n           await plasticBaleSC.methods.endAuction().send({ from: accounts[0], gas: 250983 });\n           this.setState({ notOver: false });\n        } catch (err) {\n           // REVERT REASON IS ALMOST SHOWN HERE\n           console.log(err);\n           this.setState({ errorMessage: err });\n           this.setState({ hasError: false });\n       }\n        this.setState({ loading: false });\n   }; */\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"setAuction\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, \"Set Bale's Auction Parameters: \"), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, __jsx(Grid.Row, {\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, __jsx(Grid.Column, {\n      width: 12,\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    }, __jsx(Form, {\n      onSubmit: this.onStartAuction,\n      error: !!this.state.errorMessage,\n      success: this.state.hasNoError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 41\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 45\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 49\n      }\n    }, \"Auction Closing Date and Time\"), __jsx(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.handleChange,\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 20,\n      timeCaption: \"time\",\n      dateFormat: \"MM/dd/yyyy h:mm aa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 49\n      }\n    })), __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 45\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 49\n      }\n    }, \"Starting Price\"), __jsx(Input, {\n      value: this.state.startingPrice,\n      label: {\n        basic: true,\n        content: 'Ether'\n      },\n      labelPosition: \"right\",\n      onChange: event => this.setState({\n        startingPrice: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 49\n      }\n    })), __jsx(Message, {\n      error: true,\n      header: \"Error!\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 45\n      }\n    }), __jsx(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Auction is Open!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 45\n      }\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 45\n      }\n    }, \"Start Auction\"))))))));\n  }\n\n}\n\nexport default startAuction;","map":{"version":3,"sources":["/Users/maithabarsham/Desktop/RecycleChain/RecycleChain/pages/auctions/startAuction.js"],"names":["React","Component","Form","Button","Input","Message","Statistic","Icon","Grid","Container","DatePicker","web3","registerContract","plasticBaleContract","Layout","startAuction","constructor","props","event","preventDefault","closingTime","Math","ceil","state","startDate","getTime","console","log","setState","loading","errorMessage","accounts","eth","getAccounts","plasticBaleSC","address","methods","startingPrice","send","from","open","err","message","hasError","hasNoError","Date","handleChange","bind","getInitialProps","query","date","render","onStartAuction","basic","content","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,EAAuCC,SAAvC,EAAkDC,IAAlD,EAAwDC,IAAxD,EAA8DC,SAA9D,QAA+E,mBAA/E;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,mBAAP,MAAgC,4BAAhC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,YAAN,SAA2Bd,SAA3B,CAAqC;AACjCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,4CA+BF,MAAOC,KAAP,IAAiB;AAC9BA,MAAAA,KAAK,CAACC,cAAN,GAD8B,CAG9B;AACA;;AACA,UAAIC,WAAW,GAAGC,IAAI,CAACC,IAAL,CAAW,KAAKC,KAAL,CAAWC,SAAZ,CAAuBC,OAAvB,KAAmC,IAA7C,CAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AAEA,WAAKQ,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,YAAY,EAAE;AAA/B,OAAd;;AAGA,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMpB,IAAI,CAACqB,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMC,aAAa,GAAGrB,mBAAmB,CAAC,KAAKI,KAAL,CAAWkB,OAAZ,CAAzC;AACA,cAAMD,aAAa,CAACE,OAAd,CAAsBrB,YAAtB,CAAmCK,WAAnC,EAAgD,KAAKG,KAAL,CAAWc,aAA3D,EACDC,IADC,CACI;AAAEC,UAAAA,IAAI,EAAER,QAAQ,CAAC,CAAD;AAAhB,SADJ,CAAN;AAEA,aAAKH,QAAL,CAAc;AAAEY,UAAAA,IAAI,EAAE;AAAR,SAAd;AACH,OAND,CAME,OAAOC,GAAP,EAAY;AACV,aAAKb,QAAL,CAAc;AAAEE,UAAAA,YAAY,EAAEW,GAAG,CAACC;AAApB,SAAd;AACA,aAAKd,QAAL,CAAc;AAAEe,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACH,OApB6B,CAsB9B;;;AACA,UAAI,CAAC,KAAKpB,KAAL,CAAWO,YAAhB,EACI,KAAKF,QAAL,CAAc;AAAEgB,QAAAA,UAAU,EAAE;AAAd,OAAd;AAEJ,WAAKhB,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AAEH,KA3DkB;;AAEf,SAAKN,KAAL,GAAa;AACTc,MAAAA,aAAa,EAAE,EADN;AAETP,MAAAA,YAAY,EAAE,EAFL;AAGTc,MAAAA,UAAU,EAAE,KAHH;AAITpB,MAAAA,SAAS,EAAE,IAAIqB,IAAJ,EAJF;AAKThB,MAAAA,OAAO,EAAE;AALA,KAAb;AASA,SAAKiB,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAED,eAAaC,eAAb,CAA6B/B,KAA7B,EAAoC;AAEhC;AACA,UAAM;AAAEkB,MAAAA;AAAF,QAAclB,KAAK,CAACgC,KAA1B;AAEA,WAAO;AAAEd,MAAAA;AAAF,KAAP;AACH;;AAEDW,EAAAA,YAAY,CAACI,IAAD,EAAO;AACf,SAAKtB,QAAL,CAAc;AACVJ,MAAAA,SAAS,EAAE0B;AADD,KAAd;AAGAxB,IAAAA,OAAO,CAACC,GAAR,CAAYuB,IAAZ;AACH;;AAmCF;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASIC,EAAAA,MAAM,GAAG;AAEL,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,GAAG,EAAC,YAAV;AACI,MAAA,IAAI,EAAC,gEADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOQ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFJ,EAII,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD,CAAM,GAAN;AAAU,MAAA,QAAQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,EAApB;AAAwB,MAAA,SAAS,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,cAArB;AAAqC,MAAA,KAAK,EAAE,CAAC,CAAC,KAAK7B,KAAL,CAAWO,YAAzD;AAAuE,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWqB,UAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEI,MAAC,UAAD;AACI,MAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWC,SADzB;AAEI,MAAA,QAAQ,EAAE,KAAKsB,YAFnB;AAGI,MAAA,cAAc,MAHlB;AAII,MAAA,UAAU,EAAC,OAJf;AAKI,MAAA,aAAa,EAAE,EALnB;AAMI,MAAA,WAAW,EAAC,MANhB;AAOI,MAAA,UAAU,EAAC,oBAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAeI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,MAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWc,aAAzB;AACI,MAAA,KAAK,EAAE;AAAEgB,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OADX;AAEI,MAAA,aAAa,EAAC,OAFlB;AAGI,MAAA,QAAQ,EAAEpC,KAAK,IAAI,KAAKU,QAAL,CAAc;AAAES,QAAAA,aAAa,EAAEnB,KAAK,CAACqC,MAAN,CAAaC;AAA9B,OAAd,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAfJ,EAuBI,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,QAAtB;AAA+B,MAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWO,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBJ,EA0BI,MAAC,OAAD;AAAS,MAAA,OAAO,MAAhB;AAAiB,MAAA,MAAM,EAAC,UAAxB;AAAmC,MAAA,OAAO,EAAC,kBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BJ,EA6BI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWM,OAA5B;AAAqC,MAAA,IAAI,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA7BJ,CADJ,CADJ,CADJ,CADJ,CAJJ,CAPR,CADJ;AA2DH;;AApJgC;;AAwJrC,eAAed,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Statistic, Icon, Grid, Container } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport registerContract from '../../ethereum/register';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport Layout from '../../components/Layout';\n\nclass startAuction extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            startingPrice: '',\n            errorMessage: '',\n            hasNoError: false,\n            startDate: new Date(),\n            loading: false\n\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    static async getInitialProps(props) {\n\n        //fetches address of the bottle from the URL\n        const { address } = props.query;\n\n        return { address };\n    }\n\n    handleChange(date) {\n        this.setState({\n            startDate: date\n        });\n        console.log(date);\n    }\n\n\n\n    onStartAuction = async (event) => {\n        event.preventDefault();\n\n        //1. Extract time from date\n        //2. Conver to Milliseconds\n        let closingTime = Math.ceil((this.state.startDate).getTime() / 1000);\n        console.log(closingTime);\n\n        this.setState({ loading: true, errorMessage: '' });\n\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const plasticBaleSC = plasticBaleContract(this.props.address);\n            await plasticBaleSC.methods.startAuction(closingTime, this.state.startingPrice)\n                .send({ from: accounts[0] });\n            this.setState({ open: true });\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n            this.setState({ hasError: false });\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage)\n            this.setState({ hasNoError: true });\n\n        this.setState({ loading: false });\n\n    };\n\n\n   /* onEndAuction = async (event) => {\n\n        event.preventDefault();\n\n        this.setState({ loading: true });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const plasticBaleSC = plasticBaleContract(this.props.address);\n            await plasticBaleSC.methods.endAuction().send({ from: accounts[0], gas: 250983 });\n            this.setState({ notOver: false });\n\n        } catch (err) {\n            // REVERT REASON IS ALMOST SHOWN HERE\n            console.log(err);\n            this.setState({ errorMessage: err });\n            this.setState({ hasError: false });\n        }\n\n        this.setState({ loading: false });\n    }; */ \n\n\n\n    render() {\n\n        return (\n            <Layout>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                \n\n                    <div className='setAuction'>\n\n                        <h2>Set Bale's Auction Parameters: </h2>\n\n                        <Container>\n                            <Grid>\n                                <Grid.Row centered>\n                                    <Grid.Column width={12} textAlign=\"center\">\n                                        <Form onSubmit={this.onStartAuction} error={!!this.state.errorMessage} success={this.state.hasNoError}>\n                                            <Form.Field>\n                                                <label >Auction Closing Date and Time</label>\n                                                <DatePicker\n                                                    selected={this.state.startDate}\n                                                    onChange={this.handleChange}\n                                                    showTimeSelect\n                                                    timeFormat=\"HH:mm\"\n                                                    timeIntervals={20}\n                                                    timeCaption=\"time\"\n                                                    dateFormat=\"MM/dd/yyyy h:mm aa\"\n                                                \n                                                />\n                                            </Form.Field>\n\n                                            <Form.Field>\n                                                <label>Starting Price</label>\n                                                <Input value={this.state.startingPrice}\n                                                    label={{ basic: true, content: 'Ether' }}\n                                                    labelPosition='right'\n                                                    onChange={event => this.setState({ startingPrice: event.target.value })} />\n                                            </Form.Field>\n\n                                            <Message error header=\"Error!\" content={this.state.errorMessage} />\n\n\n                                            <Message success header=\"Success!\" content=\"Auction is Open!\" />\n\n\n                                            <Button loading={this.state.loading} type='submit'>Start Auction</Button>\n                                        </Form>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                        </Container>\n\n                    </div>\n            \n\n\n\n            </Layout>\n        );\n    }\n\n}\n\nexport default startAuction; "]},"metadata":{},"sourceType":"module"}