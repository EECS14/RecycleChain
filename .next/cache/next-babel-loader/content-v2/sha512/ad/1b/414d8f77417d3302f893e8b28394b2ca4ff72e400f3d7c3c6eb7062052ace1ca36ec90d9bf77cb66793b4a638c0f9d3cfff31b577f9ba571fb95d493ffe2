{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/viewbales.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport trackingContract from '../../ethereum/tracking';\n\nclass viewbales extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      const accounts = await web3.eth.getAccounts(); //NOTE: Set the account back to account[0]\n\n      trackingContract.events.plasticBaleCompleted({\n        filter: {\n          sellerAddress: accounts[1]\n        },\n        fromBlock: 0\n      }, function (error, event) {\n        //Debugging \n        console.log(event);\n        var time = new Date(event.returnValues['time'] * 1000);\n        var date = time.toUTCString();\n        this.setState({\n          plasticBaleAddr: event.returnValues['baleAddress'],\n          plasticBale: event.returnValues['plasticBale'],\n          contributorsAddresses: event.returnValues['plasticBaleContributorsAddresses'],\n          productionTime: date\n        });\n      }.bind(this)).on('error', console.error);\n    });\n\n    this.state = {\n      plasticBaleAddr: '',\n      plasticBale: [],\n      contributorsAddresses: [],\n      productionTime: '',\n      cards: []\n    };\n  }\n\n  renderBales() {\n    this.setState(prevState => {\n      let items = {\n        header: this.state.result,\n        description: this.state.status,\n        fluid: true\n      };\n      return {\n        cards: [...prevState.items, bottle]\n      };\n    });\n    const items = this.state.baleAddress.map(baleAddress => {\n      return {\n        header: baleAddress,\n        description: __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 26\n          }\n        }, \"Auction Bale\"),\n        fluid: true\n      };\n    });\n    return __jsx(Card.Group, {\n      items: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Plastic bales produced at your facility\"), this.renderBales());\n  }\n\n}\n\nexport default viewbales;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/viewbales.js"],"names":["React","Component","Card","web3","trackingContract","viewbales","constructor","props","accounts","eth","getAccounts","events","plasticBaleCompleted","filter","sellerAddress","fromBlock","error","event","console","log","time","Date","returnValues","date","toUTCString","setState","plasticBaleAddr","plasticBale","contributorsAddresses","productionTime","bind","on","state","cards","renderBales","prevState","items","header","result","description","status","fluid","bottle","baleAddress","map","item","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport trackingContract from '../../ethereum/tracking';\n\n\nclass viewbales extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            plasticBaleAddr: '',\n            plasticBale: [],\n            contributorsAddresses: [],\n            productionTime: '',\n            cards: []\n\n        };\n    }\n\n    componentDidMount = async () => {\n\n        const accounts = await web3.eth.getAccounts();\n        //NOTE: Set the account back to account[0]\n        trackingContract.events.plasticBaleCompleted({\n            filter: { sellerAddress: accounts[1] }, fromBlock: 0\n        }, function (error, event) {\n            //Debugging \n            console.log(event);\n\n            var time = new Date(event.returnValues['time'] * 1000);\n            var date = time.toUTCString();\n\n            this.setState({\n                plasticBaleAddr: event.returnValues['baleAddress'],\n                plasticBale: event.returnValues['plasticBale'],\n                contributorsAddresses: event.returnValues['plasticBaleContributorsAddresses'],\n                productionTime: date\n            });\n\n        }.bind(this))\n            .on('error', console.error);\n\n    };\n\n\n    renderBales(){\n\n        this.setState((prevState) => {\n            let items = { header: this.state.result, description: this.state.status, fluid: true };\n            return { cards: [...prevState.items, bottle] };\n        });\n\n        const items = this.state.baleAddress.map(baleAddress => { return {\n            header: baleAddress,\n            description: <a>Auction Bale</a>,\n            fluid: true\n        }; }); \n\n        return <Card.Group items={item}/>;\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                <h1>Plastic bales produced at your facility</h1>\n                {this.renderBales()}\n\n            </div>\n        );\n    }\n\n}\n\nexport default viewbales; "]},"metadata":{},"sourceType":"module"}