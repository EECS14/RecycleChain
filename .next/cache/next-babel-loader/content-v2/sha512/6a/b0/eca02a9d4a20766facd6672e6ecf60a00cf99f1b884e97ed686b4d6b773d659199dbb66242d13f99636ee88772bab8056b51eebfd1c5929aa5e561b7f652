{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/recycler.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\nThis is the recycler page where a recycler scans the QR codes and view rewards\nContact used here: an instance of tracking.sol \nTo run the app, use the command npm run dev\n*/\nimport React, { Component, lazy, Suspense } from 'react';\nimport { Card, Table, Button } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nconst QRReader = dynamic(() => import('react-qr-reader'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-qr-reader')],\n    modules: ['react-qr-reader']\n  }\n});\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking'; // import SC instance\n\nclass recyclerPage extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleScan\", data => {\n      if (data) {\n        this.setState({\n          result: data\n        });\n        this.addBottle();\n      }\n    });\n\n    _defineProperty(this, \"handleError\", err => {\n      console.error(err);\n    });\n\n    _defineProperty(this, \"onScan\", async event => {\n      event.preventDefault();\n\n      if (this.state.qr === false) {\n        this.setState({\n          qr: true\n        });\n      } else {\n        this.setState({\n          qr: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"addBottle\", () => {\n      this.setState((prevState, props) => {\n        const bottle = {\n          addr: this.state.result,\n          status: \"\"\n        };\n        return {\n          rows: [...prevState.rows, bottle]\n        };\n      });\n    });\n\n    this.state = {\n      rewards: 0,\n      result: '',\n      qr: false,\n      rows: []\n    };\n  } // QR reader functions \n\n\n  render() {\n    const {\n      qr,\n      rows\n    } = this.state;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"Welcome to Recycler's Page\"), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }), __jsx(Card, {\n      header: \"Rewards\",\n      description: this.state.rewards,\n      meta: \"ETH\",\n      centered: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"Scanner\",\n      style: {\n        'width': '40%',\n        'margin-left': 'auto',\n        'margin-right': 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Dispose a Plastic Bottle\", __jsx(Button, {\n      className: \"QrReader\",\n      style: {\n        'vertical-align': 'middle'\n      },\n      onClick: this.onScan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \" Scan QR Code\"), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \" \", this.state.qr === true ? __jsx(QRReader, {\n      delay: 300,\n      onError: this.handleError,\n      onScan: this.handleScan,\n      style: {\n        width: \"70%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 58\n      }\n    }) : '', \" \"))), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"BottleTable\",\n      style: {\n        'width': '40%',\n        'margin-left': 'auto',\n        'margin-right': 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, __jsx(Table, {\n      unstackable: true,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, \"Plasitc Bottle Address\"), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }, \"Status\"))), __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, this.state.rows.map(bottle => __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, bottle.addr), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, bottle.status)))))));\n  }\n\n} //At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \n\n\nexport default recyclerPage;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/recycler.js"],"names":["React","Component","lazy","Suspense","Card","Table","Button","dynamic","QRReader","ssr","web3","trackingContract","recyclerPage","constructor","props","data","setState","result","addBottle","err","console","error","event","preventDefault","state","qr","prevState","bottle","addr","status","rows","rewards","render","onScan","handleError","handleScan","width","map"],"mappings":"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","sourcesContent":["/*\nThis is the recycler page where a recycler scans the QR codes and view rewards\nContact used here: an instance of tracking.sol \nTo run the app, use the command npm run dev\n*/\n\nimport React, { Component, lazy, Suspense } from 'react';\nimport { Card, Table, Button } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nconst QRReader = dynamic(() => import('react-qr-reader'), { ssr: false });\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking'; // import SC instance\n\nclass recyclerPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rewards: 0,\n            result: '',\n            qr: false,\n            rows: []\n        };\n    }\n\n    // QR reader functions \n    handleScan = data => {\n        if (data) {\n            this.setState({ result: data });\n            this.addBottle(); \n           \n        }\n    }\n\n    handleError = err => {\n        console.error(err)\n    }\n\n    onScan = async (event) => {\n        event.preventDefault();\n        if (this.state.qr === false) {\n            this.setState({ qr: true });\n        }\n        else {\n            this.setState({ qr: false });\n        }\n    };\n\n    addBottle = () => {\n        this.setState((prevState, props) => {\n            const bottle = { addr: this.state.result, status: \"\" };\n            return { rows: [...prevState.rows, bottle] };\n        });\n        \n    };\n\n\n\n\n\n    render() {\n\n        const { qr, rows } = this.state\n\n        return (\n            <div>\n                <h1>Welcome to Recycler's Page</h1>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                <Card header='Rewards' description={this.state.rewards} meta='ETH' centered='true' />\n\n                <br />\n                <br />\n\n                <div className=\"Scanner\" style={{ 'width': '40%', 'margin-left': 'auto', 'margin-right': 'auto' }}>\n                    <h2>Dispose a Plastic Bottle\n                    <Button className=\"QrReader\" style={{ 'vertical-align': 'middle' }} onClick={this.onScan} > Scan QR Code</Button>\n                        <div> {this.state.qr === true ? (<QRReader\n                            delay={300}\n                            onError={this.handleError}\n                            onScan={this.handleScan}\n                            style={{ width: \"70%\" }}\n                        />\n                        )\n                            : ''} </div>\n                    </h2>\n                </div>\n\n                <br />\n\n                <div className='BottleTable' style={{ 'width': '40%', 'margin-left': 'auto', 'margin-right': 'auto' }}>\n                    <Table unstackable size='small'>\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell>Plasitc Bottle Address</Table.HeaderCell>\n                                <Table.HeaderCell>Status</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            {this.state.rows.map(bottle => (\n                                <Table.Row >\n                                <Table.Cell>{bottle.addr}</Table.Cell>\n                                <Table.Cell>{bottle.status}</Table.Cell>\n                                </Table.Row>\n                            ))}\n                        </Table.Body>\n\n                    </Table>\n                </div>\n\n\n            </div>\n\n        );\n    }\n\n}\n\n//At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \nexport default recyclerPage; "]},"metadata":{},"sourceType":"module"}