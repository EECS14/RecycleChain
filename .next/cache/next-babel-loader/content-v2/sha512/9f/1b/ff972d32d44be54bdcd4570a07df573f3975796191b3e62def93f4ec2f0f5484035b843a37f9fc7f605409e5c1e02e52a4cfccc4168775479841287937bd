{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Statistic, Icon } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport Layout from '../../components/Layout';\n\nvar startAuction = /*#__PURE__*/function (_Component) {\n  _inherits(startAuction, _Component);\n\n  var _super = _createSuper(startAuction);\n\n  function startAuction(props) {\n    var _this;\n\n    _classCallCheck(this, startAuction);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts, plasticBaleSC, isOpen;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context.sent;\n              plasticBaleSC = plasticBaleContract(_this.props.address);\n              isOpen = false;\n              plasticBaleSC.getPastEvents(\"allEvents\", {\n                fromBlock: 0,\n                toBlock: 'latest'\n              }, function (error, events) {\n                console.log(events);\n\n                var myfunction = function myfunction(item) {\n                  if (item.event === 'auctionStarted') {\n                    if (_this.props.address === item.returnValues['baleAddress']) {\n                      isOpen = true;\n                    }\n                  }\n                };\n\n                events.forEach(myfunction);\n\n                _this.setState({\n                  open: isOpen\n                });\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onStartAuction\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var closingTime, accounts, plasticBaleSC;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault(); //web3.eth.handleRevert = true;\n                //1. Extract time from date\n                //2. Conver to Milliseconds\n\n                closingTime = Math.ceil(_this.state.startDate.getTime() / 1000);\n                console.log(closingTime);\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context2.prev = 4;\n                _context2.next = 7;\n                return web3.eth.getAccounts();\n\n              case 7:\n                accounts = _context2.sent;\n                //Create new instance of plastic bale SC that has been deployed \n                plasticBaleSC = plasticBaleContract(_this.props.address);\n                _context2.next = 11;\n                return plasticBaleSC.methods.startAuction(closingTime, _this.state.startingPrice).send({\n                  from: accounts[0]\n                });\n\n              case 11:\n                _context2.next = 17;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](4);\n\n                _this.setState({\n                  errorMessage: _context2.t0.message\n                });\n\n                _this.setState({\n                  hasError: false\n                });\n\n              case 17:\n                // if errorMsg is empty, registration is successful\n                if (!_this.state.errorMessage) _this.setState({\n                  hasNoError: true\n                });\n\n                _this.setState({\n                  loading: false\n                });\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[4, 13]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      startingPrice: '',\n      errorMessage: '',\n      hasNoError: false,\n      startDate: new Date(),\n      open: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(startAuction, [{\n    key: \"handleChange\",\n    value: function handleChange(date) {\n      this.setState({\n        startDate: date\n      });\n      console.log(date);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }), open && __jsx(\"div\", {\n        className: \"statistic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, \"Live Auction\"), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, \" Plastic Bale being auctioned: \", this.props.address, \" \"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"AuctionContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, __jsx(Statistic.Group, {\n        widths: \"three\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }, __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }, __jsx(Statistic.Value, {\n        text: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }\n      }, this.state.highestBid, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }\n      }), \"Wei\"), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      }, \"Highest Bid\")), __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      }, __jsx(Statistic.Value, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }\n      }, __jsx(Icon, {\n        name: \"users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 33\n        }\n      }), \" \", this.state.totalBidders), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }\n      }, \"Total Bidders\")), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }), __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }, __jsx(Statistic.Value, {\n        text: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }\n      }, __jsx(Icon, {\n        name: \"user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 33\n        }\n      }), \" \", this.state.highestBidder), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }\n      }, \"Highest Bidder\"))))), __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, \"Set Bale's Auction Parameters: \"), __jsx(Form, {\n        onSubmit: this.onStartAuction,\n        error: !!this.state.errorMessage,\n        success: this.state.hasNoError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      }, __jsx(Form.Field, {\n        width: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }\n      }, \"Auction Closing Date and Time\"), __jsx(DatePicker, {\n        selected: this.state.startDate,\n        onChange: this.handleChange,\n        showTimeSelect: true,\n        timeFormat: \"HH:mm\",\n        timeIntervals: 20,\n        timeCaption: \"time\",\n        dateFormat: \"MM/dd/yyyy h:mm aa\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      })), __jsx(Form.Field, {\n        width: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }\n      }, \"Starting Price\"), __jsx(Input, {\n        value: this.state.startingPrice,\n        label: {\n          basic: true,\n          content: 'Wei'\n        },\n        labelPosition: \"right\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            startingPrice: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Error!\",\n        content: this.state.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }\n      }), __jsx(Message, {\n        success: true,\n        header: \"Success!\",\n        content: \"Auction is Open!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }, \"Start Auction\")));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(props) {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                //fetches address of the bottle from the URL\n                address = props.query.address;\n                return _context3.abrupt(\"return\", {\n                  address: address\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps(_x2) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return startAuction;\n}(Component);\n\nexport default startAuction;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js"],"names":["React","Component","Form","Button","Input","Message","Statistic","Icon","DatePicker","web3","plasticBaleContract","Layout","startAuction","props","eth","getAccounts","accounts","plasticBaleSC","address","isOpen","getPastEvents","fromBlock","toBlock","error","events","console","log","myfunction","item","event","returnValues","forEach","setState","open","preventDefault","closingTime","Math","ceil","state","startDate","getTime","loading","errorMessage","methods","startingPrice","send","from","message","hasError","hasNoError","Date","handleChange","bind","date","highestBid","totalBidders","highestBidder","onStartAuction","basic","content","target","value","query"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Statistic, Icon } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport Layout from '../../components/Layout';\n\nclass startAuction extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            startingPrice: '',\n            errorMessage: '',\n            hasNoError: false,\n            startDate: new Date(),\n            open: false\n\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    static async getInitialProps(props) {\n\n        //fetches address of the bottle from the URL\n        const { address } = props.query;\n\n        return { address };\n    }\n\n    handleChange(date) {\n        this.setState({\n            startDate: date\n        });\n        console.log(date);\n    }\n\n\n    componentDidMount = async () => {\n        //open is T, render statsictc \n        //open is F, render create bale info\n\n        const accounts = await web3.eth.getAccounts();\n        const plasticBaleSC = plasticBaleContract(this.props.address);\n\n        var isOpen = false; \n\n        plasticBaleSC.getPastEvents(\"allEvents\", { fromBlock: 0, toBlock: 'latest' }, (error, events) => {\n            console.log(events);\n\n            const myfunction = (item) => {\n\n                if (item.event === 'auctionStarted') {\n                    if(this.props.address === item.returnValues['baleAddress']){\n                        isOpen = true; \n                    }\n                       \n                } \n\n            };\n\n            events.forEach(myfunction);\n\n            this.setState({\n                open: isOpen,\n            });\n\n\n        });\n\n    };\n\n\n\n    onStartAuction = async (event) => {\n        event.preventDefault();\n        \n        //web3.eth.handleRevert = true;\n        \n        //1. Extract time from date\n        //2. Conver to Milliseconds\n        let closingTime = Math.ceil((this.state.startDate).getTime()/1000);\n        console.log(closingTime);\n        \n        this.setState({loading: true, errorMessage: ''});\n\n    \n        try {\n\n            const accounts = await web3.eth.getAccounts();\n            //Create new instance of plastic bale SC that has been deployed \n            const plasticBaleSC = plasticBaleContract(this.props.address); \n            await plasticBaleSC.methods.startAuction(closingTime, this.state.startingPrice).send({ from: accounts[0] });\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n            this.setState({ hasError: false });\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage)\n            this.setState({ hasNoError: true });\n\n            this.setState({loading: false}); \n\n    };\n\n    \n\n    render() {\n\n        return (\n            <Layout>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                { open && (\n                \n                <div className='statistic'>\n\n                <h1>Live Auction</h1>\n                <h2> Plastic Bale being auctioned: {this.props.address} </h2>\n                <br/>\n\n                <div className='AuctionContainer'>\n\n                    <Statistic.Group widths='three'>\n                        <Statistic>\n                            <Statistic.Value text>\n                                {this.state.highestBid}\n                                <br/>\n                            Wei\n                            </Statistic.Value>\n                            <Statistic.Label>Highest Bid</Statistic.Label>\n                        </Statistic>\n\n                        <Statistic>\n                            <Statistic.Value>\n                                <Icon name='users' /> {this.state.totalBidders}\n                            </Statistic.Value>\n                            <Statistic.Label>Total Bidders</Statistic.Label>\n                        </Statistic>\n\n                        <br/>\n\n                        <Statistic>\n                            <Statistic.Value text>\n                                <Icon name='user' /> {this.state.highestBidder}\n                                {/*this.state.highestBidderAddress*/}\n                            </Statistic.Value>\n                            <Statistic.Label>Highest Bidder</Statistic.Label>\n                        </Statistic>\n                    </Statistic.Group>\n\n                    </div>\n\n                </div>\n\n                )} \n\n        \n\n\n\n                <h1>Set Bale's Auction Parameters: </h1>\n\n                <Form onSubmit={this.onStartAuction} error={!!this.state.errorMessage} success={this.state.hasNoError}>\n                    <Form.Field width={6}>\n                        <label >Auction Closing Date and Time</label>\n                        <DatePicker\n                            selected={ this.state.startDate }\n                            onChange={this.handleChange}\n                            showTimeSelect\n                            timeFormat=\"HH:mm\"\n                            timeIntervals={20}\n                            timeCaption=\"time\"\n                            dateFormat=\"MM/dd/yyyy h:mm aa\"\n                        /> \n                    </Form.Field>\n\n                    <Form.Field width={4}>\n                        <label>Starting Price</label>\n                        <Input value={this.state.startingPrice}\n                        label={{ basic: true, content: 'Wei' }}\n                        labelPosition='right'\n                        onChange={event => this.setState({ startingPrice: event.target.value })}/> \n                    </Form.Field>\n                    \n                    <Message error header=\"Error!\" content={this.state.errorMessage} />\n\n\n                    <Message success header=\"Success!\" content=\"Auction is Open!\" />\n\n\n                    <Button loading={this.state.loading} type='submit'>Start Auction</Button>\n                </Form>\n\n\n\n\n            </Layout>\n        );\n    }\n\n}\n\nexport default startAuction; "]},"metadata":{},"sourceType":"module"}