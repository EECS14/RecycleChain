{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/viewbales.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport trackingContract from '../../ethereum/tracking';\nimport { Link } from '../../routes';\nimport Layout from '../../components/Layout';\n\nclass viewbales extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      //1. Fetch data from event \n      const accounts = await web3.eth.getAccounts(); //NOTE: Set the account back to account[0]\n\n      trackingContract.events.plasticBaleCompleted({\n        filter: {\n          sellerAddress: accounts[0]\n        },\n        fromBlock: 0\n      }, function (error, event) {\n        //Debugging \n        console.log(event); //1. Fetch data from event \n\n        var time = new Date(event.returnValues['time'] * 1000);\n        var date = time.toString();\n        this.setState({\n          plasticBaleAddr: event.returnValues['plasticbale'],\n          productionTime: date,\n          plasticBaleIPFS: event.returnValues['IPFSHash']\n        }); //2. Render bale info to the page \n\n        this.renderBales();\n      }.bind(this)).on('error', console.error);\n    });\n\n    _defineProperty(this, \"handleClick\", address => {});\n\n    this.state = {\n      plasticBaleAddr: '',\n      productionTime: '',\n      plasticBaleIPFS: '',\n      cards: []\n    };\n  }\n\n  renderBales() {\n    this.setState(prevState => {\n      const items = {\n        image: this.state.plasticBaleIPFS,\n        header: this.state.plasticBaleAddr,\n        description: `Production Time: ` + this.state.productionTime,\n        fluid: true,\n        extra: __jsx(Button, {\n          basic: true,\n          color: \"green\",\n          onClick: this.handleClick(this.state.plasticBaleAddr),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }, \"Start Auction\")\n      };\n      return {\n        cards: [...prevState.cards, items]\n      };\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"Seller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"Plastic Bales produced at Your Facility\"), __jsx(Card.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, this.state.cards.map(items => __jsx(Link, {\n      route: `/auctions/viewbales/${items.header}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, __jsx(Card, {\n      image: `https://ipfs.io/ipfs/${items.image}`,\n      header: items.header,\n      description: items.description,\n      fluid: items.fluid,\n      extra: items.extra,\n      style: {\n        'overflow': 'hidden'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nexport default viewbales;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/viewbales.js"],"names":["React","Component","Card","Button","web3","trackingContract","Link","Layout","viewbales","constructor","props","accounts","eth","getAccounts","events","plasticBaleCompleted","filter","sellerAddress","fromBlock","error","event","console","log","time","Date","returnValues","date","toString","setState","plasticBaleAddr","productionTime","plasticBaleIPFS","renderBales","bind","on","address","state","cards","prevState","items","image","header","description","fluid","extra","handleClick","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Button} from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport trackingContract from '../../ethereum/tracking';\nimport { Link } from '../../routes';\nimport Layout from '../../components/Layout';\n\n\nclass viewbales extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            plasticBaleAddr: '',\n            productionTime: '',\n            plasticBaleIPFS: '',\n            cards: []\n\n        };\n    }\n\n    componentDidMount = async () => {\n\n        //1. Fetch data from event \n        const accounts = await web3.eth.getAccounts();\n        //NOTE: Set the account back to account[0]\n        trackingContract.events.plasticBaleCompleted({\n            filter: { sellerAddress: accounts[0] }, fromBlock: 0\n        }, function (error, event) {\n            //Debugging \n            console.log(event); \n            //1. Fetch data from event \n            var time = new Date(event.returnValues['time'] * 1000);\n            var date = time.toString(); \n            this.setState({\n                plasticBaleAddr: event.returnValues['plasticbale'],\n                productionTime: date,\n                plasticBaleIPFS: event.returnValues['IPFSHash'],\n            });\n\n            //2. Render bale info to the page \n            this.renderBales();\n            \n        }.bind(this))\n            .on('error', console.error);\n\n    };\n\n    \n    handleClick = (address) => {\n\n    };\n\n\n\n    renderBales() {\n        this.setState((prevState) => {\n            const items = { image: this.state.plasticBaleIPFS, header: this.state.plasticBaleAddr, description:  `Production Time: ` + this.state.productionTime, fluid: true, extra:  \n            <Button basic color='green' onClick={this.handleClick(this.state.plasticBaleAddr)}>\n            Start Auction\n            </Button> \n          };\n            return { cards: [...prevState.cards, items] };\n        });\n    }\n\n    render() {\n\n        return (\n            <Layout>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                <div className='Seller'>\n\n                    <h3>Plastic Bales produced at Your Facility</h3>\n                    <Card.Group>\n                        {this.state.cards.map(items => (\n                            <Link route={`/auctions/viewbales/${items.header}`}>\n                                <Card \n                                image={`https://ipfs.io/ipfs/${items.image}`}\n                                header={items.header}\n                                description={items.description}\n                                fluid={items.fluid} \n                                extra={items.extra}\n                                \n                                style={{\n                                    'overflow': 'hidden'\n                                }}\n                                />\n\n                            </Link>\n                        ))}\n                    </Card.Group>\n\n                </div>\n            </Layout>\n        );\n    }\n\n}\n\nexport default viewbales; "]},"metadata":{},"sourceType":"module"}