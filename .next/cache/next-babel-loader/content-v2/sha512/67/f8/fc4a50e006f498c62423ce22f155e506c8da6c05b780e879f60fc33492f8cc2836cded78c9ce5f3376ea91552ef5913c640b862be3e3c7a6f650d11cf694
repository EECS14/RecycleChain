{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/recycler.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*\nThis is the recycler page where a recycler scans the QR codes and view rewards\nContact used here: an instance of tracking.sol \nTo run the app, use the command npm run dev\n*/\nimport React, { Component } from 'react';\nimport { Card, Table, Button } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nvar QRReader = dynamic(_c = function _c() {\n  return import('react-qr-reader');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-qr-reader')];\n    },\n    modules: ['react-qr-reader']\n  }\n});\n_c2 = QRReader;\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking'; // import SC instance\n\nvar recyclerPage = /*#__PURE__*/function (_Component) {\n  _inherits(recyclerPage, _Component);\n\n  var _super = _createSuper(recyclerPage);\n\n  function recyclerPage(props) {\n    var _this;\n\n    _classCallCheck(this, recyclerPage);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context.sent;\n              trackingContract.events.updateStatusRecycler({\n                filter: {\n                  recycler: accounts[0]\n                },\n                fromBlock: 0\n              }, function (error, event) {\n                //For debugging purposes \n                console.log(event);\n                console.log(event.returnValues['plasticBottleAddress']); // real code\n\n                this.setState({\n                  result: event.returnValues['plasticBottleAddress'],\n                  status: event.returnValues['status']\n                });\n                this.addRow();\n              }.bind(_assertThisInitialized(_this))).on('error', console.error); // clear state variables to be used later when scanning \n\n              _this.setState({\n                result: '',\n                status: 'pending'\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScan\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (data) {\n                  _this.setState({\n                    result: data\n                  });\n\n                  _this.disposeBottle(); //this.addRow();\n\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleError\", function (err) {\n      console.error(err);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onScan\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault();\n\n                if (_this.state.qr === false) {\n                  _this.setState({\n                    qr: true\n                  });\n                } else {\n                  _this.setState({\n                    qr: false\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"addRow\", function () {\n      _this.setState(function (prevState, props) {\n        var bottle = {\n          addr: _this.state.result,\n          status: _this.state.status\n        };\n        return {\n          rows: [].concat(_toConsumableArray(prevState.rows), [bottle])\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"disposeBottle\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context4.sent;\n              _context4.next = 5;\n              return trackingContract.methods.updateStatusDisposed(_this.state.result).send({\n                from: accounts[0]\n              });\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    })));\n\n    _this.state = {\n      rewards: 0,\n      result: '',\n      status: '',\n      qr: false,\n      rows: [],\n      bottlesLogged: []\n    };\n    return _this;\n  } // retrieve all bottled logged by user from ropsten network \n\n\n  _createClass(recyclerPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          qr = _this$state.qr,\n          rows = _this$state.rows;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, \"Welcome to Recycler's Page\"), __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }), __jsx(Card, {\n        header: \"Rewards\",\n        description: this.state.rewards,\n        meta: \"ETH\",\n        centered: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"Scanner\",\n        style: {\n          'width': '40%',\n          'margin-left': 'auto',\n          'margin-right': 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, \"Dispose a Plastic Bottle\", __jsx(Button, {\n        className: \"QrReader\",\n        style: {\n          'vertical-align': 'middle'\n        },\n        onClick: this.onScan,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, \" Scan QR Code\"), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, \" \", this.state.qr === true ? __jsx(QRReader, {\n        delay: 300,\n        onError: this.handleError,\n        onScan: this.handleScan,\n        style: {\n          width: \"70%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 58\n        }\n      }) : '', \" \"))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"BottleTable\",\n        style: {\n          'width': '40%',\n          'margin-left': 'auto',\n          'margin-right': 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, __jsx(Table, {\n        unstackable: true,\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, __jsx(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }\n      }, __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 33\n        }\n      }, \"Plasitc Bottle Address\"), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 33\n        }\n      }, \"Status\"))), __jsx(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      }, this.state.rows.map(function (bottle) {\n        return __jsx(Table.Row, {\n          id: _this2.state.rows.length,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }\n        }, __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 37\n          }\n        }, bottle.addr), __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 37\n          }\n        }, bottle.status));\n      })))));\n    }\n  }]);\n\n  return recyclerPage;\n}(Component); //At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \n\n\nexport default recyclerPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QRReader$dynamic\");\n$RefreshReg$(_c2, \"QRReader\");","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/recycler.js"],"names":["React","Component","Card","Table","Button","dynamic","QRReader","ssr","web3","trackingContract","recyclerPage","props","eth","getAccounts","accounts","events","updateStatusRecycler","filter","recycler","fromBlock","error","event","console","log","returnValues","setState","result","status","addRow","bind","on","data","disposeBottle","err","preventDefault","state","qr","prevState","bottle","addr","rows","methods","updateStatusDisposed","send","from","rewards","bottlesLogged","onScan","handleError","handleScan","width","map","length"],"mappings":"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","sourcesContent":["/*\nThis is the recycler page where a recycler scans the QR codes and view rewards\nContact used here: an instance of tracking.sol \nTo run the app, use the command npm run dev\n*/\n\nimport React, { Component } from 'react';\nimport { Card, Table, Button } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nconst QRReader = dynamic(() => import('react-qr-reader'), { ssr: false });\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking'; // import SC instance\n\nclass recyclerPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rewards: 0,\n            result: '',\n            status: '',\n            qr: false,\n            rows: [],\n            bottlesLogged: []\n        };\n    }\n\n    // retrieve all bottled logged by user from ropsten network \n    componentDidMount = async () => {\n        const accounts = await web3.eth.getAccounts();\n\n        trackingContract.events.updateStatusRecycler({\n            filter: { recycler: accounts[0] }, fromBlock: 0\n        }, function (error, event) {\n            //For debugging purposes \n            console.log(event);\n            console.log(event.returnValues['plasticBottleAddress']);\n            // real code\n            this.setState({ result: event.returnValues['plasticBottleAddress'], status: event.returnValues['status']  });\n\n            \n            this.addRow();\n        }.bind(this))\n            .on('error', console.error);\n\n            // clear state variables to be used later when scanning \n        this.setState({ result: '', status: 'pending' });\n\n    };\n\n    // QR reader functions \n    handleScan =  async (data) => {\n        if (data) {\n            this.setState({ result: data });\n             this.disposeBottle();\n            //this.addRow();\n\n        }\n    }\n\n    handleError = err => {\n        console.error(err)\n    }\n\n    onScan = async (event) => {\n        event.preventDefault();\n        if (this.state.qr === false) {\n            this.setState({ qr: true });\n        }\n        else {\n            this.setState({ qr: false });\n        }\n    };\n\n    // Adds a new row dynamically to the table \n    addRow = () => {\n        this.setState((prevState, props) => {\n            const bottle = { addr: this.state.result, status: this.state.status };\n            return { rows: [...prevState.rows, bottle] };\n        });\n\n    };\n\n    // Log bottle as disposed \n    disposeBottle = async () => {\n\n        const accounts = await web3.eth.getAccounts();\n\n        //Add try and catch block here \n        await trackingContract.methods\n            .updateStatusDisposed(this.state.result)\n            .send({ from: accounts[0] });\n             \n    };\n\n\n\n    render() {\n       \n        const { qr, rows } = this.state\n\n        return (\n            <div>\n                <h1>Welcome to Recycler's Page</h1>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                <Card header='Rewards' description={this.state.rewards} meta='ETH' centered='true' />\n\n                <br />\n                <br />\n\n                <div className=\"Scanner\" style={{ 'width': '40%', 'margin-left': 'auto', 'margin-right': 'auto' }}>\n                    <h2>Dispose a Plastic Bottle\n                    <Button className=\"QrReader\" style={{ 'vertical-align': 'middle' }} onClick={this.onScan} > Scan QR Code</Button>\n                        <div> {this.state.qr === true ? (<QRReader\n                            delay={300}\n                            onError={this.handleError}\n                            onScan={this.handleScan}\n                            style={{ width: \"70%\" }}\n                        />\n                        )\n                            : ''} </div>\n                    </h2>\n                </div>\n\n                <br />\n\n                <div className='BottleTable' style={{ 'width': '40%', 'margin-left': 'auto', 'margin-right': 'auto' }}>\n                    <Table unstackable size='small'>\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell>Plasitc Bottle Address</Table.HeaderCell>\n                                <Table.HeaderCell>Status</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            {this.state.rows.map(bottle => (\n                                <Table.Row id={this.state.rows.length} >\n                                    <Table.Cell>{bottle.addr}</Table.Cell>\n                                    <Table.Cell>{bottle.status}</Table.Cell>\n                                </Table.Row>\n                            ))}\n                        </Table.Body>\n\n                    </Table>\n                </div>\n\n\n            </div>\n\n        );\n    }\n\n}\n\n//At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \nexport default recyclerPage; "]},"metadata":{},"sourceType":"module"}