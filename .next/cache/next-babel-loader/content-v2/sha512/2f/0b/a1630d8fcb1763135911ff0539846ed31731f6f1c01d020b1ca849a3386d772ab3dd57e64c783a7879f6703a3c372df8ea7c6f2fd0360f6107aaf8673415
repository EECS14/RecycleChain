{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/recycler.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\nThis is the recycler page where a recycler scans the QR codes and view rewards\nContact used here: an instance of tracking.sol \nTo run the app, use the command npm run dev\n*/\nimport React, { Component } from 'react';\nimport { Card, Table, Button, Grid, Container, Menu } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nconst QRReader = dynamic(() => import('react-qr-reader'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-qr-reader')],\n    modules: ['react-qr-reader']\n  }\n});\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking';\nimport plasticBaleContract from '../ethereum/plasticBale';\nimport { Link } from '../routes';\nimport Layout from '../components/Layout';\n\nclass recyclerPage extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      const accounts = await web3.eth.getAccounts();\n      trackingContract.events.updateStatusRecycler({\n        filter: {\n          recycler: accounts[0]\n        },\n        fromBlock: 0\n      }, function (error, event) {\n        this.setState({\n          result: event.returnValues['plasticBottleAddress'],\n          status: event.returnValues['status']\n        });\n        this.setState(prevState => ({\n          bottlesLogged: [...prevState.bottlesLogged, this.state.result]\n        }));\n        this.addRow();\n      }.bind(this)).on('error', console.error); // Update status as sorted \n\n      trackingContract.events.updateStatusMachine({\n        filter: {\n          plasticBottleAddress: this.state.bottlesLogged\n        },\n        fromBlock: 0\n      }, function (error, event) {\n        let index = this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress']);\n        this.updateRow(index, event.returnValues['status']);\n      }.bind(this)).on('error', console.error); // Get all deployed plastic bales SC addresses \n\n      trackingContract.events.plasticBaleCompleted({\n        fromBlock: 0\n      }, function (error, event) {\n        console.log(event);\n        const plasticbaleAddr = event.returnValues['plasticbale'];\n        console.log(plasticbaleAddr);\n        const plasticBaleSC = plasticBaleContract(plasticbaleAddr); // Fetch recycler rewards \n\n        plasticBaleSC.events.recyclerRewarded({\n          filter: {\n            recycler: accounts[0]\n          },\n          fromBlock: 0\n        }, function (error, event) {\n          console.log(event);\n          this.setState({\n            rewards: this.state.rewards + event.returnValues['etherReward']\n          });\n        }.bind(this)).on('error', console.error); //Update status purchases\n\n        plasticBaleSC.events.updateStatusBuyer({\n          filter: {\n            plasticBottleAddress: this.state.bottlesLogged\n          },\n          fromBlock: 0\n        }, function (error, event) {\n          let index = this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress']);\n          this.updateRow(index, event.returnValues['status']);\n        }.bind(this)).on('error', console.error);\n      }.bind(this)).on('error', console.error);\n    });\n\n    _defineProperty(this, \"handleScan\", async data => {\n      if (data) {\n        this.setState({\n          result: data\n        });\n        this.disposeBottle();\n      }\n    });\n\n    _defineProperty(this, \"handleError\", err => {\n      console.error(err);\n    });\n\n    _defineProperty(this, \"onScan\", async event => {\n      event.preventDefault();\n\n      if (this.state.qr === false) {\n        this.setState({\n          qr: true\n        });\n      } else {\n        this.setState({\n          qr: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"addRow\", () => {\n      this.setState(prevState => {\n        let bottle = {\n          addr: this.state.result,\n          status: this.state.status\n        };\n        return {\n          rows: [...prevState.rows, bottle]\n        };\n      });\n    });\n\n    _defineProperty(this, \"disposeBottle\", async () => {\n      const accounts = await web3.eth.getAccounts(); //Add try and catch block here \n\n      await trackingContract.methods.updateStatusDisposed(this.state.result).send({\n        from: accounts[0]\n      });\n    });\n\n    _defineProperty(this, \"handleItemClick\", (e, {\n      name\n    }) => this.setState({\n      activeItem: name\n    }));\n\n    this.state = {\n      rewards: 0,\n      result: '',\n      status: '',\n      qr: false,\n      rows: [],\n      bottlesLogged: [],\n      activeItem: 'scan'\n    };\n  } // retrieve all bottled logged by user from ropsten network \n\n\n  updateRow(index, status) {\n    // 1. Make a shallow copy of rows\n    let rows = [...this.state.rows]; // 2. Make a shallow copy of the row you want to mutate\n\n    let row = _objectSpread({}, rows[index]); // 3. Replace the property you're intested in\n\n\n    row.status = status; // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n\n    rows[index] = row; // 5. Set the state to our new copy\n\n    this.setState({\n      rows\n    });\n  }\n\n  render() {\n    const {\n      qr,\n      rows,\n      activeItem\n    } = this.state;\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"Recycler\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, \"Recycler Page\"), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }), __jsx(Menu, {\n      widths: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, __jsx(Menu.Item, {\n      name: \"scan\",\n      active: activeItem === 'about',\n      onClick: this.handleItemClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, \"Scan\"), __jsx(Menu.Item, {\n      name: \"history\",\n      active: activeItem === 'features',\n      onClick: this.handleItemClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, \"History\"), __jsx(Menu.Item, {\n      name: \"rewards\",\n      active: activeItem === 'stats',\n      onClick: this.handleItemClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, \"Rewards\")), activeItem === 'scan' && __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 29\n      }\n    }, __jsx(Grid.Row, {\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 33\n      }\n    }, __jsx(Grid.Column, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      className: \"Scanner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 41\n      }\n    }, __jsx(\"h2\", {\n      style: {\n        'text-align': 'center',\n        'padding-top': '45px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 45\n      }\n    }, \"Aim at QR code to dispose water bottle \"), __jsx(Button, {\n      className: \"QrReader\",\n      onClick: this.onScan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 45\n      }\n    }, \" Scan\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 45\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 45\n      }\n    }), __jsx(\"div\", {\n      style: {\n        'margin': 'auto',\n        'display': 'block',\n        'padding-left': 'px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 45\n      }\n    }, \" \", this.state.qr === true ? __jsx(QRReader, {\n      delay: 300,\n      onError: this.handleError,\n      onScan: this.handleScan,\n      style: {\n        width: \"25%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 49\n      }\n    }) : '', \" \")))))), activeItem === 'history' && __jsx(\"div\", {\n      style: {\n        'padding-top': '45px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }\n    }, __jsx(\"h3\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }\n    }, \"Bottle history\"), __jsx(\"div\", {\n      className: \"BottleTable\",\n      style: {\n        'width': '90%',\n        'margin-left': 'auto',\n        'margin-right': 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 29\n      }\n    }, __jsx(Table, {\n      unstackable: true,\n      size: \"small\",\n      fixed: true,\n      singleLine: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 33\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 37\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 41\n      }\n    }, __jsx(Table.HeaderCell, {\n      width: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 45\n      }\n    }, \"Plasitc Bottle Address\"), __jsx(Table.HeaderCell, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 45\n      }\n    }, \"Status\"))), __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 37\n      }\n    }, this.state.rows.map(bottle => __jsx(Link, {\n      route: `/track/${bottle.addr}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 45\n      }\n    }, __jsx(Table.Row, {\n      id: this.state.rows.length,\n      key: this.state.rows.lengt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 49\n      }\n    }, __jsx(Table.Cell, {\n      selectable: true,\n      style: {\n        'overflow': 'hidden'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 53\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 57\n      }\n    }, bottle.addr)), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 53\n      }\n    }, bottle.status)))))))), activeItem === 'rewards' && __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }, __jsx(\"h3\", {\n      style: {\n        textAlign: 'center',\n        'padding-top': '45px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 29\n      }\n    }, \"Total rewards\"), __jsx(Card, {\n      header: \"Rewards\",\n      description: this.state.rewards - 0,\n      meta: \"ETH\",\n      centered: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 29\n      }\n    }))));\n  }\n\n} //At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \n\n\nexport default recyclerPage;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/recycler.js"],"names":["React","Component","Card","Table","Button","Grid","Container","Menu","dynamic","QRReader","ssr","web3","trackingContract","plasticBaleContract","Link","Layout","recyclerPage","constructor","props","accounts","eth","getAccounts","events","updateStatusRecycler","filter","recycler","fromBlock","error","event","setState","result","returnValues","status","prevState","bottlesLogged","state","addRow","bind","on","console","updateStatusMachine","plasticBottleAddress","index","indexOf","updateRow","plasticBaleCompleted","log","plasticbaleAddr","plasticBaleSC","recyclerRewarded","rewards","updateStatusBuyer","data","disposeBottle","err","preventDefault","qr","bottle","addr","rows","methods","updateStatusDisposed","send","from","e","name","activeItem","row","render","handleItemClick","onScan","handleError","handleScan","width","textAlign","map","length","lengt"],"mappings":"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","sourcesContent":["/*\nThis is the recycler page where a recycler scans the QR codes and view rewards\nContact used here: an instance of tracking.sol \nTo run the app, use the command npm run dev\n*/\n\nimport React, { Component } from 'react';\nimport { Card, Table, Button, Grid, Container, Menu } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nconst QRReader = dynamic(() => import('react-qr-reader'), { ssr: false });\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking';\nimport plasticBaleContract from '../ethereum/plasticBale';\nimport { Link } from '../routes';\nimport Layout from '../components/Layout';\n\nclass recyclerPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rewards: 0,\n            result: '',\n            status: '',\n            qr: false,\n            rows: [],\n            bottlesLogged: [],\n            activeItem: 'scan'\n        };\n    }\n\n    // retrieve all bottled logged by user from ropsten network \n    componentDidMount = async () => {\n        const accounts = await web3.eth.getAccounts();\n\n\n        trackingContract.events.updateStatusRecycler({\n            filter: { recycler: accounts[0] }, fromBlock: 0\n        }, function (error, event) {\n\n            this.setState({ result: event.returnValues['plasticBottleAddress'], status: event.returnValues['status'] });\n            this.setState(prevState => ({ bottlesLogged: [...prevState.bottlesLogged, this.state.result] }));\n            this.addRow();\n        }.bind(this))\n            .on('error', console.error);\n\n        // Update status as sorted \n        trackingContract.events.updateStatusMachine({\n            filter: { plasticBottleAddress: this.state.bottlesLogged }, fromBlock: 0\n        }, function (error, event) {\n            let index = this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress']);\n            this.updateRow(index, event.returnValues['status']);\n        }.bind(this))\n            .on('error', console.error);\n\n        // Get all deployed plastic bales SC addresses \n        trackingContract.events.plasticBaleCompleted({\n            fromBlock: 0\n        }, function (error, event) {\n            console.log(event);\n            const plasticbaleAddr = event.returnValues['plasticbale'];\n            console.log(plasticbaleAddr);\n            const plasticBaleSC = plasticBaleContract(plasticbaleAddr);\n\n            // Fetch recycler rewards \n            plasticBaleSC.events.recyclerRewarded({\n                filter: { recycler: accounts[0] },\n                fromBlock: 0\n            }, function (error, event) {\n                console.log(event);\n\n                this.setState({\n                    rewards: this.state.rewards + event.returnValues['etherReward'],\n                });\n\n            }.bind(this))\n                .on('error', console.error);\n\n            //Update status purchases\n            plasticBaleSC.events.updateStatusBuyer({\n                filter: { plasticBottleAddress: this.state.bottlesLogged },\n                fromBlock: 0\n            }, function (error, event) {\n                let index = this.state.bottlesLogged.indexOf(event.returnValues['plasticBottleAddress']);\n                this.updateRow(index, event.returnValues['status']);\n\n            }.bind(this))\n                .on('error', console.error);\n\n\n        }.bind(this))\n            .on('error', console.error);\n\n\n    };\n\n\n    // QR reader functions \n    handleScan = async (data) => {\n        if (data) {\n            this.setState({ result: data });\n            this.disposeBottle();\n\n        }\n    }\n\n    handleError = err => {\n        console.error(err)\n    }\n\n    onScan = async (event) => {\n        event.preventDefault();\n        if (this.state.qr === false) {\n            this.setState({ qr: true });\n        }\n        else {\n            this.setState({ qr: false });\n        }\n    };\n\n    // Adds a new row dynamically to the table \n    addRow = () => {\n        this.setState((prevState) => {\n            let bottle = { addr: this.state.result, status: this.state.status };\n            return { rows: [...prevState.rows, bottle] };\n        });\n\n    };\n\n    // Log bottle as disposed \n    disposeBottle = async () => {\n        const accounts = await web3.eth.getAccounts();\n\n        //Add try and catch block here \n        await trackingContract.methods\n            .updateStatusDisposed(this.state.result)\n            .send({ from: accounts[0] });\n\n    };\n\n    updateRow(index, status) {\n        // 1. Make a shallow copy of rows\n        let rows = [...this.state.rows];\n        // 2. Make a shallow copy of the row you want to mutate\n        let row = { ...rows[index] };\n        // 3. Replace the property you're intested in\n        row.status = status;\n        // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n        rows[index] = row;\n        // 5. Set the state to our new copy\n        this.setState({ rows });\n    }\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n\n    render() {\n\n        const { qr, rows, activeItem } = this.state\n\n        return (\n            <Layout>\n                <div className='Recycler'>\n                    <h2>Recycler Page</h2>\n                    <link rel=\"stylesheet\"\n                        href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                    />\n\n                    <Menu widths={3}>\n                        <Menu.Item\n                            name='scan'\n                            active={activeItem === 'about'}\n                            onClick={this.handleItemClick}\n                        >\n                            Scan\n                </Menu.Item>\n\n                        <Menu.Item\n                            name='history'\n                            active={activeItem === 'features'}\n                            onClick={this.handleItemClick}\n                        >\n                            History\n                </Menu.Item>\n\n                        <Menu.Item\n                            name='rewards'\n                            active={activeItem === 'stats'}\n                            onClick={this.handleItemClick}\n                        >\n                            Rewards\n                </Menu.Item>\n                    </Menu>\n\n\n\n                    {(activeItem === 'scan') && (\n                        <div>\n                            <Grid>\n                                <Grid.Row centered>\n                                    <Grid.Column textAlign=\"center\">\n                                        <div className=\"Scanner\">\n                                            <h2 style={{ 'text-align': 'center',  'padding-top': '45px'}} >Aim at QR code to dispose water bottle </h2>\n                                            <Button className=\"QrReader\" onClick={this.onScan} > Scan</Button>\n                                            <br />\n                                            <br />\n                                            <div style={{  'margin': 'auto', 'display': 'block',  'padding-left': 'px' }} > {this.state.qr === true ? (\n                                                <QRReader\n                                                    delay={300}\n                                                    onError={this.handleError}\n                                                    onScan={this.handleScan}\n                                                    style={{ width: \"25%\" }}\n                                                />\n                                            )\n                                                : ''} </div>\n\n                                        </div>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n\n                        </div>\n                    )}\n\n\n                    {(activeItem === 'history') && (\n                        <div style={{'padding-top': '45px'}}>\n                            <h3 style={{ textAlign: 'center' }}>Bottle history</h3>\n\n                            <div className='BottleTable' style={{ 'width': '90%', 'margin-left': 'auto', 'margin-right': 'auto' }}>\n                                <Table unstackable size='small' fixed singleLine>\n                                    <Table.Header>\n                                        <Table.Row>\n                                            <Table.HeaderCell width={16}>Plasitc Bottle Address</Table.HeaderCell>\n                                            <Table.HeaderCell width={6}>Status</Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Header>\n                                    <Table.Body>\n                                        {this.state.rows.map(bottle => (\n                                            <Link route={`/track/${bottle.addr}`}>\n                                                <Table.Row id={this.state.rows.length} key={this.state.rows.lengt}>\n                                                    <Table.Cell selectable style={{ 'overflow': 'hidden' }}>\n                                                        <a>\n                                                            {bottle.addr}\n                                                        </a>\n                                                    </Table.Cell>\n                                                    <Table.Cell>{bottle.status}</Table.Cell>\n                                                </Table.Row>\n                                            </Link>\n                                        ))}\n                                    </Table.Body>\n\n                                </Table>\n                            </div>\n\n                        </div>\n                    )}\n\n\n\n                    {(activeItem === 'rewards') && (\n                        <div>\n                            <h3 style={{ textAlign: 'center', 'padding-top': '45px' }}>Total rewards</h3>\n\n                            <Card header='Rewards' description={this.state.rewards - 0 } meta='ETH' centered='true' />\n\n                        </div>\n                    )}\n\n\n                </div>\n            </Layout>\n\n        );\n    }\n\n}\n\n//At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \nexport default recyclerPage;"]},"metadata":{},"sourceType":"module"}