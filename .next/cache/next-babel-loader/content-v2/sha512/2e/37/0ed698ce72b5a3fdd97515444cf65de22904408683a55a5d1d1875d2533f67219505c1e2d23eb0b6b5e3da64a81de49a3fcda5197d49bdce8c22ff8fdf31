{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Label } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\n\nclass startAuction extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onStartAuction\", async event => {\n      event.preventDefault();\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      }); //1. Extract time from date\n      //2. Conver to Milliseconds\n\n      let time = this.state.startDate.getTime() / 1000;\n      console.log(time);\n      /*\n      try {\n           const plasticBaleSC = plasticBaleContract(this.props.address); \n          await plasticBaleSC.methods.startAuction(this.state.manufacturerAddr, this.state.manufacturerLocation, this.state.manufacturerName)\n              .send({ from: accounts[0] });\n      } catch (err) {\n          this.setState({ errorMessage: err.message });\n          this.setState({ hasError: false });\n      }\n       // if errorMsg is empty, registration is successful\n      if (!this.state.errorMessage)\n          this.setState({ hasNoError: true });\n           this.setState({loading: false});   */\n    });\n\n    this.state = {\n      startingPrice: '',\n      errorMessage: '',\n      hasNoError: false,\n      startDate: new Date()\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  static async getInitialProps(props) {\n    //fetches address of the bottle from the URL\n    const {\n      address\n    } = props.query;\n    return {\n      address\n    };\n  }\n\n  handleChange(date) {\n    this.setState({\n      startDate: date\n    });\n    console.log(date);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Set Bale's Auction Parameters: \"), __jsx(Form, {\n      onSubmit: this.onStartAuction,\n      error: !!this.state.errorMessage,\n      success: this.state.hasNoError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Field, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Auction Closing Date and Time\"), __jsx(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.handleChange,\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 20,\n      timeCaption: \"time\",\n      dateFormat: \"MM/dd/yyyy h:mm aa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    })), __jsx(Form.Field, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, \"Starting Price\"), __jsx(Input, {\n      value: this.state.startingPrice,\n      label: {\n        basic: true,\n        content: 'Wei'\n      },\n      labelPosition: \"right\",\n      onChange: event => this.setState({\n        startingPrice: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    })), __jsx(Message, {\n      error: true,\n      header: \"Error!\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }), __jsx(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Auction is Opended Successfully!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, \"Start Auction\")));\n  }\n\n}\n\nexport default startAuction;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js"],"names":["React","Component","Form","Button","Input","Message","Label","DatePicker","web3","plasticBaleContract","startAuction","constructor","props","event","preventDefault","accounts","eth","getAccounts","setState","loading","errorMessage","time","state","startDate","getTime","console","log","startingPrice","hasNoError","Date","handleChange","bind","getInitialProps","address","query","date","render","onStartAuction","basic","content","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Label } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\n\nclass startAuction extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            startingPrice: '',\n            errorMessage: '',\n            hasNoError: false,\n            startDate: new Date()\n\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    static async getInitialProps(props) {\n\n        //fetches address of the bottle from the URL\n        const { address } = props.query;\n\n        return { address };\n    }\n\n    handleChange(date) {\n        this.setState({\n            startDate: date\n        });\n        console.log(date);\n    }\n\n    onStartAuction = async (event) => {\n        event.preventDefault();\n        const accounts = await web3.eth.getAccounts();\n        this.setState({loading: true, errorMessage: ''});\n\n        //1. Extract time from date\n        //2. Conver to Milliseconds\n        let time = (this.state.startDate).getTime()/1000;\n        console.log(time);\n        \n \n        /*\n        try {\n\n            const plasticBaleSC = plasticBaleContract(this.props.address); \n            await plasticBaleSC.methods.startAuction(this.state.manufacturerAddr, this.state.manufacturerLocation, this.state.manufacturerName)\n                .send({ from: accounts[0] });\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n            this.setState({ hasError: false });\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage)\n            this.setState({ hasNoError: true });\n\n            this.setState({loading: false});   */\n\n    };\n\n    \n\n    render() {\n\n        return (\n            <div>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                <h1>Set Bale's Auction Parameters: </h1>\n\n                <Form onSubmit={this.onStartAuction} error={!!this.state.errorMessage} success={this.state.hasNoError}>\n                    <Form.Field width={6}>\n                        <label >Auction Closing Date and Time</label>\n                        <DatePicker\n                            selected={ this.state.startDate }\n                            onChange={this.handleChange}\n                            showTimeSelect\n                            timeFormat=\"HH:mm\"\n                            timeIntervals={20}\n                            timeCaption=\"time\"\n                            dateFormat=\"MM/dd/yyyy h:mm aa\"\n                        /> \n                    </Form.Field>\n\n                    <Form.Field width={4}>\n                        <label>Starting Price</label>\n                        <Input value={this.state.startingPrice}\n                        label={{ basic: true, content: 'Wei' }}\n                        labelPosition='right'\n                        onChange={event => this.setState({ startingPrice: event.target.value })}/> \n                    </Form.Field>\n                    \n                    <Message error header=\"Error!\" content={this.state.errorMessage} />\n\n\n                    <Message success header=\"Success!\" content=\"Auction is Opended Successfully!\" />\n\n\n                    <Button loading={this.state.loading} type='submit'>Start Auction</Button>\n                </Form>\n\n\n\n\n            </div>\n        );\n    }\n\n}\n\nexport default startAuction; "]},"metadata":{},"sourceType":"module"}