{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, useState } from 'react';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\n\nclass startAuction extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"datepicker\", () => {\n      const {\n        0: startDate,\n        1: setStartDate\n      } = useState(setHours(setMinutes(new Date(), 0), 9));\n\n      const filterPassedTime = time => {\n        const currentDate = new Date();\n        const selectedDate = new Date(time);\n        return currentDate.getTime() < selectedDate.getTime();\n      };\n\n      return __jsx(DatePicker, {\n        selected: startDate,\n        onChange: date => setStartDate(date),\n        showTimeSelect: true,\n        filterTime: filterPassedTime,\n        dateFormat: \"MMMM d, yyyy h:mm aa\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      });\n    });\n\n    this.state = {\n      date: '',\n      startingPrice: '',\n      errorMessage: '',\n      hasNoError: false\n    };\n  }\n\n  static async getInitialProps(props) {\n    //fetches address of the bottle from the URL\n    const {\n      address\n    } = props.query;\n    return {\n      address\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Set Bale's Auction Parameters: \"), __jsx(Form, {\n      onSubmit: this.onStartAuction,\n      error: !!this.state.errorMessage,\n      success: this.state.hasNoError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Field, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, \"Auction Date and Time:\"), this.datepicker(), __jsx(Input, {\n      value: this.state.manufacturerName,\n      onChange: event => this.setState({\n        manufacturerName: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    })), __jsx(Form.Field, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }, \"Manufacturer Address\"), __jsx(Input, {\n      value: this.state.manufacturerAddr,\n      icon: \"ethereum\",\n      onChange: event => this.setState({\n        manufacturerAddr: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    })), __jsx(Form.Field, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }, \"Manufacturer Location\"), __jsx(Input, {\n      value: this.state.manufacturerLocation,\n      onChange: event => this.setState({\n        manufacturerLocation: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    })), __jsx(Message, {\n      error: true,\n      header: \"Error!\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }), __jsx(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Auction is Successfully Scheduled !\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, \"Schedule Auction\")));\n  }\n\n}\n\nexport default startAuction;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js"],"names":["React","Component","useState","Form","Button","Input","Message","DatePicker","web3","plasticBaleContract","startAuction","constructor","props","startDate","setStartDate","setHours","setMinutes","Date","filterPassedTime","time","currentDate","selectedDate","getTime","date","state","startingPrice","errorMessage","hasNoError","getInitialProps","address","query","render","onStartAuction","datepicker","manufacturerName","event","setState","target","value","manufacturerAddr","manufacturerLocation","loading"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale'; \n\nclass startAuction extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date:'',\n            startingPrice:'',\n            errorMessage: '',\n            hasNoError: false\n           \n        };\n    }\n\n    static async getInitialProps(props) {\n\n        //fetches address of the bottle from the URL\n        const { address } = props.query;\n\n        return { address };\n    }\n\n    datepicker = () => {\n        const [startDate, setStartDate] = useState(\n          setHours(setMinutes(new Date(), 0), 9)\n        );\n        const filterPassedTime = time => {\n          const currentDate = new Date();\n          const selectedDate = new Date(time);\n      \n          return currentDate.getTime() < selectedDate.getTime();\n        }\n        return (\n          <DatePicker\n            selected={startDate}\n            onChange={date => setStartDate(date)}\n            showTimeSelect\n            filterTime={filterPassedTime}\n            dateFormat=\"MMMM d, yyyy h:mm aa\"\n          />\n        );\n      };\n\n\n\n  \n    render() {\n\n        return (\n            <div>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                <h1>Set Bale's Auction Parameters: </h1>\n\n                <Form onSubmit={this.onStartAuction} error={!!this.state.errorMessage} success={this.state.hasNoError}>\n                            <Form.Field width={6}>\n                                <label>Auction Date and Time:</label>\n                                {this.datepicker()}\n                                <Input value={this.state.manufacturerName}\n                                    onChange={event => this.setState({ manufacturerName: event.target.value })} />\n                            </Form.Field>\n                            <Form.Field width={6}>\n                                <label>Manufacturer Address</label>\n                                <Input value={this.state.manufacturerAddr}\n                                    icon=\"ethereum\"\n                                    onChange={event => this.setState({ manufacturerAddr: event.target.value })} />\n                            </Form.Field>\n                            <Form.Field width={6}>\n                                <label>Manufacturer Location</label>\n                                <Input value={this.state.manufacturerLocation}\n                                    onChange={event => this.setState({ manufacturerLocation: event.target.value })} />\n                            </Form.Field>\n\n                            <Message error header=\"Error!\" content={this.state.errorMessage} />\n\n\n                            <Message success header=\"Success!\" content=\"Auction is Successfully Scheduled !\" />\n\n\n                            <Button loading={this.state.loading} type='submit'>Schedule Auction</Button>\n                        </Form>\n\n\n\n\n            </div>\n        );\n    }\n\n}\n\nexport default startAuction; "]},"metadata":{},"sourceType":"module"}