{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/recycler.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\nThis is the recycler page where a recycler scans the QR codes and view rewards\nContact used here: an instance of tracking.sol \nTo run the app, use the command npm run dev\n*/\nimport React, { Component } from 'react';\nimport { Card, Table, Button } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nconst QRReader = dynamic(() => import('react-qr-reader'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-qr-reader')],\n    modules: ['react-qr-reader']\n  }\n});\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking';\nimport { Link } from '../routes';\n\nclass recyclerPage extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      const accounts = await web3.eth.getAccounts(); // might need to use getPastEvents here !!!!!\n\n      trackingContract.events.updateStatusRecycler({\n        filter: {\n          recycler: accounts[0]\n        },\n        fromBlock: 0\n      }, function (error, event) {\n        /*For debugging purposes \n        console.log(event);\n        console.log(event.returnValues['plasticBottleAddress']); */\n        this.setState({\n          result: event.returnValues['plasticBottleAddress'],\n          status: event.returnValues['status']\n        });\n        this.setState(prevState => ({\n          bottlesLogged: [...prevState.bottlesLogged, this.state.result]\n        }));\n        console.log(this.state.bottlesLogged);\n        this.addRow();\n      }.bind(this)).on('error', console.error);\n      trackingContract.events.updateStatusMachine({\n        filter: {\n          plasticBottleAddress: this.state.bottlesLogged\n        },\n        fromBlock: 0\n      }, function (error, event) {\n        //For debugging purposes \n        console.log(event);\n        console.log(this.state.rows); //console.log(this.state.rows.indexOf( bottle => bottle.addr === event.returnValues['plasticBottleAddress'] ));\n        //console.log(event.returnValues['plasticBottleAddress']);\n        //this.updateRow(event.returnValues['plasticBottleAddress']);\n        //this.setState({ status: event.returnValues['status'] });\n        // this.setState(prevState => ({ bottlesLogged: [...prevState.bottlesLogged, this.state.result] }));\n        //this.addRow();\n      }.bind(this)).on('error', console.error);\n    });\n\n    _defineProperty(this, \"handleScan\", async data => {\n      if (data) {\n        this.setState({\n          result: data\n        });\n        this.disposeBottle();\n      }\n    });\n\n    _defineProperty(this, \"handleError\", err => {\n      console.error(err);\n    });\n\n    _defineProperty(this, \"onScan\", async event => {\n      event.preventDefault();\n\n      if (this.state.qr === false) {\n        this.setState({\n          qr: true\n        });\n      } else {\n        this.setState({\n          qr: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"addRow\", () => {\n      this.setState(prevState => {\n        const bottle = {\n          addr: this.state.result,\n          status: this.state.status\n        };\n        return {\n          rows: [...prevState.rows, bottle]\n        };\n      });\n    });\n\n    _defineProperty(this, \"disposeBottle\", async () => {\n      const accounts = await web3.eth.getAccounts(); //Add try and catch block here \n\n      await trackingContract.methods.updateStatusDisposed(this.state.result).send({\n        from: accounts[0]\n      });\n    });\n\n    this.state = {\n      rewards: 0,\n      result: '',\n      status: '',\n      qr: false,\n      rows: [],\n      bottlesLogged: []\n    };\n  } // retrieve all bottled logged by user from ropsten network \n\n\n  updateRow(value) {\n    this.state.rows.map(bottle => bottle.addr === value ? this.setState({\n      status: 'sorted'\n    }) : null);\n  }\n\n  render() {\n    const {\n      qr,\n      rows\n    } = this.state;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, \"Welcome to Recycler's Page\"), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), __jsx(Card, {\n      header: \"Rewards\",\n      description: this.state.rewards,\n      meta: \"ETH\",\n      centered: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"Scanner\",\n      style: {\n        'width': '40%',\n        'margin-left': 'auto',\n        'margin-right': 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, \"Dispose a Plastic Bottle\", __jsx(Button, {\n      className: \"QrReader\",\n      style: {\n        'vertical-align': 'middle'\n      },\n      onClick: this.onScan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, \" Scan QR Code\"), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, \" \", this.state.qr === true ? __jsx(QRReader, {\n      delay: 300,\n      onError: this.handleError,\n      onScan: this.handleScan,\n      style: {\n        width: \"60%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 58\n      }\n    }) : '', \" \"))), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"BottleTable\",\n      style: {\n        'width': '40%',\n        'margin-left': 'auto',\n        'margin-right': 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, __jsx(Table, {\n      unstackable: true,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 33\n      }\n    }, \"Plasitc Bottle Address\"), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, \"Status\"))), __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, this.state.rows.map(bottle => __jsx(Link, {\n      route: `/track/${bottle.addr}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }, __jsx(Table.Row, {\n      id: this.state.rows.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, __jsx(Table.Cell, {\n      selectable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 41\n      }\n    }, bottle.addr)), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }\n    }, bottle.status))))))));\n  }\n\n} //At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \n\n\nexport default recyclerPage;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/recycler.js"],"names":["React","Component","Card","Table","Button","dynamic","QRReader","ssr","web3","trackingContract","Link","recyclerPage","constructor","props","accounts","eth","getAccounts","events","updateStatusRecycler","filter","recycler","fromBlock","error","event","setState","result","returnValues","status","prevState","bottlesLogged","state","console","log","addRow","bind","on","updateStatusMachine","plasticBottleAddress","rows","data","disposeBottle","err","preventDefault","qr","bottle","addr","methods","updateStatusDisposed","send","from","rewards","updateRow","value","map","render","onScan","handleError","handleScan","width","length"],"mappings":"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","sourcesContent":["/*\nThis is the recycler page where a recycler scans the QR codes and view rewards\nContact used here: an instance of tracking.sol \nTo run the app, use the command npm run dev\n*/\n\nimport React, { Component } from 'react';\nimport { Card, Table, Button } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nconst QRReader = dynamic(() => import('react-qr-reader'), { ssr: false });\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking'; \nimport {Link} from '../routes'; \n\nclass recyclerPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rewards: 0,\n            result: '',\n            status: '',\n            qr: false,\n            rows: [],\n            bottlesLogged: []\n        };\n    }\n\n    // retrieve all bottled logged by user from ropsten network \n    componentDidMount = async () => {\n        const accounts = await web3.eth.getAccounts();\n\n        // might need to use getPastEvents here !!!!!\n        trackingContract.events.updateStatusRecycler({\n            filter: { recycler: accounts[0] }, fromBlock: 0\n        }, function (error, event) {\n            /*For debugging purposes \n            console.log(event);\n            console.log(event.returnValues['plasticBottleAddress']); */\n            \n            this.setState({ result: event.returnValues['plasticBottleAddress'], status: event.returnValues['status'] });\n            this.setState(prevState => ({ bottlesLogged: [...prevState.bottlesLogged, this.state.result] }));\n            console.log(this.state.bottlesLogged);\n            this.addRow();\n        }.bind(this))\n            .on('error', console.error);\n\n            trackingContract.events.updateStatusMachine({\n                filter: { plasticBottleAddress: this.state.bottlesLogged}, fromBlock: 0\n            }, function (error, event) {\n                //For debugging purposes \n                console.log(event);\n                console.log(this.state.rows);\n                //console.log(this.state.rows.indexOf( bottle => bottle.addr === event.returnValues['plasticBottleAddress'] ));\n                //console.log(event.returnValues['plasticBottleAddress']);\n\n                //this.updateRow(event.returnValues['plasticBottleAddress']);\n                //this.setState({ status: event.returnValues['status'] });\n               // this.setState(prevState => ({ bottlesLogged: [...prevState.bottlesLogged, this.state.result] }));\n                //this.addRow();\n            }.bind(this))\n                .on('error', console.error);\n\n\n\n\n    };\n\n    // QR reader functions \n    handleScan = async (data) => {\n        if (data) {\n            this.setState({ result: data });\n            this.disposeBottle();\n\n        }\n    }\n\n    handleError = err => {\n        console.error(err)\n    }\n\n    onScan = async (event) => {\n        event.preventDefault();\n        if (this.state.qr === false) {\n            this.setState({ qr: true });\n        }\n        else {\n            this.setState({ qr: false });\n        }\n    };\n\n    // Adds a new row dynamically to the table \n    addRow = () => {\n        this.setState((prevState) => {\n            const bottle = { addr: this.state.result, status: this.state.status };\n            return { rows: [...prevState.rows, bottle] };\n        });\n\n    };\n\n    // Log bottle as disposed \n    disposeBottle = async () => {\n        const accounts = await web3.eth.getAccounts();\n\n        //Add try and catch block here \n        await trackingContract.methods\n            .updateStatusDisposed(this.state.result)\n            .send({ from: accounts[0] });\n\n    };\n\n    updateRow(value){\n        this.state.rows.map(bottle =>  bottle.addr === value? this.setState({status: 'sorted'}): null );\n    }\n\n    \n    render() {\n\n        const { qr, rows } = this.state\n\n        return (\n            <div>\n                <h1>Welcome to Recycler's Page</h1>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                <Card header='Rewards' description={this.state.rewards} meta='ETH' centered='true' />\n\n                <br />\n                <br />\n\n                <div className=\"Scanner\" style={{ 'width': '40%', 'margin-left': 'auto', 'margin-right': 'auto' }}>\n                    <h2>Dispose a Plastic Bottle\n                    <Button className=\"QrReader\" style={{ 'vertical-align': 'middle' }} onClick={this.onScan} > Scan QR Code</Button>\n                        <div> {this.state.qr === true ? (<QRReader\n                            delay={300}\n                            onError={this.handleError}\n                            onScan={this.handleScan}\n                            style={{ width: \"60%\" }}\n                        />\n                        )\n                            : ''} </div>\n                    </h2>\n                </div>\n\n                <br />\n\n                <div className='BottleTable' style={{ 'width': '40%', 'margin-left': 'auto', 'margin-right': 'auto' }}>\n                    <Table unstackable size='small'>\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell>Plasitc Bottle Address</Table.HeaderCell>\n                                <Table.HeaderCell>Status</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            {this.state.rows.map(bottle => (\n                                <Link route={`/track/${bottle.addr}`}>\n                                <Table.Row id={this.state.rows.length} >\n                                    <Table.Cell selectable>\n                                        <a>\n                                        {bottle.addr}\n                                        </a>\n                                        </Table.Cell>\n                                    <Table.Cell>{bottle.status}</Table.Cell>\n                                </Table.Row>\n                                </Link>\n                            ))}\n                        </Table.Body>\n\n                    </Table>\n                </div>\n\n\n            </div>\n\n        );\n    }\n\n}\n\n//At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \nexport default recyclerPage; "]},"metadata":{},"sourceType":"module"}