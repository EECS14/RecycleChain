{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/viewauctions.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport trackingContract from '../../ethereum/tracking';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport { Link } from '../../routes';\n\nclass viewauctions extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      const accounts = await web3.eth.getAccounts(); //NOTE: Set the account back to account[0] - seller address is account 2\n\n      trackingContract.events.plasticBaleCompleted({\n        filter: {\n          sellerAddress: accounts[0]\n        },\n        fromBlock: 0\n      }, function (error, event) {\n        //Debugging \n        console.log(event); //1. Fetch plastic bale addresses which are contract addresses/auction addresses from plasticBaleCompleted\n\n        const plasticbaleAddr = event.returnValues['plasticbale'];\n        console.log(plasticbaleAddr); //2. Create a new instance \n\n        const plasticBaleSC = plasticBaleContract(plasticbaleAddr); //3. Check auctionStarted events \n\n        plasticBaleSC.events.auctionStarted({\n          filter: {\n            baleAddress: plasticbaleAddr\n          },\n          fromBlock: 0\n        }, function (error, event) {\n          console.log(event); //4. Extract Auction data from event\n\n          var time = new Date(event.returnValues['closingTime'] * 1000);\n          var date = time.toString();\n          this.setState({\n            auctionAddr: event.returnValues['baleAddress'],\n            closingTime: date,\n            startingPrice: event.returnValues['startingAmount']\n          }); //5. Render card on webpage\n\n          this.renderAuctions();\n        }.bind(this)).on('error', console.error);\n      }.bind(this)).on('error', console.error);\n    });\n\n    _defineProperty(this, \"renderAuctions\", () => {\n      this.setState(prevState => {\n        const items = {\n          header: this.state.auctionAddr,\n          description: __jsx(\"a\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 74\n            }\n          }, \"Join Auction\"),\n          fluid: true,\n          meta: this.state.closingTime,\n          extra: this.state.startingPrice\n        };\n        return {\n          cards: [...prevState.cards, items]\n        };\n      });\n    });\n\n    this.state = {\n      cards: [],\n      closingTime: '',\n      startingPrice: '',\n      auctionAddr: ''\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"Open Auctions\"), __jsx(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, this.state.cards.map(items => __jsx(Link, {\n      route: `/auctions/viewbales/${items.header}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, __jsx(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, __jsx(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, items.header), __jsx(Card.meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, items.meta), __jsx(Card.description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, items.description), __jsx(Card.fluid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, items.fluid))))));\n  }\n\n}\n\nexport default viewauctions;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/viewauctions.js"],"names":["React","Component","Card","web3","trackingContract","plasticBaleContract","Link","viewauctions","constructor","props","accounts","eth","getAccounts","events","plasticBaleCompleted","filter","sellerAddress","fromBlock","error","event","console","log","plasticbaleAddr","returnValues","plasticBaleSC","auctionStarted","baleAddress","time","Date","date","toString","setState","auctionAddr","closingTime","startingPrice","renderAuctions","bind","on","prevState","items","header","state","description","fluid","meta","extra","cards","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport trackingContract from '../../ethereum/tracking';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport { Link } from '../../routes';\n\nclass viewauctions extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            cards: [],\n            closingTime: '',\n            startingPrice: '',\n            auctionAddr: ''\n\n        };\n    }\n\n\n    componentDidMount = async () => {\n\n\n        const accounts = await web3.eth.getAccounts();\n        //NOTE: Set the account back to account[0] - seller address is account 2\n        trackingContract.events.plasticBaleCompleted({\n            filter: { sellerAddress: accounts[0] }, fromBlock: 0\n        }, function (error, event) {\n            //Debugging \n            console.log(event);\n            //1. Fetch plastic bale addresses which are contract addresses/auction addresses from plasticBaleCompleted\n            const plasticbaleAddr = event.returnValues['plasticbale'];\n            console.log(plasticbaleAddr);\n            //2. Create a new instance \n            const plasticBaleSC = plasticBaleContract(plasticbaleAddr);\n            //3. Check auctionStarted events \n\n            plasticBaleSC.events.auctionStarted({\n                filter: { baleAddress: plasticbaleAddr },\n                fromBlock: 0\n            }, function (error, event) {\n                console.log(event);\n                //4. Extract Auction data from event\n                var time = new Date(event.returnValues['closingTime'] * 1000);\n                var date = time.toString();\n                this.setState({\n                    auctionAddr: event.returnValues['baleAddress'],\n                    closingTime: date,\n                    startingPrice: event.returnValues['startingAmount']\n                });\n\n                //5. Render card on webpage\n                this.renderAuctions();\n\n            }.bind(this))\n                .on('error', console.error);\n\n        }.bind(this))\n            .on('error', console.error);\n\n\n    };\n\n\n    renderAuctions= () => {\n        this.setState((prevState) => {\n            const items = { header: this.state.auctionAddr, description: <a>Join Auction</a>, fluid: true, meta: this.state.closingTime, extra: this.state.startingPrice };\n            return { cards: [...prevState.cards, items] };\n        });\n\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                <h1>Open Auctions</h1>\n                <Card>\n                {this.state.cards.map(items => (\n                    <Link route={`/auctions/viewbales/${items.header}`}>\n                        <Card>\n                        <Card.Header>{items.header}</Card.Header>\n                        <Card.meta>{items.meta}</Card.meta>\n                        <Card.description>{items.description}</Card.description>\n                        <Card.fluid>{items.fluid}</Card.fluid>\n                        </Card>\n                    </Link>\n        )) }\n         </Card>\n                \n            </div>\n        );\n    }\n\n}\n\nexport default viewauctions; "]},"metadata":{},"sourceType":"module"}