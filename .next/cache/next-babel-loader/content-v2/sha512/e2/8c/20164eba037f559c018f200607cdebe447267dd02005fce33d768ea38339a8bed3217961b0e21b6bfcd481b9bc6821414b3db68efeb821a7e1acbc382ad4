{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/registration.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*\nThis is the registration page where the goverment entity registers stakeholders \nContact used here: an instance of register.sol \nTo run the app, use the command npm run dev\n*/\nimport React, { Component } from 'react';\nimport { Menu, Form, Button, Input, Message, Container, Grid } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport registerContract from '../ethereum/register'; // import SC instance\n\nimport Layout from '../components/Layout';\n\nvar registrationPage = /*#__PURE__*/function (_Component) {\n  _inherits(registrationPage, _Component);\n\n  var _super = _createSuper(registrationPage);\n\n  function registrationPage(props) {\n    var _this;\n\n    _classCallCheck(this, registrationPage);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDismiss\", function () {\n      _this.setState({\n        visible: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRegisterManu\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault(); // prevents the browser from submitting the form immediately\n\n                _context.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context.sent;\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context.prev = 5;\n                registerContract.handleRevert; //NEW\n\n                _context.next = 9;\n                return registerContract.methods.registerManufactuerer(_this.state.manufacturerAddr, _this.state.manufacturerLocation, _this.state.manufacturerName).send({\n                  from: accounts[0]\n                });\n\n              case 9:\n                _context.next = 15;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](5);\n\n                _this.setState({\n                  errorMessage: _context.t0\n                });\n\n                _this.setState({\n                  hasError: false\n                });\n\n              case 15:\n                // if errorMsg is empty, registration is successful\n                if (!_this.state.errorMessage) _this.setState({\n                  hasNoError: true\n                });\n\n                _this.setState({\n                  loading: false\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[5, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onRegisterBuyer\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n\n                _this.setState({\n                  loading: true,\n                  errorMessage1: ''\n                });\n\n                _context2.prev = 5;\n                _context2.next = 8;\n                return registerContract.methods.registerBuyer(_this.state.buyerAddr, _this.state.buyerName, _this.state.buyerLocation, _this.state.buyerBusiness).send({\n                  from: accounts[0]\n                });\n\n              case 8:\n                _context2.next = 14;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](5);\n\n                _this.setState({\n                  errorMessage1: _context2.t0.message\n                });\n\n                _this.setState({\n                  hasError1: false\n                });\n\n              case 14:\n                // if errorMsg is empty, registration is successful\n                if (!_this.state.errorMessage1) _this.setState({\n                  hasNoError1: true\n                });\n\n                _this.setState({\n                  loading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[5, 10]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onRegisterSeller\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault();\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n\n                _this.setState({\n                  loading: true,\n                  errorMessage2: ''\n                });\n\n                _context3.prev = 5;\n                _context3.next = 8;\n                return registerContract.methods.registerSeller(_this.state.sellerAddr, _this.state.sellerLocation, _this.state.sellerName, _this.state.sortingMachines).send({\n                  from: accounts[0]\n                });\n\n              case 8:\n                _context3.next = 14;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](5);\n\n                _this.setState({\n                  errorMessage2: _context3.t0.message\n                });\n\n                _this.setState({\n                  hasError2: false\n                });\n\n              case 14:\n                // if errorMsg is empty, registration is successful\n                if (!_this.state.errorMessage2) _this.setState({\n                  hasNoError2: true\n                });\n\n                _this.setState({\n                  loading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[5, 10]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      selectManufacturer: true,\n      selectSortingFacility: false,\n      selectBuyer: false,\n      manufacturerName: '',\n      manufacturerAddr: '',\n      manufacturerLocation: '',\n      buyerName: '',\n      buyerAddr: '',\n      buyerLocation: '',\n      buyerBusiness: '',\n      sellerName: '',\n      sellerAddr: '',\n      sellerLocation: '',\n      sortingMachines: [],\n      inputSize: 0,\n      errorMessage: '',\n      hasNoError: false,\n      errorMessage1: '',\n      hasNoError1: false,\n      errorMessage2: '',\n      hasNoError2: false,\n      loading: false,\n      visible: ''\n    };\n    return _this;\n  } // Dynamic fields appear based on number of sorting machines \n\n\n  _createClass(registrationPage, [{\n    key: \"handleOnChange\",\n    value: function handleOnChange(value) {\n      this.setState({\n        inputSize: value.target.value\n      });\n    }\n  }, {\n    key: \"renderInputs\",\n    value: function renderInputs(value) {\n      var _this2 = this;\n\n      var inputs = [];\n\n      var _loop = function _loop(i) {\n        inputs.push(__jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }\n        }, __jsx(Input, {\n          value: _this2.state.sortingMachines[i],\n          onChange: function onChange(event) {\n            var newSortingMachines = _toConsumableArray(_this2.state.sortingMachines);\n\n            newSortingMachines[i] = event.target.value;\n\n            _this2.setState({\n              sortingMachines: newSortingMachines\n            });\n          },\n          icon: \"ethereum\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }\n        })));\n\n        for (var _i = 0; _i < value; _i++) {\n          console.log(_this2.state.sortingMachines[_i]);\n        }\n      };\n\n      for (var i = 0; i < value; i++) {\n        _loop(i);\n      }\n\n      return inputs;\n    } //Register a Manufactuerer & interact with the register SC\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state.inputSize);\n      var _this$state = this.state,\n          selectManufacturer = _this$state.selectManufacturer,\n          selectSortingFacility = _this$state.selectSortingFacility,\n          selectBuyer = _this$state.selectBuyer,\n          manufacturerName = _this$state.manufacturerName,\n          manufacturerAddr = _this$state.manufacturerAddr,\n          manufacturerLocation = _this$state.manufacturerLocation,\n          buyerName = _this$state.buyerName,\n          buyerAddr = _this$state.buyerAddr,\n          buyerLocation = _this$state.buyerLocation,\n          buyerBusiness = _this$state.buyerBusiness,\n          sellerName = _this$state.sellerName,\n          sellerAddr = _this$state.sellerAddr,\n          sellerLocation = _this$state.sellerLocation,\n          sortingMachines = _this$state.sortingMachines;\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"Registration \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      }, \"Welcome to Goverment Entity Page\"), __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      }, \"Select a stakeholder to register\"), __jsx(Menu, {\n        widths: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }\n      }, __jsx(Menu.Item, {\n        name: \"Manufacturer\",\n        onClick: function onClick() {\n          return _this3.setState({\n            selectManufacturer: true,\n            selectSortingFacility: false,\n            selectBuyer: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }\n      }, \" Manufacturer\"), __jsx(Menu.Item, {\n        name: \"SortingFacility\",\n        onClick: function onClick() {\n          return _this3.setState({\n            selectSortingFacility: true,\n            selectManufacturer: false,\n            selectBuyer: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }\n      }, \" Sorting Facility\"), __jsx(Menu.Item, {\n        name: \"Buyer\",\n        onClick: function onClick() {\n          return _this3.setState({\n            selectBuyer: true,\n            selectSortingFacility: false,\n            selectManufacturer: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }\n      }, \" Buyer \")), selectManufacturer && __jsx(\"div\", {\n        className: \"Manufactuerer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }\n      }, __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }\n      }, __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 33\n        }\n      }, __jsx(Grid.Row, {\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 37\n        }\n      }, __jsx(Grid.Column, {\n        width: 6,\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 41\n        }\n      }, __jsx(Form, {\n        onSubmit: this.onRegisterManu,\n        error: !!this.state.errorMessage,\n        success: this.state.hasNoError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 45\n        }\n      }, __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 53\n        }\n      }, \"Manufacturer Name\"), __jsx(Input, {\n        value: this.state.manufacturerName,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            manufacturerName: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 53\n        }\n      })), __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 53\n        }\n      }, \"Manufacturer Address\"), __jsx(Input, {\n        value: this.state.manufacturerAddr,\n        icon: \"ethereum\",\n        onChange: function onChange(event) {\n          return _this3.setState({\n            manufacturerAddr: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 53\n        }\n      })), __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 53\n        }\n      }, \"Manufacturer Location\"), __jsx(Input, {\n        value: this.state.manufacturerLocation,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            manufacturerLocation: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 53\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Error!\",\n        onDismiss: this.handleDismiss,\n        content: this.state.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 49\n        }\n      }), __jsx(Message, {\n        success: true,\n        header: \"Success!\",\n        onDismiss: this.handleDismiss,\n        content: \"Manufactuerer registered successfully!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 49\n        }\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 49\n        }\n      }, \"Register\"))))))), selectBuyer && __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }\n      }, __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 29\n        }\n      }, __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 33\n        }\n      }, __jsx(Grid.Row, {\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 37\n        }\n      }, __jsx(Grid.Column, {\n        width: 6,\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 41\n        }\n      }, __jsx(Form, {\n        onSubmit: this.onRegisterBuyer,\n        error: !!this.state.errorMessage1,\n        success: this.state.hasNoError1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 45\n        }\n      }, __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 53\n        }\n      }, \"Buyer Name\"), __jsx(Input, {\n        value: this.state.buyerName,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            buyerName: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 53\n        }\n      })), __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 53\n        }\n      }, \"Buyer Address\"), __jsx(Input, {\n        value: this.state.buyerAddr,\n        icon: \"ethereum\",\n        onChange: function onChange(event) {\n          return _this3.setState({\n            buyerAddr: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 53\n        }\n      })), __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 53\n        }\n      }, \"Buyer Business Type\"), __jsx(Input, {\n        value: this.state.BuyerBusiness,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            buyerBusiness: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 53\n        }\n      })), __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 53\n        }\n      }, \"Buyer Location\"), __jsx(Input, {\n        value: this.state.buyerLocation,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            buyerLocation: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 53\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Error!\",\n        content: this.state.errorMessage1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 49\n        }\n      }), __jsx(Message, {\n        success: true,\n        header: \"Success!\",\n        content: \"Buyer registered successfully!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 49\n        }\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 49\n        }\n      }, \"Register\"))))))), selectSortingFacility && __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }\n      }, __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 29\n        }\n      }, __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 33\n        }\n      }, __jsx(Grid.Row, {\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 37\n        }\n      }, __jsx(Grid.Column, {\n        width: 6,\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 41\n        }\n      }, __jsx(Form, {\n        onSubmit: this.onRegisterSeller,\n        error: !!this.state.errorMessage2,\n        success: this.state.hasNoError2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 45\n        }\n      }, __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 53\n        }\n      }, \"Sorting Facility Name\"), __jsx(Input, {\n        value: this.state.sellerName,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            sellerName: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 53\n        }\n      })), __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 53\n        }\n      }, \"Sorting Facility Address\"), __jsx(Input, {\n        value: this.state.sellerAddr,\n        icon: \"ethereum\",\n        onChange: function onChange(event) {\n          return _this3.setState({\n            sellerAddr: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 53\n        }\n      })), __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 53\n        }\n      }, \"Sorting Facility Location\"), __jsx(Input, {\n        value: this.state.sellerLocation,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            sellerLocation: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 53\n        }\n      })), __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 49\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 53\n        }\n      }, \"Sorting Machines Address\"), __jsx(\"input\", {\n        type: \"number\",\n        name: \"quantity\",\n        min: \"1\",\n        max: \"7\",\n        placeholder: \"Select number of machines in facility\",\n        onChange: function onChange(value) {\n          return _this3.handleOnChange(value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 53\n        }\n      }), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 53\n        }\n      }, this.renderInputs(this.state.inputSize))), __jsx(Message, {\n        error: true,\n        header: \"Error!\",\n        content: this.state.errorMessage2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 49\n        }\n      }), __jsx(Message, {\n        success: true,\n        header: \"Success!\",\n        content: \"Seller registered successfully!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 49\n        }\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 49\n        }\n      }, \"Register\")))))))));\n    }\n  }]);\n\n  return registrationPage;\n}(Component); //At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \n\n\nexport default registrationPage;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/registration.js"],"names":["React","Component","Menu","Form","Button","Input","Message","Container","Grid","web3","registerContract","Layout","registrationPage","props","setState","visible","event","preventDefault","eth","getAccounts","accounts","loading","errorMessage","handleRevert","methods","registerManufactuerer","state","manufacturerAddr","manufacturerLocation","manufacturerName","send","from","hasError","hasNoError","errorMessage1","registerBuyer","buyerAddr","buyerName","buyerLocation","buyerBusiness","message","hasError1","hasNoError1","errorMessage2","registerSeller","sellerAddr","sellerLocation","sellerName","sortingMachines","hasError2","hasNoError2","selectManufacturer","selectSortingFacility","selectBuyer","inputSize","value","target","inputs","i","push","newSortingMachines","console","log","onRegisterManu","handleDismiss","onRegisterBuyer","BuyerBusiness","onRegisterSeller","handleOnChange","renderInputs"],"mappings":"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","sourcesContent":["/*\nThis is the registration page where the goverment entity registers stakeholders \nContact used here: an instance of register.sol \nTo run the app, use the command npm run dev\n*/\n\nimport React, { Component } from 'react';\nimport { Menu, Form, Button, Input, Message, Container, Grid } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport registerContract from '../ethereum/register'; // import SC instance\nimport Layout from '../components/Layout';\n\nclass registrationPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectManufacturer: true,\n            selectSortingFacility: false,\n            selectBuyer: false,\n            manufacturerName: '',\n            manufacturerAddr: '',\n            manufacturerLocation: '',\n            buyerName: '',\n            buyerAddr: '',\n            buyerLocation: '',\n            buyerBusiness: '',\n            sellerName: '',\n            sellerAddr: '',\n            sellerLocation: '',\n            sortingMachines: [],\n            inputSize: 0,\n            errorMessage: '',\n            hasNoError: false,\n            errorMessage1: '',\n            hasNoError1: false,\n            errorMessage2: '',\n            hasNoError2: false,\n            loading: false,\n            visible: ''\n        };\n    }\n\n    // Dynamic fields appear based on number of sorting machines \n    handleOnChange(value) { this.setState({ inputSize: value.target.value }); }\n    handleDismiss = () => { this.setState({ visible: false }) }\n\n    renderInputs(value) {\n        const inputs = [];\n        for (let i = 0; i < value; i++) {\n            inputs.push(<div>\n                <Input value={this.state.sortingMachines[i]}\n                    onChange={(event) => {\n                        const newSortingMachines = [...this.state.sortingMachines];\n                        newSortingMachines[i] = event.target.value;\n                        this.setState({ sortingMachines: newSortingMachines })\n                    }}\n                    icon=\"ethereum\" />\n            </div>\n            )\n\n            for (let i = 0; i < value; i++) {\n                console.log(this.state.sortingMachines[i]);\n            }\n        }\n        return inputs;\n    }\n\n    //Register a Manufactuerer & interact with the register SC\n    onRegisterManu = async (event) => {\n\n        event.preventDefault(); // prevents the browser from submitting the form immediately\n\n        const accounts = await web3.eth.getAccounts();\n\n        this.setState({ loading: true, errorMessage: '' });\n\n        try {\n            registerContract.handleRevert; //NEW\n            await registerContract.methods\n                .registerManufactuerer(this.state.manufacturerAddr, this.state.manufacturerLocation, this.state.manufacturerName)\n                .send({ from: accounts[0] });\n        } catch (err) {\n            this.setState({ errorMessage: err });\n            this.setState({ hasError: false });\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage)\n            this.setState({ hasNoError: true });\n\n        this.setState({ loading: false });\n    };\n\n\n    //Register a buyer & interact with the register SC\n    onRegisterBuyer = async (event) => {\n\n        event.preventDefault();\n\n        const accounts = await web3.eth.getAccounts();\n\n        this.setState({ loading: true, errorMessage1: '' });\n\n        try {\n            await registerContract.methods\n                .registerBuyer(this.state.buyerAddr, this.state.buyerName, this.state.buyerLocation, this.state.buyerBusiness)\n                .send({ from: accounts[0] });\n        } catch (err) {\n            this.setState({ errorMessage1: err.message });\n            this.setState({ hasError1: false });\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage1)\n            this.setState({ hasNoError1: true });\n\n        this.setState({ loading: false });\n    };\n\n    //Register a sorting facility & interact with the register SC\n    onRegisterSeller = async (event) => {\n\n        event.preventDefault();\n\n        const accounts = await web3.eth.getAccounts();\n\n        this.setState({ loading: true, errorMessage2: '' });\n\n        try {\n\n            await registerContract.methods\n                .registerSeller(this.state.sellerAddr, this.state.sellerLocation, this.state.sellerName, this.state.sortingMachines)\n                .send({ from: accounts[0] });\n        } catch (err) {\n            this.setState({ errorMessage2: err.message });\n            this.setState({ hasError2: false });\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage2)\n            this.setState({ hasNoError2: true });\n\n        this.setState({ loading: false });\n    };\n\n\n\n    render() {\n\n        console.log(this.state.inputSize);\n\n        const {\n            selectManufacturer,\n            selectSortingFacility,\n            selectBuyer,\n            manufacturerName,\n            manufacturerAddr,\n            manufacturerLocation,\n            buyerName,\n            buyerAddr,\n            buyerLocation,\n            buyerBusiness,\n            sellerName,\n            sellerAddr,\n            sellerLocation,\n            sortingMachines } = this.state\n\n        return (\n\n            <Layout>\n                <div className=\"Registration \">\n                    <h1>Welcome to Goverment Entity Page</h1>\n                    <link rel=\"stylesheet\"\n                        href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                    />\n                    <h2>Select a stakeholder to register</h2>\n                    <Menu widths={3}>\n                        <Menu.Item name='Manufacturer' onClick={() => this.setState({ selectManufacturer: true, selectSortingFacility: false, selectBuyer: false })} > Manufacturer</Menu.Item>\n                        <Menu.Item name='SortingFacility' onClick={() => this.setState({ selectSortingFacility: true, selectManufacturer: false, selectBuyer: false })} > Sorting Facility</Menu.Item>\n                        <Menu.Item name='Buyer' onClick={() => this.setState({ selectBuyer: true, selectSortingFacility: false, selectManufacturer: false })} > Buyer </Menu.Item>\n                    </Menu>\n\n\n\n                    {selectManufacturer && (\n\n                        <div className='Manufactuerer' >\n                            <Container>\n                                <Grid>\n                                    <Grid.Row centered>\n                                        <Grid.Column width={6} textAlign=\"center\">\n                                            <Form onSubmit={this.onRegisterManu} error={!!this.state.errorMessage} success={this.state.hasNoError}>\n                                                <Form.Field>\n                                                    <label>Manufacturer Name</label>\n                                                    <Input value={this.state.manufacturerName}\n                                                        onChange={event => this.setState({ manufacturerName: event.target.value })} />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    <label>Manufacturer Address</label>\n                                                    <Input value={this.state.manufacturerAddr}\n                                                        icon=\"ethereum\"\n                                                        onChange={event => this.setState({ manufacturerAddr: event.target.value })} />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    <label>Manufacturer Location</label>\n                                                    <Input value={this.state.manufacturerLocation}\n                                                        onChange={event => this.setState({ manufacturerLocation: event.target.value })} />\n                                                </Form.Field>\n\n                                                <Message error header=\"Error!\" \n                                                 onDismiss={this.handleDismiss}\n                                                content={this.state.errorMessage} />\n\n\n                                                <Message success header=\"Success!\" \n                                                 onDismiss={this.handleDismiss}\n                                                 content=\"Manufactuerer registered successfully!\" />\n\n\n                                                <Button loading={this.state.loading} type='submit'>Register</Button>\n                                            </Form>\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                </Grid>\n                            </Container>\n                        </div>\n\n                    )}\n\n                    {selectBuyer && (\n                        <div>\n                            <Container>\n                                <Grid>\n                                    <Grid.Row centered>\n                                        <Grid.Column width={6} textAlign=\"center\">\n                                            <Form onSubmit={this.onRegisterBuyer} error={!!this.state.errorMessage1} success={this.state.hasNoError1} >\n                                                <Form.Field>\n                                                    <label>Buyer Name</label>\n                                                    <Input value={this.state.buyerName}\n                                                        onChange={event => this.setState({ buyerName: event.target.value })} />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    <label>Buyer Address</label>\n                                                    <Input value={this.state.buyerAddr}\n                                                        icon=\"ethereum\"\n                                                        onChange={event => this.setState({ buyerAddr: event.target.value })} />\n                                                </Form.Field>\n                                                <Form.Field >\n                                                    <label>Buyer Business Type</label>\n                                                    <Input value={this.state.BuyerBusiness}\n                                                        onChange={event => this.setState({ buyerBusiness: event.target.value })} />\n                                                </Form.Field>\n                                                <Form.Field >\n                                                    <label>Buyer Location</label>\n                                                    <Input value={this.state.buyerLocation}\n                                                        onChange={event => this.setState({ buyerLocation: event.target.value })} />\n                                                </Form.Field>\n\n                                                <Message error header=\"Error!\" content={this.state.errorMessage1} />\n\n                                                <Message success header=\"Success!\" content=\"Buyer registered successfully!\" />\n\n                                                <Button loading={this.state.loading} type='submit'>Register</Button>\n                                            </Form>\n\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                </Grid>\n                            </Container>\n                        </div>\n\n                    )}\n\n                    {selectSortingFacility && (\n                        <div>\n                            <Container>\n                                <Grid>\n                                    <Grid.Row centered>\n                                        <Grid.Column width={6} textAlign=\"center\">\n                                            <Form onSubmit={this.onRegisterSeller} error={!!this.state.errorMessage2} success={this.state.hasNoError2}>\n                                                <Form.Field >\n                                                    <label>Sorting Facility Name</label>\n                                                    <Input value={this.state.sellerName}\n                                                        onChange={event => this.setState({ sellerName: event.target.value })} />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    <label>Sorting Facility Address</label>\n                                                    <Input value={this.state.sellerAddr}\n                                                        icon=\"ethereum\"\n                                                        onChange={event => this.setState({ sellerAddr: event.target.value })} />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    <label>Sorting Facility Location</label>\n                                                    <Input value={this.state.sellerLocation}\n                                                        onChange={event => this.setState({ sellerLocation: event.target.value })} />\n                                                </Form.Field>\n\n                                                <Form.Field >\n                                                    <label>Sorting Machines Address</label>\n                                                    <input type=\"number\" name=\"quantity\" min=\"1\" max=\"7\" placeholder=\"Select number of machines in facility\" onChange={(value) => this.handleOnChange(value)} />\n                                                    <div>\n                                                        {this.renderInputs(this.state.inputSize)}\n                                                    </div>\n                                                </Form.Field>\n\n                                                <Message error header=\"Error!\" content={this.state.errorMessage2} />\n\n                                                <Message success header=\"Success!\" content=\"Seller registered successfully!\" />\n\n                                                <Button loading={this.state.loading} type='submit'>Register</Button>\n                                            </Form>\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                </Grid>\n                            </Container>\n                        </div>\n\n                    )}\n\n\n                </div>\n            </Layout >\n        );\n    }\n\n}\n\n//At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \nexport default registrationPage; "]},"metadata":{},"sourceType":"module"}