{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Statistic, Icon } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport registerContract from '../../ethereum/register';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport Layout from '../../components/Layout';\n\nclass startAuction extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      //open is T, render statsictc \n      //open is F, render create bale info\n      const accounts = await web3.eth.getAccounts();\n      const plasticBaleSC = plasticBaleContract(this.props.address);\n      var isOpen = false;\n      var biddersnumber = 0;\n      var highestbid = 0;\n      var closingTime = 0;\n      plasticBaleSC.getPastEvents(\"allEvents\", {\n        fromBlock: 0,\n        toBlock: 'latest'\n      }, (error, events) => {\n        console.log(events);\n\n        const myfunction = item => {\n          if (item.event === 'auctionStarted' && this.props.address === item.returnValues['baleAddress']) {\n            isOpen = true;\n            highestbid = item.returnValues['startingAmount'];\n            closingTime = item.returnValues['closingTime'];\n          } else if (item.event === 'bidderRegistered') {\n            biddersnumber++;\n          } else if (item.event === 'bidderExited') {\n            biddersnumber--;\n          } else if (item.event === 'bidPlaced') {\n            highestbid = item.returnValues['amount'];\n            this.findHighestBidder(item.returnValues['biddeAddress']);\n          }\n        };\n\n        events.forEach(myfunction);\n        this.setState({\n          open: isOpen,\n          totalBidders: biddersnumber,\n          highestBid: highestbid\n        });\n      });\n    });\n\n    _defineProperty(this, \"findHighestBidder\", async address => {\n      const accounts = await web3.eth.getAccounts();\n      await registerContract.methods.getBuyerDetails(address).call(function (error, result) {\n        this.setState({\n          highestBidder: result[1],\n          highestBidderAddress: result[0]\n        });\n      }.bind(this));\n    });\n\n    _defineProperty(this, \"onStartAuction\", async event => {\n      event.preventDefault(); //web3.eth.handleRevert = true;\n      //1. Extract time from date\n      //2. Conver to Milliseconds\n\n      let closingTime = Math.ceil(this.state.startDate.getTime() / 1000);\n      console.log(closingTime);\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts(); //Create new instance of plastic bale SC that has been deployed \n\n        const plasticBaleSC = plasticBaleContract(this.props.address);\n        await plasticBaleSC.methods.startAuction(closingTime, this.state.startingPrice).send({\n          from: accounts[0]\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n        this.setState({\n          hasError: false\n        });\n      } // if errorMsg is empty, registration is successful\n\n\n      if (!this.state.errorMessage) this.setState({\n        hasNoError: true\n      });\n      this.setState({\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"endAuction\", async () => {});\n\n    this.state = {\n      startingPrice: '',\n      errorMessage: '',\n      hasNoError: false,\n      startDate: new Date(),\n      registrationSCAddr: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n      open: false,\n      totalBidders: 0,\n      highestBid: 0,\n      highestBidder: 'No bids placed',\n      highestBidderAddress: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  static async getInitialProps(props) {\n    //fetches address of the bottle from the URL\n    const {\n      address\n    } = props.query;\n    return {\n      address\n    };\n  }\n\n  handleChange(date) {\n    this.setState({\n      startDate: date\n    });\n    console.log(date);\n  }\n\n  render() {\n    const {\n      open\n    } = this.state;\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }), open && __jsx(\"div\", {\n      className: \"statistic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, \"Live Auction\"), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, \" Plastic Bale being auctioned: \", this.props.address, \" \"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      className: \"AuctionContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, __jsx(Statistic.Group, {\n      widths: \"three\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }, __jsx(Statistic, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    }, __jsx(Statistic.Value, {\n      text: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 37\n      }\n    }, this.state.highestBid, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 41\n      }\n    }), \"Wei\"), __jsx(Statistic.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 37\n      }\n    }, \"Highest Bid\")), __jsx(Statistic, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }, __jsx(Statistic.Value, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 37\n      }\n    }, __jsx(Icon, {\n      name: \"users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 41\n      }\n    }), \" \", this.state.totalBidders), __jsx(Statistic.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }\n    }, \"Total Bidders\")), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }\n    }), __jsx(Statistic, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 33\n      }\n    }, __jsx(Statistic.Value, {\n      text: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 37\n      }\n    }, __jsx(Icon, {\n      name: \"user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 41\n      }\n    }), \" \", this.state.highestBidder), __jsx(Statistic.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 37\n      }\n    }, \"Highest Bidder\"))))), !open && __jsx(\"div\", {\n      className: \"setAuction\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, \"Set Bale's Auction Parameters: \"), __jsx(Form, {\n      onSubmit: this.onStartAuction,\n      error: !!this.state.errorMessage,\n      success: this.state.hasNoError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, __jsx(Form.Field, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 29\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }, \"Auction Closing Date and Time\"), __jsx(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.handleChange,\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 20,\n      timeCaption: \"time\",\n      dateFormat: \"MM/dd/yyyy h:mm aa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    })), __jsx(Form.Field, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 29\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 33\n      }\n    }, \"Starting Price\"), __jsx(Input, {\n      value: this.state.startingPrice,\n      label: {\n        basic: true,\n        content: 'Wei'\n      },\n      labelPosition: \"right\",\n      onChange: event => this.setState({\n        startingPrice: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 33\n      }\n    })), __jsx(Message, {\n      error: true,\n      header: \"Error!\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 29\n      }\n    }), __jsx(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Auction is Open!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 29\n      }\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 29\n      }\n    }, \"Start Auction\"))));\n  }\n\n}\n\nexport default startAuction;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js"],"names":["React","Component","Form","Button","Input","Message","Statistic","Icon","DatePicker","web3","registerContract","plasticBaleContract","Layout","startAuction","constructor","props","accounts","eth","getAccounts","plasticBaleSC","address","isOpen","biddersnumber","highestbid","closingTime","getPastEvents","fromBlock","toBlock","error","events","console","log","myfunction","item","event","returnValues","findHighestBidder","forEach","setState","open","totalBidders","highestBid","methods","getBuyerDetails","call","result","highestBidder","highestBidderAddress","bind","preventDefault","Math","ceil","state","startDate","getTime","loading","errorMessage","startingPrice","send","from","err","message","hasError","hasNoError","Date","registrationSCAddr","handleChange","getInitialProps","query","date","render","onStartAuction","basic","content","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Statistic, Icon } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport registerContract from '../../ethereum/register';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport Layout from '../../components/Layout';\n\nclass startAuction extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            startingPrice: '',\n            errorMessage: '',\n            hasNoError: false,\n            startDate: new Date(),\n            registrationSCAddr: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n            open: false,\n            totalBidders: 0,\n            highestBid: 0,\n            highestBidder: 'No bids placed',\n            highestBidderAddress: '',\n\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    static async getInitialProps(props) {\n\n        //fetches address of the bottle from the URL\n        const { address } = props.query;\n\n        return { address };\n    }\n\n    handleChange(date) {\n        this.setState({\n            startDate: date\n        });\n        console.log(date);\n    }\n\n\n    componentDidMount = async () => {\n        //open is T, render statsictc \n        //open is F, render create bale info\n\n        const accounts = await web3.eth.getAccounts();\n        const plasticBaleSC = plasticBaleContract(this.props.address);\n\n        var isOpen = false;\n        var biddersnumber = 0;\n        var highestbid = 0;\n        var closingTime=0;\n\n        plasticBaleSC.getPastEvents(\"allEvents\", { fromBlock: 0, toBlock: 'latest' }, (error, events) => {\n            console.log(events);\n\n            const myfunction = (item) => {\n\n                if (item.event === 'auctionStarted' && this.props.address === item.returnValues['baleAddress']) {\n                    isOpen = true;\n                    highestbid = item.returnValues['startingAmount'];\n                    closingTime = item.returnValues['closingTime'];\n\n                } else if (item.event === 'bidderRegistered') {\n                    biddersnumber++;\n\n                } else if (item.event === 'bidderExited') {\n                    biddersnumber--;\n\n                } else if (item.event === 'bidPlaced') {\n                    highestbid = item.returnValues['amount'];\n                    this.findHighestBidder(item.returnValues['biddeAddress']);\n\n                }\n\n            };\n\n            events.forEach(myfunction);\n\n            this.setState({\n                open: isOpen,\n                totalBidders: biddersnumber,\n                highestBid: highestbid\n            });\n\n        });\n\n    };\n\n\n\n    findHighestBidder = async (address) => {\n\n        const accounts = await web3.eth.getAccounts();\n        await registerContract.methods\n            .getBuyerDetails(address).call(function (error, result) {\n                this.setState({\n                    highestBidder: result[1],\n                    highestBidderAddress: result[0],\n                });\n\n            }.bind(this));\n\n    };\n\n\n\n\n    onStartAuction = async (event) => {\n        event.preventDefault();\n\n        //web3.eth.handleRevert = true;\n\n        //1. Extract time from date\n        //2. Conver to Milliseconds\n        let closingTime = Math.ceil((this.state.startDate).getTime() / 1000);\n        console.log(closingTime);\n\n        this.setState({ loading: true, errorMessage: '' });\n\n\n        try {\n\n            const accounts = await web3.eth.getAccounts();\n            //Create new instance of plastic bale SC that has been deployed \n            const plasticBaleSC = plasticBaleContract(this.props.address);\n            await plasticBaleSC.methods.startAuction(closingTime, this.state.startingPrice).send({ from: accounts[0] });\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n            this.setState({ hasError: false });\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage)\n            this.setState({ hasNoError: true });\n\n        this.setState({ loading: false });\n\n    };\n\n\n    endAuction = async () => {\n\n        \n    }\n\n\n\n    render() {\n\n        const { open } = this.state;\n\n        return (\n            <Layout>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                { open && (\n\n                    <div className='statistic'>\n\n                        <h1>Live Auction</h1>\n                        <h2> Plastic Bale being auctioned: {this.props.address} </h2>\n                        <br />\n\n                        <div className='AuctionContainer'>\n\n                            <Statistic.Group widths='three'>\n                                <Statistic>\n                                    <Statistic.Value text>\n                                        {this.state.highestBid}\n                                        <br />\n                            Wei\n                            </Statistic.Value>\n                                    <Statistic.Label>Highest Bid</Statistic.Label>\n                                </Statistic>\n\n                                <Statistic>\n                                    <Statistic.Value>\n                                        <Icon name='users' /> {this.state.totalBidders}\n                                    </Statistic.Value>\n                                    <Statistic.Label>Total Bidders</Statistic.Label>\n                                </Statistic>\n\n                                <br />\n\n                                <Statistic>\n                                    <Statistic.Value text>\n                                        <Icon name='user' /> {this.state.highestBidder}\n                                        {/*this.state.highestBidderAddress*/}\n                                    </Statistic.Value>\n                                    <Statistic.Label>Highest Bidder</Statistic.Label>\n                                </Statistic>\n                            </Statistic.Group>\n\n                        </div>\n\n                    </div>\n\n                )}\n\n\n\n                { !open && (\n\n                    <div className='setAuction'>\n\n                        <h1>Set Bale's Auction Parameters: </h1>\n\n                        <Form onSubmit={this.onStartAuction} error={!!this.state.errorMessage} success={this.state.hasNoError}>\n                            <Form.Field width={6}>\n                                <label >Auction Closing Date and Time</label>\n                                <DatePicker\n                                    selected={this.state.startDate}\n                                    onChange={this.handleChange}\n                                    showTimeSelect\n                                    timeFormat=\"HH:mm\"\n                                    timeIntervals={20}\n                                    timeCaption=\"time\"\n                                    dateFormat=\"MM/dd/yyyy h:mm aa\"\n                                />\n                            </Form.Field>\n\n                            <Form.Field width={4}>\n                                <label>Starting Price</label>\n                                <Input value={this.state.startingPrice}\n                                    label={{ basic: true, content: 'Wei' }}\n                                    labelPosition='right'\n                                    onChange={event => this.setState({ startingPrice: event.target.value })} />\n                            </Form.Field>\n\n                            <Message error header=\"Error!\" content={this.state.errorMessage} />\n\n\n                            <Message success header=\"Success!\" content=\"Auction is Open!\" />\n\n\n                            <Button loading={this.state.loading} type='submit'>Start Auction</Button>\n                        </Form>\n\n                    </div>\n                )}\n\n\n\n            </Layout>\n        );\n    }\n\n}\n\nexport default startAuction; "]},"metadata":{},"sourceType":"module"}