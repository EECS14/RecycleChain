{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/emulators.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\nNote: Seller address is hardcoded in the sorting machine\n*/\nimport React, { Component } from 'react';\nimport { Menu, Button } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nconst QRReader = dynamic(() => import('react-qr-reader'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-qr-reader')],\n    modules: ['react-qr-reader']\n  }\n});\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking';\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleScan\", async data => {\n      if (data) {\n        this.setState({\n          result: data\n        });\n        this.sortBottle();\n      }\n    });\n\n    _defineProperty(this, \"handleError\", err => {\n      console.error(err);\n    });\n\n    _defineProperty(this, \"onScan\", async event => {\n      event.preventDefault();\n\n      if (this.state.qr === false) {\n        this.setState({\n          qr: true\n        });\n      } else {\n        this.setState({\n          qr: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"sortBottle\", async () => {\n      const accounts = await web3.eth.getAccounts(); //Add try and catch block here \n\n      await trackingContract.methods.updateStatusSorted(this.state.registerSCAddress, this.state.sellerAddress, this.state.result).send({\n        from: accounts[0]\n      });\n    });\n\n    this.state = {\n      productionMachine: false,\n      sortingMachine: false,\n      result: '',\n      qr: false,\n      sellerAddress: '0x334b12DF37984A449b57BAE3F4120f70be177be0',\n      registerSCAddress: '0x7126ec4f68added009015a1f5ac718c4896faa2e'\n    };\n  } // QR reader functions \n\n\n  render() {\n    const {\n      productionMachine,\n      sortingMachine,\n      qr\n    } = this.state;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"Emulators Page\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \" This page is to emulate the functionality of machines participating in the system \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 103\n      }\n    }), \"Choose which machine you would like to emulate\"), __jsx(Menu, {\n      widths: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, __jsx(Menu.Item, {\n      name: \"ProductionLineMachine\",\n      onClick: () => this.setState({\n        productionMachine: true,\n        sortingMachine: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \" Production Line Machine\"), __jsx(Menu.Item, {\n      name: \"SortingMachine\",\n      onClick: () => this.setState({\n        sortingMachine: true,\n        productionMachine: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \" Sorting Machine\")), productionMachine && __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \" Put the code here!!\"), sortingMachine && __jsx(\"div\", {\n      className: \"Scanner\",\n      style: {\n        'width': '40%',\n        'margin-left': 'auto',\n        'margin-right': 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 31\n      }\n    }), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \"Scan Plastic Bottle \"), __jsx(Button, {\n      className: \"QrReader\",\n      style: {\n        'vertical-align': 'middle'\n      },\n      onClick: this.onScan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \" Scan QR Code\"), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \" \", this.state.qr === true ? __jsx(QRReader, {\n      delay: 300,\n      onError: this.handleError,\n      onScan: this.handleScan,\n      style: {\n        width: \"60%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 58\n      }\n    }) : '', \" \")));\n  }\n\n} //At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \n\n\nexport default index;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/emulators.js"],"names":["React","Component","Menu","Button","dynamic","QRReader","ssr","web3","trackingContract","index","constructor","props","data","setState","result","sortBottle","err","console","error","event","preventDefault","state","qr","accounts","eth","getAccounts","methods","updateStatusSorted","registerSCAddress","sellerAddress","send","from","productionMachine","sortingMachine","render","onScan","handleError","handleScan","width"],"mappings":"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","sourcesContent":["/*\nNote: Seller address is hardcoded in the sorting machine\n*/\nimport React, { Component } from 'react';\nimport { Menu, Button } from 'semantic-ui-react';\nimport dynamic from 'next/dynamic';\nconst QRReader = dynamic(() => import('react-qr-reader'), { ssr: false });\nimport web3 from '../ethereum/web3';\nimport trackingContract from '../ethereum/tracking'; \n\nclass index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            productionMachine: false,\n            sortingMachine: false,\n            result: '',\n            qr: false, \n            sellerAddress:'0x334b12DF37984A449b57BAE3F4120f70be177be0', \n            registerSCAddress:'0x7126ec4f68added009015a1f5ac718c4896faa2e'\n        };\n    }\n\n    // QR reader functions \n    handleScan = async (data) => {\n        if (data) {\n            this.setState({ result: data });\n            this.sortBottle();\n    \n        }\n    }\n\n    handleError = err => {\n        console.error(err)\n    }\n\n    onScan = async (event) => {\n        event.preventDefault();\n        if (this.state.qr === false) {\n            this.setState({ qr: true });\n        }\n        else {\n            this.setState({ qr: false });\n        }\n    };\n\n    // Log bottle as disposed \n    sortBottle = async () => {\n\n        const accounts = await web3.eth.getAccounts();\n\n        //Add try and catch block here \n        await trackingContract.methods\n            .updateStatusSorted(this.state.registerSCAddress,this.state.sellerAddress,this.state.result)\n            .send({ from: accounts[0] });\n\n    };\n\n\n    render() {\n\n        const { productionMachine, sortingMachine, qr} = this.state\n    \n        return (\n            <div>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                <h1>Emulators Page</h1>\n                <p> This page is to emulate the functionality of machines participating in the system <br />\n                Choose which machine you would like to emulate\n            </p>\n\n                <Menu widths={3}>\n                    <Menu.Item name='ProductionLineMachine' onClick={() => this.setState({ productionMachine: true, sortingMachine: false })} > Production Line Machine</Menu.Item>\n                    <Menu.Item name='SortingMachine' onClick={() => this.setState({ sortingMachine: true, productionMachine: false })} > Sorting Machine</Menu.Item>\n                </Menu>\n\n                {productionMachine && (\n\n                    <h2> Put the code here!!</h2>\n                )}\n\n                {sortingMachine && (\n\n                    \n                    <div className=\"Scanner\" style={{ 'width': '40%', 'margin-left': 'auto', 'margin-right': 'auto' }}>\n                        <br/> <br/>\n                    <h2>Scan Plastic Bottle </h2>\n                    <Button className=\"QrReader\" style={{ 'vertical-align': 'middle' }} onClick={this.onScan} > Scan QR Code</Button>\n                        <div> {this.state.qr === true ? (<QRReader\n                            delay={300}\n                            onError={this.handleError}\n                            onScan={this.handleScan}\n                            style={{ width: \"60%\" }}\n                        />\n                        )\n                         : ''} </div>\n                    \n\n                </div>\n                    \n                )}\n\n\n            </div>\n\n        );\n    }\n\n}\n\n//At the end of each page, a component is expected to be returned \n// If not, Next.js throws an error \nexport default index; "]},"metadata":{},"sourceType":"module"}