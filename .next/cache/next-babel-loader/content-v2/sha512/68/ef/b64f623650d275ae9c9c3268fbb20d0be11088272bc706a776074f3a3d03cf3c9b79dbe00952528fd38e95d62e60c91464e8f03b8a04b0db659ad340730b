{"ast":null,"code":"var _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Label } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport Layout from '../../components/Layout';\n\nclass startAuction extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      //open is T, render statsictc \n      //open is F, render create bale info\n      const accounts = await web3.eth.getAccounts();\n      const plasticBaleSC = plasticBaleContract(this.props.address);\n      var isOpen;\n      plasticBaleSC.getPastEvents(\"allEvents\", {\n        fromBlock: 0,\n        toBlock: 'latest'\n      }, (error, events) => {\n        console.log(events);\n\n        const myfunction = item => {\n          if (item.event === 'auctionStarted') {\n            if (this.props.address === item.returnValues['baleAddress']) {}\n          }\n        };\n\n        events.forEach(myfunction);\n        this.setState({\n          totalBidders: biddersnumber,\n          highestBid: highestbid\n        });\n      });\n    });\n\n    _defineProperty(this, \"onStartAuction\", async event => {\n      event.preventDefault(); //web3.eth.handleRevert = true;\n      //1. Extract time from date\n      //2. Conver to Milliseconds\n\n      let closingTime = Math.ceil(this.state.startDate.getTime() / 1000);\n      console.log(closingTime);\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts(); //Create new instance of plastic bale SC that has been deployed \n\n        const plasticBaleSC = plasticBaleContract(this.props.address);\n        await plasticBaleSC.methods.startAuction(closingTime, this.state.startingPrice).send({\n          from: accounts[0]\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n        this.setState({\n          hasError: false\n        });\n      } // if errorMsg is empty, registration is successful\n\n\n      if (!this.state.errorMessage) this.setState({\n        hasNoError: true\n      });\n      this.setState({\n        loading: false\n      });\n    });\n\n    this.state = {\n      startingPrice: '',\n      errorMessage: '',\n      hasNoError: false,\n      startDate: new Date(),\n      open: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  static async getInitialProps(props) {\n    //fetches address of the bottle from the URL\n    const {\n      address\n    } = props.query;\n    return {\n      address\n    };\n  }\n\n  handleChange(date) {\n    this.setState({\n      startDate: date\n    });\n    console.log(date);\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"Set Bale's Auction Parameters: \"), __jsx(Form, {\n      onSubmit: this.onStartAuction,\n      error: !!this.state.errorMessage,\n      success: this.state.hasNoError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Field, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, \"Auction Closing Date and Time\"), __jsx(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.handleChange,\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 20,\n      timeCaption: \"time\",\n      dateFormat: \"MM/dd/yyyy h:mm aa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    })), __jsx(Form.Field, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, \"Starting Price\"), __jsx(Input, {\n      value: this.state.startingPrice,\n      label: {\n        basic: true,\n        content: 'Wei'\n      },\n      labelPosition: \"right\",\n      onChange: event => this.setState({\n        startingPrice: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    })), __jsx(Message, {\n      error: true,\n      header: \"Error!\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }), __jsx(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Auction is Open!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, \"Start Auction\")));\n  }\n\n}\n\nexport default startAuction;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js"],"names":["React","Component","Form","Button","Input","Message","Label","DatePicker","web3","plasticBaleContract","Layout","startAuction","constructor","props","accounts","eth","getAccounts","plasticBaleSC","address","isOpen","getPastEvents","fromBlock","toBlock","error","events","console","log","myfunction","item","event","returnValues","forEach","setState","totalBidders","biddersnumber","highestBid","highestbid","preventDefault","closingTime","Math","ceil","state","startDate","getTime","loading","errorMessage","methods","startingPrice","send","from","err","message","hasError","hasNoError","Date","open","handleChange","bind","getInitialProps","query","date","render","onStartAuction","basic","content","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Label } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport Layout from '../../components/Layout';\n\nclass startAuction extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            startingPrice: '',\n            errorMessage: '',\n            hasNoError: false,\n            startDate: new Date(),\n            open: false\n\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    static async getInitialProps(props) {\n\n        //fetches address of the bottle from the URL\n        const { address } = props.query;\n\n        return { address };\n    }\n\n    handleChange(date) {\n        this.setState({\n            startDate: date\n        });\n        console.log(date);\n    }\n\n\n    componentDidMount = async () => {\n        //open is T, render statsictc \n        //open is F, render create bale info\n\n        const accounts = await web3.eth.getAccounts();\n        const plasticBaleSC = plasticBaleContract(this.props.address);\n\n        var isOpen\n\n        plasticBaleSC.getPastEvents(\"allEvents\", { fromBlock: 0, toBlock: 'latest' }, (error, events) => {\n            console.log(events);\n\n            const myfunction = (item) => {\n\n                if (item.event === 'auctionStarted') {\n                    if(this.props.address === item.returnValues['baleAddress']){\n\n                    }\n                       \n                } \n\n            };\n\n            events.forEach(myfunction);\n\n            this.setState({\n                totalBidders: biddersnumber,\n                highestBid: highestbid\n            });\n\n\n        });\n\n\n\n\n    };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    onStartAuction = async (event) => {\n        event.preventDefault();\n        \n        //web3.eth.handleRevert = true;\n        \n        //1. Extract time from date\n        //2. Conver to Milliseconds\n        let closingTime = Math.ceil((this.state.startDate).getTime()/1000);\n        console.log(closingTime);\n        \n        this.setState({loading: true, errorMessage: ''});\n\n    \n        try {\n\n            const accounts = await web3.eth.getAccounts();\n            //Create new instance of plastic bale SC that has been deployed \n            const plasticBaleSC = plasticBaleContract(this.props.address); \n            await plasticBaleSC.methods.startAuction(closingTime, this.state.startingPrice).send({ from: accounts[0] });\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n            this.setState({ hasError: false });\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage)\n            this.setState({ hasNoError: true });\n\n            this.setState({loading: false}); \n\n    };\n\n    \n\n    render() {\n\n        return (\n            <Layout>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n\n                <h1>Set Bale's Auction Parameters: </h1>\n\n                <Form onSubmit={this.onStartAuction} error={!!this.state.errorMessage} success={this.state.hasNoError}>\n                    <Form.Field width={6}>\n                        <label >Auction Closing Date and Time</label>\n                        <DatePicker\n                            selected={ this.state.startDate }\n                            onChange={this.handleChange}\n                            showTimeSelect\n                            timeFormat=\"HH:mm\"\n                            timeIntervals={20}\n                            timeCaption=\"time\"\n                            dateFormat=\"MM/dd/yyyy h:mm aa\"\n                        /> \n                    </Form.Field>\n\n                    <Form.Field width={4}>\n                        <label>Starting Price</label>\n                        <Input value={this.state.startingPrice}\n                        label={{ basic: true, content: 'Wei' }}\n                        labelPosition='right'\n                        onChange={event => this.setState({ startingPrice: event.target.value })}/> \n                    </Form.Field>\n                    \n                    <Message error header=\"Error!\" content={this.state.errorMessage} />\n\n\n                    <Message success header=\"Success!\" content=\"Auction is Open!\" />\n\n\n                    <Button loading={this.state.loading} type='submit'>Start Auction</Button>\n                </Form>\n\n\n\n\n            </Layout>\n        );\n    }\n\n}\n\nexport default startAuction; "]},"metadata":{},"sourceType":"module"}