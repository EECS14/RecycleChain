{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Statistic, Icon } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport registerContract from '../../ethereum/register';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport Layout from '../../components/Layout';\n\nvar startAuction = /*#__PURE__*/function (_Component) {\n  _inherits(startAuction, _Component);\n\n  var _super = _createSuper(startAuction);\n\n  function startAuction(props) {\n    var _this;\n\n    _classCallCheck(this, startAuction);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts, plasticBaleSC, isOpen, biddersnumber, highestbid, closingTime;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context.sent;\n              plasticBaleSC = plasticBaleContract(_this.props.address); //console.log(this.props.address);\n\n              isOpen = false;\n              biddersnumber = 0;\n              highestbid = 0;\n              closingTime = 0;\n              plasticBaleSC.getPastEvents(\"allEvents\", {\n                fromBlock: 0,\n                toBlock: 'latest'\n              }, function (error, events) {\n                console.log(events);\n\n                var myfunction = function myfunction(item) {\n                  if (item.event === 'auctionStarted' && _this.props.address === item.returnValues['baleAddress']) {\n                    isOpen = true;\n                    highestbid = item.returnValues['startingAmount'];\n                    closingTime = item.returnValues['closingTime'];\n                    console.log(closingTime);\n                  } else if (item.event === 'bidderRegistered') {\n                    biddersnumber++;\n                  } else if (item.event === 'bidderExited') {\n                    biddersnumber--;\n                  } else if (item.event === 'bidPlaced') {\n                    highestbid = item.returnValues['amount'];\n\n                    _this.findHighestBidder(item.returnValues['biddeAddress']);\n                  }\n                };\n\n                events.forEach(myfunction);\n\n                _this.setState({\n                  open: isOpen,\n                  totalBidders: biddersnumber,\n                  highestBid: highestbid\n                });\n              });\n              /*\n              const currentTime = Math.ceil(new Date().getTime() / 1000);\n              console.log(currentTime);\n              if (closingTime < currentTime) {\n                  this.endAuction();\n              } */\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"findHighestBidder\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(address) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context2.sent;\n                _context2.next = 5;\n                return registerContract.methods.getBuyerDetails(address).call(function (error, result) {\n                  this.setState({\n                    highestBidder: result[1],\n                    highestBidderAddress: result[0]\n                  });\n                }.bind(_assertThisInitialized(_this)));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onStartAuction\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        var closingTime, accounts, plasticBaleSC;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault(); //web3.eth.handleRevert = true;\n                //1. Extract time from date\n                //2. Conver to Milliseconds\n\n                closingTime = Math.ceil(_this.state.startDate.getTime() / 1000);\n                console.log(closingTime);\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context3.prev = 4;\n                _context3.next = 7;\n                return web3.eth.getAccounts();\n\n              case 7:\n                accounts = _context3.sent;\n                plasticBaleSC = plasticBaleContract(_this.props.address);\n                _context3.next = 11;\n                return plasticBaleSC.methods.startAuction(closingTime, _this.state.startingPrice).send({\n                  from: accounts[0]\n                });\n\n              case 11:\n                _this.setState({\n                  open: true\n                });\n\n                _context3.next = 18;\n                break;\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](4);\n\n                _this.setState({\n                  errorMessage: _context3.t0.message\n                });\n\n                _this.setState({\n                  hasError: false\n                });\n\n              case 18:\n                // if errorMsg is empty, registration is successful\n                if (!_this.state.errorMessage) _this.setState({\n                  hasNoError: true\n                });\n\n                _this.setState({\n                  loading: false\n                });\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[4, 14]]);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onEndAuction\", /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n        var accounts, plasticBaleSC;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  loading: true\n                });\n\n                _context4.prev = 2;\n                _context4.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context4.sent;\n                plasticBaleSC = plasticBaleContract(_this.props.address);\n                _context4.next = 9;\n                return plasticBaleSC.methods.endAuction().send({\n                  from: accounts[0],\n                  gas: 250983\n                });\n\n              case 9:\n                _this.setState({\n                  notOver: false\n                });\n\n                _context4.next = 15;\n                break;\n\n              case 12:\n                _context4.prev = 12;\n                _context4.t0 = _context4[\"catch\"](2);\n                // REVERT REASON IS ALMOST SHOWN HERE\n                console.log(_context4.t0);\n\n              case 15:\n                _this.setState({\n                  loading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[2, 12]]);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      startingPrice: '',\n      errorMessage: '',\n      hasNoError: false,\n      startDate: new Date(),\n      registrationSCAddr: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n      open: false,\n      totalBidders: 0,\n      highestBid: 0,\n      highestBidder: 'No bids placed',\n      highestBidderAddress: '',\n      notOver: true,\n      loading: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(startAuction, [{\n    key: \"handleChange\",\n    value: function handleChange(date) {\n      this.setState({\n        startDate: date\n      });\n      console.log(date);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          open = _this$state.open,\n          notOver = _this$state.notOver;\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }), open && notOver && __jsx(\"div\", {\n        className: \"statistic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }\n      }, \"Live Auction\"), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }\n      }, \" Plastic Bale being auctioned: \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 60\n        }\n      }), \" \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 66\n        }\n      }), \" \", this.props.address, \" \"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }\n      }), __jsx(\"div\", {\n        className: \"AuctionContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      }, __jsx(Statistic.Group, {\n        widths: \"three\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }\n      }, __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 33\n        }\n      }, __jsx(Statistic.Value, {\n        text: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 37\n        }\n      }, this.state.highestBid, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 41\n        }\n      }), \"Wei\"), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 37\n        }\n      }, \"Highest Bid\")), __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 33\n        }\n      }, __jsx(Statistic.Value, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 37\n        }\n      }, __jsx(Icon, {\n        name: \"users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 41\n        }\n      }), \" \", this.state.totalBidders), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 37\n        }\n      }, \"Total Bidders\")), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 33\n        }\n      }), __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 33\n        }\n      }, __jsx(Statistic.Value, {\n        text: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 37\n        }\n      }, __jsx(Icon, {\n        name: \"user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 41\n        }\n      }), \" \", this.state.highestBidder), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 37\n        }\n      }, \"Highest Bidder\"))))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        onClick: this.onEndAuction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }, \"Close Auction \"), !open && __jsx(\"div\", {\n        className: \"setAuction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }\n      }, \"Set Bale's Auction Parameters: \"), __jsx(Form, {\n        onSubmit: this.onStartAuction,\n        error: !!this.state.errorMessage,\n        success: this.state.hasNoError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }\n      }, __jsx(Form.Field, {\n        width: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 29\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 33\n        }\n      }, \"Auction Closing Date and Time\"), __jsx(DatePicker, {\n        selected: this.state.startDate,\n        onChange: this.handleChange,\n        showTimeSelect: true,\n        timeFormat: \"HH:mm\",\n        timeIntervals: 20,\n        timeCaption: \"time\",\n        dateFormat: \"MM/dd/yyyy h:mm aa\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 33\n        }\n      })), __jsx(Form.Field, {\n        width: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 29\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 33\n        }\n      }, \"Starting Price\"), __jsx(Input, {\n        value: this.state.startingPrice,\n        label: {\n          basic: true,\n          content: 'Wei'\n        },\n        labelPosition: \"right\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            startingPrice: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 33\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Error!\",\n        content: this.state.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 29\n        }\n      }), __jsx(Message, {\n        success: true,\n        header: \"Success!\",\n        content: \"Auction is Open!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 29\n        }\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 29\n        }\n      }, \"Start Auction\"))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(props) {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                //fetches address of the bottle from the URL\n                address = props.query.address;\n                return _context5.abrupt(\"return\", {\n                  address: address\n                });\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getInitialProps(_x4) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return startAuction;\n}(Component);\n\nexport default startAuction;","map":{"version":3,"sources":["/Users/eimanalwahhabi/Desktop/RecycleChain/pages/auctions/startAuction.js"],"names":["React","Component","Form","Button","Input","Message","Statistic","Icon","DatePicker","web3","registerContract","plasticBaleContract","Layout","startAuction","props","eth","getAccounts","accounts","plasticBaleSC","address","isOpen","biddersnumber","highestbid","closingTime","getPastEvents","fromBlock","toBlock","error","events","console","log","myfunction","item","event","returnValues","findHighestBidder","forEach","setState","open","totalBidders","highestBid","methods","getBuyerDetails","call","result","highestBidder","highestBidderAddress","bind","preventDefault","Math","ceil","state","startDate","getTime","loading","errorMessage","startingPrice","send","from","message","hasError","hasNoError","endAuction","gas","notOver","Date","registrationSCAddr","handleChange","date","onEndAuction","onStartAuction","basic","content","target","value","query"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Statistic, Icon } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport web3 from '../../ethereum/web3';\nimport registerContract from '../../ethereum/register';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport Layout from '../../components/Layout';\n\nclass startAuction extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            startingPrice: '',\n            errorMessage: '',\n            hasNoError: false,\n            startDate: new Date(),\n            registrationSCAddr: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n            open: false,\n            totalBidders: 0,\n            highestBid: 0,\n            highestBidder: 'No bids placed',\n            highestBidderAddress: '',\n            notOver: true,\n            loading: false\n\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    static async getInitialProps(props) {\n\n        //fetches address of the bottle from the URL\n        const { address } = props.query;\n\n        return { address };\n    }\n\n    handleChange(date) {\n        this.setState({\n            startDate: date\n        });\n        console.log(date);\n    }\n\n\n    componentDidMount = async () => {\n        //open is T, render statsictc \n        //open is F, render create bale info\n\n        const accounts = await web3.eth.getAccounts();\n        const plasticBaleSC = plasticBaleContract(this.props.address);\n        //console.log(this.props.address);\n\n        var isOpen = false;\n        var biddersnumber = 0;\n        var highestbid = 0;\n        var closingTime = 0;\n\n        plasticBaleSC.getPastEvents(\"allEvents\", { fromBlock: 0, toBlock: 'latest' }, (error, events) => {\n            console.log(events);\n\n            const myfunction = (item) => {\n\n                if (item.event === 'auctionStarted' && this.props.address === item.returnValues['baleAddress']) {\n                    isOpen = true;\n                    highestbid = item.returnValues['startingAmount'];\n                    closingTime = item.returnValues['closingTime'];\n                    console.log(closingTime);\n\n                } else if (item.event === 'bidderRegistered') {\n                    biddersnumber++;\n\n                } else if (item.event === 'bidderExited') {\n                    biddersnumber--;\n\n                } else if (item.event === 'bidPlaced') {\n                    highestbid = item.returnValues['amount'];\n                    this.findHighestBidder(item.returnValues['biddeAddress']);\n\n                }\n\n            };\n\n            events.forEach(myfunction);\n\n            this.setState({\n                open: isOpen,\n                totalBidders: biddersnumber,\n                highestBid: highestbid\n            });\n\n        });\n\n        /*\n        const currentTime = Math.ceil(new Date().getTime() / 1000);\n        console.log(currentTime);\n        if (closingTime < currentTime) {\n            this.endAuction();\n        } */\n\n    };\n\n\n    findHighestBidder = async (address) => {\n\n        const accounts = await web3.eth.getAccounts();\n        await registerContract.methods\n            .getBuyerDetails(address).call(function (error, result) {\n                this.setState({\n                    highestBidder: result[1],\n                    highestBidderAddress: result[0],\n                });\n\n            }.bind(this));\n\n    };\n\n\n\n\n    onStartAuction = async (event) => {\n        event.preventDefault();\n\n        //web3.eth.handleRevert = true;\n\n        //1. Extract time from date\n        //2. Conver to Milliseconds\n        let closingTime = Math.ceil((this.state.startDate).getTime() / 1000);\n        console.log(closingTime);\n\n        this.setState({ loading: true, errorMessage: '' });\n\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const plasticBaleSC = plasticBaleContract(this.props.address);\n            await plasticBaleSC.methods.startAuction(closingTime, this.state.startingPrice)\n                .send({ from: accounts[0] });\n            this.setState({ open: true });\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n            this.setState({ hasError: false });\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage)\n            this.setState({ hasNoError: true });\n\n        this.setState({ loading: false });\n\n    };\n\n\n    onEndAuction = async (event) => {\n\n        event.preventDefault();\n\n        this.setState({ loading: true });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const plasticBaleSC = plasticBaleContract(this.props.address);  \n            await plasticBaleSC.methods.endAuction().send({ from: accounts[0], gas: 250983});\n            this.setState({ notOver: false });\n\n        } catch (err) {\n            // REVERT REASON IS ALMOST SHOWN HERE\n            console.log(err);\n        }\n\n        this.setState({ loading: false });\n    };\n\n\n\n    render() {\n\n        const { open, notOver } = this.state;\n\n        return (\n            <Layout>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                { open && notOver && (\n\n                    <div className='statistic'>\n\n                        <h1>Live Auction</h1>\n                        <h2> Plastic Bale being auctioned: <br/> <br/> {this.props.address} </h2>\n                        <br />\n                        <br/> \n                        \n                        <div className='AuctionContainer'>\n\n                            <Statistic.Group widths='three'>\n                                <Statistic>\n                                    <Statistic.Value text>\n                                        {this.state.highestBid}\n                                        <br />\n                            Wei\n                            </Statistic.Value>\n                                    <Statistic.Label>Highest Bid</Statistic.Label>\n                                </Statistic>\n\n                                <Statistic>\n                                    <Statistic.Value>\n                                        <Icon name='users' /> {this.state.totalBidders}\n                                    </Statistic.Value>\n                                    <Statistic.Label>Total Bidders</Statistic.Label>\n                                </Statistic>\n\n                                <br />\n\n                                <Statistic>\n                                    <Statistic.Value text>\n                                        <Icon name='user' /> {this.state.highestBidder}\n                                        {/*this.state.highestBidderAddress*/}\n                                    </Statistic.Value>\n                                    <Statistic.Label>Highest Bidder</Statistic.Label>\n                                </Statistic>\n                            </Statistic.Group>\n\n                        </div>\n\n                    </div>\n\n                )}\n\n\n                <br />\n                <br />\n\n                <Button loading={this.state.loading} onClick={this.onEndAuction}>Close Auction </Button>\n\n\n                { !open && (\n\n                    <div className='setAuction'>\n\n                        <h1>Set Bale's Auction Parameters: </h1>\n\n                        <Form onSubmit={this.onStartAuction} error={!!this.state.errorMessage} success={this.state.hasNoError}>\n                            <Form.Field width={6}>\n                                <label >Auction Closing Date and Time</label>\n                                <DatePicker\n                                    selected={this.state.startDate}\n                                    onChange={this.handleChange}\n                                    showTimeSelect\n                                    timeFormat=\"HH:mm\"\n                                    timeIntervals={20}\n                                    timeCaption=\"time\"\n                                    dateFormat=\"MM/dd/yyyy h:mm aa\"\n                                />\n                            </Form.Field>\n\n                            <Form.Field width={4}>\n                                <label>Starting Price</label>\n                                <Input value={this.state.startingPrice}\n                                    label={{ basic: true, content: 'Wei' }}\n                                    labelPosition='right'\n                                    onChange={event => this.setState({ startingPrice: event.target.value })} />\n                            </Form.Field>\n\n                            <Message error header=\"Error!\" content={this.state.errorMessage} />\n\n\n                            <Message success header=\"Success!\" content=\"Auction is Open!\" />\n\n\n                            <Button loading={this.state.loading} type='submit'>Start Auction</Button>\n                        </Form>\n\n                    </div>\n                )}\n\n\n\n            </Layout>\n        );\n    }\n\n}\n\nexport default startAuction; "]},"metadata":{},"sourceType":"module"}