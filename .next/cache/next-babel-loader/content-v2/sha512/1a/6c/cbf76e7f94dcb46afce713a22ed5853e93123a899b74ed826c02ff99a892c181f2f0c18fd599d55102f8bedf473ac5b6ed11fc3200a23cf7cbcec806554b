{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/maithabarsham/Desktop/RecycleChain/RecycleChain/pages/auctions/joinAuction.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Icon, Container, Grid, Statistic } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport registerContract from '../../ethereum/register';\nimport Layout from '../../components/Layout';\nimport dynamic from 'next/dynamic';\nvar DateCountdown = dynamic(_c = function _c() {\n  return import('react-date-countdown-timer');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-date-countdown-timer')];\n    },\n    modules: ['react-date-countdown-timer']\n  }\n});\n_c2 = DateCountdown;\nimport axios from 'axios';\n\nvar joinAuction = /*#__PURE__*/function (_Component) {\n  _inherits(joinAuction, _Component);\n\n  var _super = _createSuper(joinAuction);\n\n  function joinAuction(props) {\n    var _this;\n\n    _classCallCheck(this, joinAuction);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts, plasticBaleSC, biddersnumber, highestbid, isJoin, time;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.getAccounts();\n\n            case 2:\n              accounts = _context.sent;\n              plasticBaleSC = plasticBaleContract(_this.props.address);\n              biddersnumber = 0;\n              highestbid = 0;\n              isJoin = false;\n              time = ''; //closing time\n\n              plasticBaleSC.getPastEvents(\"allEvents\", {\n                fromBlock: 0,\n                toBlock: 'latest'\n              }, function (error, events) {\n                var myfunction = function myfunction(item) {\n                  if (item.event === 'bidderRegistered') {\n                    biddersnumber++;\n                    item.returnValues['bidderAddress'] === accounts[0] ? isJoin = true : null;\n                  } else if (item.event === 'auctionStarted') {\n                    highestbid = item.returnValues['startingAmount']; //1. Get closing time from event\n\n                    time = new Date(item.returnValues['closingTime'] * 1000);\n                    console.log(time);\n\n                    _this.initializeClock('clockdiv', time);\n                  } else if (item.event === 'bidderExited') {\n                    //console.log(item);\n                    item.returnValues['bidderAddress'] === accounts[0] ? isJoin = false : null;\n                    biddersnumber--;\n                  } else if (item.event === 'bidPlaced') {\n                    highestbid = item.returnValues['amount'];\n\n                    _this.findHighestBidder(item.returnValues['biddeAddress']);\n                  }\n                };\n\n                events.forEach(myfunction);\n\n                _this.setState({\n                  totalBidders: biddersnumber,\n                  highestBid: highestbid,\n                  join: isJoin,\n                  closingTime: time\n                });\n              });\n              axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=ETH&tsyms=USD').then(function (res) {\n                var cryptos = res.data;\n                console.log(cryptos);\n\n                _this.setState({\n                  cryptos: cryptos\n                });\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"getTimeRemaining\", function (endtime) {\n      var total = Date.parse(endtime) - Date.parse(new Date());\n      var seconds = Math.floor(total / 1000 % 60);\n      var minutes = Math.floor(total / 1000 / 60 % 60);\n      var hours = Math.floor(total / (1000 * 60 * 60) % 24);\n      var days = Math.floor(total / (1000 * 60 * 60 * 24));\n      return {\n        total: total,\n        days: days,\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onJoinAuction\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var accounts, _accounts, plasticBaleSC;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context2.prev = 5;\n                _context2.next = 8;\n                return web3.eth.getAccounts();\n\n              case 8:\n                _accounts = _context2.sent;\n                plasticBaleSC = plasticBaleContract(_this.props.address);\n                _context2.next = 12;\n                return plasticBaleSC.methods.addBidder(_this.state.registrationSCAddr, _accounts[0]).send({\n                  from: _accounts[0]\n                });\n\n              case 12:\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](5);\n\n                _this.setState({\n                  errorMessage: _context2.t0.message\n                });\n\n              case 17:\n                // if errorMsg is empty, registration is successful\n                if (!_this.state.errorMessage) {\n                  _this.setState({\n                    join: true\n                  });\n                }\n\n                _this.setState({\n                  loading: false\n                });\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[5, 14]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"findHighestBidder\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(address) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context3.sent;\n                _context3.next = 5;\n                return registerContract.methods.getBuyerDetails(address).call(function (error, result) {\n                  this.setState({\n                    highestBidder: result[1],\n                    highestBidderAddress: result[0]\n                  });\n                }.bind(_assertThisInitialized(_this)));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onPlaceBid\", /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n        var accounts, plasticBaleSC;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  loading2: true,\n                  errorMessage: ''\n                });\n\n                _context4.prev = 2;\n                _context4.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context4.sent;\n                plasticBaleSC = plasticBaleContract(_this.props.address);\n                _context4.next = 9;\n                return plasticBaleSC.methods.placeBid(_this.state.registrationSCAddr, _this.state.bid).send({\n                  from: accounts[0],\n                  value: _this.state.bid\n                });\n\n              case 9:\n                _context4.next = 14;\n                break;\n\n              case 11:\n                _context4.prev = 11;\n                _context4.t0 = _context4[\"catch\"](2);\n\n                _this.setState({\n                  errorMessage: _context4.t0.message\n                });\n\n              case 14:\n                // if errorMsg is empty, registration is successful\n                if (!_this.state.errorMessage) _this.setState({\n                  hasNoError: true\n                });\n\n                _this.setState({\n                  loading2: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[2, 11]]);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onExitAuction\", /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(event) {\n        var accounts, plasticBaleSC;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  loading3: true,\n                  errorMessage: ''\n                });\n\n                _context5.prev = 2;\n                _context5.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context5.sent;\n                plasticBaleSC = plasticBaleContract(_this.props.address);\n                _context5.next = 9;\n                return plasticBaleSC.methods.exitAuction(_this.state.registrationSCAddr).send({\n                  from: accounts[0]\n                });\n\n              case 9:\n                _this.setState({\n                  join: false\n                });\n\n                _context5.next = 15;\n                break;\n\n              case 12:\n                _context5.prev = 12;\n                _context5.t0 = _context5[\"catch\"](2);\n\n                _this.setState({\n                  errorMessage: _context5.t0.message\n                });\n\n              case 15:\n                // if errorMsg is empty, registration is successful\n                if (!_this.state.errorMessage) _this.setState({\n                  hasNoError: true\n                });\n\n                _this.setState({\n                  loading3: false\n                });\n\n              case 17:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[2, 12]]);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onEndAuction\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var accounts, plasticBaleSC;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context6.prev = 1;\n              _context6.next = 4;\n              return web3.eth.getAccounts();\n\n            case 4:\n              accounts = _context6.sent;\n              plasticBaleSC = plasticBaleContract(_this.props.address);\n              _context6.next = 8;\n              return plasticBaleSC.methods.endAuction().send({\n                from: accounts[0],\n                gas: 250983\n              });\n\n            case 8:\n              _this.setState({\n                notOver: false\n              });\n\n              _context6.next = 16;\n              break;\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](1);\n              // REVERT REASON IS ALMOST SHOWN HERE\n              console.log(_context6.t0);\n\n              _this.setState({\n                errorMessage: _context6.t0\n              });\n\n              _this.setState({\n                hasError: false\n              });\n\n            case 16:\n              _this.setState({\n                loading: false\n              });\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 11]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"convertToEther\", function () {\n      _this.setState({\n        dollars: false,\n        eth: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"convertToDollars\", function () {\n      var dollar = _this.state.highestBid;\n      dollar = (dollar * _this.state.cryptos.ETH.USD).toFixed(2);\n      console.log(dollar);\n\n      _this.setState({\n        dollarValue: dollar,\n        dollars: true,\n        eth: false\n      });\n    });\n\n    _this.state = {\n      join: false,\n      registrationSCAddr: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n      errorMessage: '',\n      loading: false,\n      totalBidders: 0,\n      highestBid: 0,\n      closingTime: 0,\n      highestBidder: 'No bids placed',\n      highestBidderAddress: '',\n      bid: '',\n      loading2: false,\n      loading3: false,\n      cryptos: [],\n      dollarValue: 0,\n      dollars: false,\n      eth: true\n    };\n    _this.componentDidMount = _this.componentDidMount.bind(_assertThisInitialized(_this));\n    _this.getTimeRemaining = _this.getTimeRemaining.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(joinAuction, [{\n    key: \"initializeClock\",\n    value: function initializeClock(id, endtime) {\n      var _this2 = this;\n\n      var clock = document.getElementById(id);\n      var daysSpan = clock.querySelector('.days');\n      var hoursSpan = clock.querySelector('.hours');\n      var minutesSpan = clock.querySelector('.minutes');\n      var secondsSpan = clock.querySelector('.seconds');\n\n      var updateClock = function updateClock() {\n        var t = _this2.getTimeRemaining(endtime);\n\n        daysSpan.innerHTML = t.days;\n        hoursSpan.innerHTML = ('0' + t.hours).slice(-2);\n        minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);\n        secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);\n\n        if (t.total <= 0) {\n          clearInterval(timeinterval);\n\n          _this2.onEndAuction();\n        }\n      };\n\n      updateClock();\n      var timeinterval = setInterval(updateClock, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          join = _this$state.join,\n          dollars = _this$state.dollars,\n          eth = _this$state.eth,\n          closingTime = _this$state.closingTime;\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 17\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }\n      }, \" Plastic Bale being auctioned:\", __jsx(\"h3\", {\n        style: {\n          'overflow': 'hidden',\n          'text-overflow': 'ellipsis'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 18\n        }\n      }, \" \", this.props.address, \" \"), \" \"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"AuctionContainer\",\n        style: {\n          'align-content': 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }\n      }, __jsx(Statistic.Group, {\n        widths: \"three\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 25\n        }\n      }, dollars == true && eth == false ? __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 65\n        }\n      }, __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 33\n        }\n      }, __jsx(Statistic.Value, {\n        text: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 37\n        }\n      }, this.state.dollarValue, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 41\n        }\n      }), \"USD\"), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 37\n        }\n      }, \"Highest Bid\"))) : __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 36\n        }\n      }, __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 37\n        }\n      }, __jsx(Statistic.Value, {\n        text: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 41\n        }\n      }, this.state.highestBid, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 45\n        }\n      }), \"ETH\"), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 41\n        }\n      }, \"Highest Bid\"))), __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 29\n        }\n      }, __jsx(Statistic.Value, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 33\n        }\n      }, __jsx(Icon, {\n        name: \"users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 37\n        }\n      }), \" \", this.state.totalBidders), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 33\n        }\n      }, \"Total Bidders\")), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 29\n        }\n      }), __jsx(Statistic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 29\n        }\n      }, __jsx(Statistic.Value, {\n        text: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 33\n        }\n      }, __jsx(Icon, {\n        name: \"user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 37\n        }\n      }), \" \", this.state.highestBidder), __jsx(Statistic.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 33\n        }\n      }, \"Highest Bidder\"))))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 17\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"conversionButtons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 17\n        }\n      }, __jsx(Button.Group, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 21\n        }\n      }, __jsx(Button, {\n        onClick: this.convertToEther,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 25\n        }\n      }, \" Ether \"), __jsx(Button.Or, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 25\n        }\n      }), __jsx(Button, {\n        onClick: this.convertToDollars,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 25\n        }\n      }, \"Dollars\"))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 17\n        }\n      }), __jsx(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 17\n        }\n      }, \"Auction closing in:\"), __jsx(\"div\", {\n        id: \"clockdiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 25\n        }\n      }, __jsx(\"span\", {\n        \"class\": \"days\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 29\n        }\n      }), __jsx(\"div\", {\n        \"class\": \"smalltext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 29\n        }\n      }, \"Days\")), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 25\n        }\n      }, __jsx(\"span\", {\n        \"class\": \"hours\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 29\n        }\n      }), __jsx(\"div\", {\n        \"class\": \"smalltext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 29\n        }\n      }, \"Hours\")), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 25\n        }\n      }, __jsx(\"span\", {\n        \"class\": \"minutes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 29\n        }\n      }), __jsx(\"div\", {\n        \"class\": \"smalltext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 29\n        }\n      }, \"Minutes\")), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 25\n        }\n      }, __jsx(\"span\", {\n        \"class\": \"seconds\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 29\n        }\n      }), __jsx(\"div\", {\n        \"class\": \"smalltext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 29\n        }\n      }, \"Seconds\"))), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 21\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 27\n        }\n      }), join === false ? __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 36\n        }\n      }, __jsx(Grid.Row, {\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }\n      }, __jsx(Grid.Column, {\n        width: 6,\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 25\n        }\n      }, __jsx(Button, {\n        loading: this.state.loading,\n        onClick: this.onJoinAuction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 29\n        }\n      }, \"Join Auction \")))) : null, join && __jsx(\"div\", {\n        className: \"auctionInput\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 21\n        }\n      }, __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 25\n        }\n      }, __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 29\n        }\n      }, __jsx(Grid.Row, {\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 33\n        }\n      }, __jsx(Grid.Column, {\n        width: 4,\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 37\n        }\n      }, __jsx(Form, {\n        onSubmit: this.onPlaceBid,\n        error: !!this.state.errorMessage,\n        success: this.state.hasNoError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 41\n        }\n      }, __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 45\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 49\n        }\n      }, \"Amount\"), __jsx(Input, {\n        value: this.state.bid,\n        label: {\n          basic: true,\n          content: 'Ether'\n        },\n        labelPosition: \"right\",\n        onChange: function onChange(event) {\n          return _this3.setState({\n            bid: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 49\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Error!\",\n        content: this.state.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 45\n        }\n      }), __jsx(Message, {\n        success: true,\n        header: \"Success!\",\n        content: \"Bid is Placed!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 45\n        }\n      }), __jsx(Button, {\n        loading: this.state.loading2,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 45\n        }\n      }, \"Place Bid\")), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 41\n        }\n      }), __jsx(Button, {\n        loading: this.state.loading3,\n        onClick: this.onExitAuction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 41\n        }\n      }, \"Exit Auction \")))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(props) {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                //fetches address of the bale from URL\n                address = props.query.address;\n                return _context7.abrupt(\"return\", {\n                  address: address\n                });\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function getInitialProps(_x5) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return joinAuction;\n}(Component);\n\nexport default joinAuction;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DateCountdown$dynamic\");\n$RefreshReg$(_c2, \"DateCountdown\");","map":{"version":3,"sources":["/Users/maithabarsham/Desktop/RecycleChain/RecycleChain/pages/auctions/joinAuction.js"],"names":["React","Component","Form","Button","Input","Message","Icon","Container","Grid","Statistic","web3","plasticBaleContract","registerContract","Layout","dynamic","DateCountdown","ssr","axios","joinAuction","props","eth","getAccounts","accounts","plasticBaleSC","address","biddersnumber","highestbid","isJoin","time","getPastEvents","fromBlock","toBlock","error","events","myfunction","item","event","returnValues","Date","console","log","initializeClock","findHighestBidder","forEach","setState","totalBidders","highestBid","join","closingTime","get","then","res","cryptos","data","endtime","total","parse","seconds","Math","floor","minutes","hours","days","preventDefault","loading","errorMessage","methods","addBidder","state","registrationSCAddr","send","from","message","getBuyerDetails","call","result","highestBidder","highestBidderAddress","bind","loading2","placeBid","bid","value","hasNoError","loading3","exitAuction","endAuction","gas","notOver","hasError","dollars","dollar","ETH","USD","toFixed","dollarValue","componentDidMount","getTimeRemaining","id","clock","document","getElementById","daysSpan","querySelector","hoursSpan","minutesSpan","secondsSpan","updateClock","t","innerHTML","slice","clearInterval","timeinterval","onEndAuction","setInterval","convertToEther","convertToDollars","onJoinAuction","onPlaceBid","basic","content","target","onExitAuction","query"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Icon, Container, Grid, Statistic } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport plasticBaleContract from '../../ethereum/plasticBale';\nimport registerContract from '../../ethereum/register';\nimport Layout from '../../components/Layout';\nimport dynamic from 'next/dynamic';\nconst DateCountdown = dynamic(() => import('react-date-countdown-timer'), { ssr: false })\nimport axios from 'axios';\n\nclass joinAuction extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            join: false,\n            registrationSCAddr: '0x7126ec4f68added009015a1f5ac718c4896faa2e',\n            errorMessage: '',\n            loading: false,\n            totalBidders: 0,\n            highestBid: 0,\n            closingTime: 0,\n            highestBidder: 'No bids placed',\n            highestBidderAddress: '',\n            bid: '',\n            loading2: false,\n            loading3: false,\n            cryptos: [],\n            dollarValue: 0,\n            dollars: false,\n            eth: true,\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.getTimeRemaining = this.getTimeRemaining.bind(this);\n        \n    }\n\n\n    static async getInitialProps(props) {\n        //fetches address of the bale from URL\n        const { address } = props.query;\n\n        return { address };\n    }\n\n    componentDidMount = async () => {\n\n        const accounts = await web3.eth.getAccounts();\n        const plasticBaleSC = plasticBaleContract(this.props.address);\n\n        var biddersnumber = 0;\n        var highestbid = 0;\n        var isJoin = false;\n        var time = ''; //closing time\n       \n\n        plasticBaleSC.getPastEvents(\"allEvents\", { fromBlock: 0, toBlock: 'latest' }, (error, events) => {\n\n            const myfunction = (item) => {\n\n                if (item.event === 'bidderRegistered') {\n                    biddersnumber++;\n                    item.returnValues['bidderAddress'] === accounts[0] ? isJoin = true : null;\n\n\n                } else if (item.event === 'auctionStarted') {\n                    highestbid = item.returnValues['startingAmount'];\n\n                    //1. Get closing time from event\n                    time = new Date(item.returnValues['closingTime'] * 1000);\n                    console.log(time);\n                    this.initializeClock('clockdiv', time);\n                \n\n                } else if (item.event === 'bidderExited') {\n                    //console.log(item);\n                    item.returnValues['bidderAddress'] === accounts[0] ? isJoin = false : null;\n                    biddersnumber--;\n\n                } else if (item.event === 'bidPlaced') {\n                    highestbid = item.returnValues['amount'];\n                    this.findHighestBidder(item.returnValues['biddeAddress']);\n\n                }\n\n            };\n\n            events.forEach(myfunction);\n\n            this.setState({\n                totalBidders: biddersnumber,\n                highestBid: highestbid,\n                join: isJoin,\n                closingTime: time\n            });\n\n\n        });\n\n\n        axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=ETH&tsyms=USD')\n            .then(res => {\n                const cryptos = res.data;\n                console.log(cryptos);\n                this.setState({ cryptos: cryptos });\n            })\n\n    };\n\n\n\n    // Returns a reusable object\n    getTimeRemaining = (endtime) => {\n\n        const total = Date.parse(endtime) - Date.parse(new Date());\n        const seconds = Math.floor((total / 1000) % 60);\n        const minutes = Math.floor((total / 1000 / 60) % 60);\n        const hours = Math.floor((total / (1000 * 60 * 60)) % 24);\n        const days = Math.floor(total / (1000 * 60 * 60 * 24));\n\n        return {\n            total,\n            days,\n            hours,\n            minutes,\n            seconds\n        };\n    };\n\n\n\n      initializeClock(id, endtime) {\n        const clock = document.getElementById(id);\n        const daysSpan = clock.querySelector('.days');\n        const hoursSpan = clock.querySelector('.hours');\n        const minutesSpan = clock.querySelector('.minutes');\n        const secondsSpan = clock.querySelector('.seconds');\n      \n         const updateClock = () => {\n          const t = this.getTimeRemaining(endtime);\n      \n          daysSpan.innerHTML = t.days;\n          hoursSpan.innerHTML = ('0' + t.hours).slice(-2);\n          minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);\n          secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);\n      \n          if (t.total <= 0) {\n            clearInterval(timeinterval);\n            this.onEndAuction();\n          }\n        };\n    \n        updateClock();\n        const timeinterval = setInterval(updateClock, 1000);\n      }\n      \n\n\n\n    onJoinAuction = async (event) => {\n        event.preventDefault();\n        const accounts = await web3.eth.getAccounts();\n\n        this.setState({ loading: true, errorMessage: '' });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const plasticBaleSC = plasticBaleContract(this.props.address);\n\n            await plasticBaleSC.methods\n                .addBidder(this.state.registrationSCAddr, accounts[0])\n                .send({ from: accounts[0] });\n\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage) {\n            this.setState({ join: true });\n        }\n\n        this.setState({ loading: false });\n    };\n\n\n\n    findHighestBidder = async (address) => {\n\n        const accounts = await web3.eth.getAccounts();\n        await registerContract.methods\n            .getBuyerDetails(address).call(function (error, result) {\n                this.setState({\n                    highestBidder: result[1],\n                    highestBidderAddress: result[0],\n                });\n\n            }.bind(this));\n\n    };\n\n\n    onPlaceBid = async (event) => {\n\n        event.preventDefault();\n\n        this.setState({ loading2: true, errorMessage: '' });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const plasticBaleSC = plasticBaleContract(this.props.address);\n            await plasticBaleSC.methods\n                .placeBid(this.state.registrationSCAddr, this.state.bid)\n                .send({ from: accounts[0], value: this.state.bid });\n        }\n        catch (err) {\n            this.setState({ errorMessage: err.message });\n\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage)\n            this.setState({ hasNoError: true });\n\n\n        this.setState({ loading2: false });\n\n    };\n\n\n    onExitAuction = async (event) => {\n\n        event.preventDefault();\n\n        this.setState({ loading3: true, errorMessage: '' });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const plasticBaleSC = plasticBaleContract(this.props.address);\n            await plasticBaleSC.methods\n                .exitAuction(this.state.registrationSCAddr)\n                .send({ from: accounts[0] });\n            this.setState({ join: false });\n        }\n        catch (err) {\n            this.setState({ errorMessage: err.message });\n\n        }\n\n        // if errorMsg is empty, registration is successful\n        if (!this.state.errorMessage)\n            this.setState({ hasNoError: true });\n\n\n        this.setState({ loading3: false });\n\n    };\n\n    onEndAuction = async () => {\n\n       \n\n        this.setState({ loading: true });\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const plasticBaleSC = plasticBaleContract(this.props.address);\n            await plasticBaleSC.methods.endAuction().send({ from: accounts[0], gas: 250983 });\n            this.setState({ notOver: false });\n\n        } catch (err) {\n            // REVERT REASON IS ALMOST SHOWN HERE\n            console.log(err);\n            this.setState({ errorMessage: err });\n            this.setState({ hasError: false });\n        }\n\n        this.setState({ loading: false });\n    };\n\n    convertToEther = () => {\n        this.setState({ dollars: false, eth: true });\n\n    };\n\n    convertToDollars = () => {\n\n        var dollar = this.state.highestBid;\n        dollar = (dollar * this.state.cryptos.ETH.USD).toFixed(2);\n        console.log(dollar);\n\n        this.setState({ dollarValue: dollar, dollars: true, eth: false });\n\n    };\n\n\n    render() {\n\n        const { join, dollars, eth, closingTime } = this.state;\n\n        return (\n            <Layout>\n                <link rel=\"stylesheet\"\n                    href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css\"\n                />\n\n                <div>\n\n                    <h2> Plastic Bale being auctioned:\n                 <h3 style={{'overflow': 'hidden', 'text-overflow': 'ellipsis'}}> {this.props.address} </h3> </h2>\n                    <br />\n\n                    <div className='AuctionContainer' style={{'align-content': 'center'}}>\n\n                        <Statistic.Group widths='three'>\n\n                            {dollars == true && eth == false ? (<div>\n                                <Statistic>\n                                    <Statistic.Value text>\n                                        {this.state.dollarValue}\n                                        <br />\n                            USD\n                            </Statistic.Value>\n                                    <Statistic.Label>Highest Bid</Statistic.Label>\n                                </Statistic>\n\n                            </div>)\n                                : (<div>\n                                    <Statistic>\n                                        <Statistic.Value text>\n                                            {this.state.highestBid}\n                                            <br />\n                                ETH\n                                </Statistic.Value>\n                                        <Statistic.Label>Highest Bid</Statistic.Label>\n                                    </Statistic>\n\n                                </div>)}\n\n\n\n\n\n                            <Statistic>\n                                <Statistic.Value>\n                                    <Icon name='users' /> {this.state.totalBidders}\n                                </Statistic.Value>\n                                <Statistic.Label>Total Bidders</Statistic.Label>\n                            </Statistic>\n\n                            <br />\n\n                            <Statistic>\n                                <Statistic.Value text>\n                                    <Icon name='user' /> {this.state.highestBidder}\n                                    {/*this.state.highestBidderAddress*/}\n                                </Statistic.Value>\n                                <Statistic.Label>Highest Bidder</Statistic.Label>\n                            </Statistic>\n\n\n                        </Statistic.Group>\n                    </div>\n                </div>\n\n                <br />\n                <br />\n\n\n                <div className='conversionButtons'>\n                    <Button.Group size='large'>\n                        <Button onClick={this.convertToEther}> Ether </Button>\n                        <Button.Or />\n                        <Button onClick={this.convertToDollars}>Dollars</Button>\n                    </Button.Group>\n                </div>\n\n                <br />\n\n                <h4>Auction closing in:</h4>\n\n                <div id=\"clockdiv\">\n                        <div>\n                            <span class=\"days\"></span>\n                            <div class=\"smalltext\">Days</div>\n                        </div>\n                        <div>\n                            <span class=\"hours\"></span>\n                            <div class=\"smalltext\">Hours</div>\n                        </div>\n                        <div>\n                            <span class=\"minutes\"></span>\n                            <div class=\"smalltext\">Minutes</div>\n                        </div>\n                        <div>\n                            <span class=\"seconds\"></span>\n                            <div class=\"smalltext\">Seconds</div>\n                        </div>\n                </div>\n\n                    <br /><br/>\n\n\n                {join === false ? (<Grid>\n                    <Grid.Row centered>\n                        <Grid.Column width={6} textAlign=\"center\">\n                            <Button loading={this.state.loading} onClick={this.onJoinAuction}>Join Auction </Button>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                ) : null}\n\n\n                {join && (\n\n                    <div className='auctionInput'>\n                        <Container>\n                            <Grid>\n                                <Grid.Row centered>\n                                    <Grid.Column width={4} textAlign=\"center\">\n                                        <Form onSubmit={this.onPlaceBid} error={!!this.state.errorMessage} success={this.state.hasNoError}>\n\n                                            <Form.Field>\n                                                <label>Amount</label>\n                                                <Input value={this.state.bid}\n                                                    label={{ basic: true, content: 'Ether' }}\n                                                    labelPosition='right'\n                                                    onChange={event => this.setState({ bid: event.target.value })} />\n                                            </Form.Field>\n\n                                            <Message error header=\"Error!\" content={this.state.errorMessage} />\n\n\n                                            <Message success header=\"Success!\" content=\"Bid is Placed!\" />\n\n\n                                            <Button loading={this.state.loading2} type='submit'>Place Bid</Button>\n                                        </Form>\n\n                                        <br />\n\n                                        <Button loading={this.state.loading3} onClick={this.onExitAuction}>Exit Auction </Button>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                        </Container>\n\n\n                    </div>\n\n                )}\n\n            </Layout>\n        );\n    }\n\n\n\n}\n\nexport default joinAuction; \n"]},"metadata":{},"sourceType":"module"}